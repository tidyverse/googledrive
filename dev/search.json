[{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to googledrive","title":"Contributing to googledrive","text":"Making pull request Package philosophy Documentation Testing Continuous integration Code Conduct","code":""},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"making-a-pull-request","dir":"","previous_headings":"","what":"Making a pull request","title":"Contributing to googledrive","text":"Uphold design principles package mechanics outlined . doubt, discuss issue lots work. Make sure package still passes R CMD check locally . ’s good idea touch anything, baseline. Match existing code style. intent follow https://style.tidyverse.org. Please use styler package re-style code touch. Tests: please try run tests least exercise PR. Add tests, relevant. things go sideways, just say . painfully aware ’s easy test API-wrapping, auth-requiring packages like googledrive open constructive feedback. . Documentation: Update documentation source, PR changes behavior. use roxygen2, must edit roxygen comments function; never edit NAMESPACE .Rd files hand. . Website: pkgdown-created website built deployed automatically via Travis-CI. changes require edit reference section _pkgdown.yml, .e. make sure function appears . GOOD PR title: “Obtain user’s intent via mind-reading; fixes #86”. BAD PR title: “Fixes #1043”. Please remind us issue #1043 ! BAD PR title: “Something #345”. actually close issue #345 upon merging. Use magic words. Fixing typo docs , still awesome deeply appreciated. Fixing bug adding new feature bullet-worthy.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"package-philosophy","dir":"","previous_headings":"","what":"Package philosophy","title":"Contributing to googledrive","text":"doubt, take cue Unix file system commands Google Drive browser UI. reasonable default whenever humanly possible. applies auth, file name, file location, etc. pipe-friendly. ’s well-documented (e.g. working example!), doesn’t really exist. Accommodate initial file specification via path name, constantly push downstream work based file id. Return tidy tibble, almost always dribble, whenever makes sense. high-level interface typical user. functions help accomplish common tasks, hopefully natural way. Examples: drive_find(), drive_upload(), drive_download(). hand-picked functions support passing extra parameters API request via ..., don’t across board. also low-level interface used internally. example function request_generate(). functions exported use programming-oriented users willing read Drive API docs want things haven’t made available high-level interface.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"documentation","dir":"","previous_headings":"Package mechanics","what":"Documentation","title":"Contributing to googledrive","text":"use roxygen2, specifically Markdown syntax, create NAMESPACE .Rd files. edits documentation done roxygen comments associated function object. Use templates inheritance repeat documentation whenever helpful, without actually repeating source. Use internal external links liberally, .e. docs googledrive Drive API resources. encourage working examples include necessary setup teardown. cases, ’ll put inside \\dontrun{}. ’s nice pull request includes result running devtools::document(), update NAMESPACE .Rd files, ’s optional. good reason document() different version roxygen2 installed sprays minor formatting changes across .Rd files nothing PR.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"testing","dir":"","previous_headings":"Package mechanics","what":"Testing","title":"Contributing to googledrive","text":"use testthat. many tests (1) require authorization (2) rely existence specific files folders. Therefore, fully test googledrive, setup. small changes, ’s fine test specific change locally make PR. Keep reading explanation run full tests googledrive.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"auth","dir":"","previous_headings":"Package mechanics > Testing","what":"Auth","title":"Contributing to googledrive","text":"token put force beginning test run first lines tests/testthat/helper.R. reflects approach documented gargle vignette Managing tokens securely. use embedded, encrypted service account token. want use token already , edit lines use techniques described gargle vignette Non-interactive auth. Don’t commit submit change part pull request; just use pragmatic way run tests token hand.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"r-scripts-for-setup-and-clean","dir":"","previous_headings":"Package mechanics > Testing","what":"R scripts for setup and clean","title":"Contributing to googledrive","text":"speed reasons, googledrive tests expect find certain pre-existing files folders, .e. don’t full setup tear run. setup beginning googledrive development leave files place work. ’re done, e.g., PR complete, can clean files. test run also creates destroys files, locally Drive, different ’re talking . Source tests/testthat/driver.R extract aggregate current setup clean code across test files. creates two R scripts: tests/testthat/-test-setup.R tests/testthat/-test-clean.R. Inspect . truly ready perform setup clean, edit code set SETUP CLEAN variable TRUE instead FALSE. friction intentional, don’t accidentally create delete lots Drive files without meaning . Render -test-setup.R Knit button RStudio like : also just source , ’s nice report records actually happened. now able run tests via Build > Test Package Build > Check Package RStudio via devtools::test(). can leave setup place long ’re working googledrive, .e. don’t need every test run. fact, whole point! googledrive development , render clean script: , read report look happened, case anything trashed (btw, let us know can fix!). ’re satisfied files touched, can drive_empty_trash() truly delete test files.","code":"## gather all the test setup and clean code from individual test files source(testthat::test_path(\"driver.R\")) ## leaves behind: ##   * all-test-setup.R ##   * all-test-clean.R rmarkdown::render(testthat::test_path(\"all-test-setup.R\")) rmarkdown::render(testthat::test_path(\"all-test-clean.R\"))"},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"adding-tests","dir":"","previous_headings":"Package mechanics > Testing","what":"Adding tests","title":"Contributing to googledrive","text":"’re going add modify tests, follow conventions: Test files marked knitr chunk headers comments, e.g. # ---- clean ---- # ---- tests ----. enables driver.R script isolate setup cleaning code. Don’t break . file truly necessary can setup advance persist? , order make future test runs faster. Put associated setup clean code top test file. test files name documents exist made . Use # ---- nm_fun ---- chunk define naming functions used test file (see existing files examples). Always use one functions generate file names. Use nm_() test files persist. Use me_() ephemeral test files created destroyed one test run. Example structure self-documenting name persistent test file: Example structure self-documenting name ephemeral test file: Note current user appended! concurrent test runs attempt edit files.","code":"move-files-into-me-TEST-drive-mv <informative-slug>-TEST-<test-context> DESCRIPTION-TEST-drive-upload-travis <informative-slug>-TEST-<test-context>-<user>"},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"continuous-integration","dir":"","previous_headings":"Package mechanics","what":"Continuous integration","title":"Contributing to googledrive","text":"googledrive checked large matrix R versions operating systems via GitHub Actions. use codecov track test coverage. general, package subjected R CMD check, unit tests, test coverage analysis every push GitHub. internal branches, encrypted service account token available GHA, tests Drive API can run. Things bit different pull requests outside contributors, however. PRs access encrypted tokens, therefore many tests must skipped. PR still vetted via R CMD check tests call Drive API can still run. make PR, ’s good idea check back minutes see results. problems, read log try correct problem proactively. “squash merge” pull requests, internal external, don’t agonize commit history.","code":""},{"path":"https://googledrive.tidyverse.org/dev/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to googledrive","text":"Please note googledrive project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://googledrive.tidyverse.org/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 googledrive authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://googledrive.tidyverse.org/dev/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with googledrive","title":"Getting help with googledrive","text":"Thanks using googledrive. filing issue, places explore pieces put together make process smooth possible. Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site. Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed. right place, need file issue, please review “File issues” paragraph tidyverse contributing guidelines. Thanks help!","code":""},{"path":"https://googledrive.tidyverse.org/dev/articles/bring-your-own-client.html","id":"role-of-the-oauth-client-and-api-key","dir":"Articles","previous_headings":"","what":"Role of the OAuth client and API key","title":"Bring your own OAuth client or API key","text":"googledrive helps obtain token work Google Drive API R primarily drive_auth() function. hood, process relies OAuth client secret, .k.. “OAuth client”. googledrive can also make unauthorized calls Google Drive API, example accessing file available “Anyone link”, sending API key, instead user token. problem googledrive’s internal OAuth client API key prefer use , can configure . describe .","code":""},{"path":"https://googledrive.tidyverse.org/dev/articles/bring-your-own-client.html","id":"get-an-oauth-client-and-tell-googledrive-about-it","dir":"Articles","previous_headings":"","what":"Get an OAuth client and tell googledrive about it","title":"Bring your own OAuth client or API key","text":"Follow instructions gargle article get API credentials get OAuth client ID secret. Now register googledrive. Preferred method: Provide path JSON file downloaded Google Cloud Platform Console. also possible, though discouraged, directly use constructor gargle::gargle_oauth_client(). Confirm success carry ! can see currently configured OAuth client like : see client now. rest R session, get new token drive_auth(), OAuth client used.","code":"drive_auth_configure(   path = \"/path/to/the/JSON/you/downloaded/from/google/dev/console.json\" ) drive_oauth_client()"},{"path":"https://googledrive.tidyverse.org/dev/articles/bring-your-own-client.html","id":"get-an-api-key-and-tell-googledrive-about-it","dir":"Articles","previous_headings":"","what":"Get an API key and tell googledrive about it","title":"Bring your own OAuth client or API key","text":"Follow instructions gargle article get API credentials get API key. probably want use GCP project create OAuth client () API key. Now register googledrive. Confirm success carry ! can see currently configured API key like : see API key now. rest R session, go de-authorized state via drive_deauth(), API key sent request.","code":"drive_auth_configure(api_key = \"YOUR_API_KEY_GOES_HERE\") drive_api_key()"},{"path":"https://googledrive.tidyverse.org/dev/articles/example-files.html","id":"local-example-files","dir":"Articles","previous_headings":"","what":"Local example files","title":"Example Files","text":"Call drive_examples_local() get full filepaths. basename() (fs::path_file()) handy functions getting just filename. can filter files providing regular expression. want exactly one file, use singular drive_example_local() provide file’s name (sufficiently specific regular expression): ’s might use one examples start demonstrating something googledrive:","code":"(x <- drive_examples_local()) #> [1] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.csv\"     #> [2] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.jpg\"     #> [3] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.pdf\"     #> [4] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.txt\"     #> [5] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/imdb_latin1.csv\" #> [6] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/r_about.html\"    #> [7] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/r_logo.jpg\"  basename(x) #> [1] \"chicken.csv\"     \"chicken.jpg\"     \"chicken.pdf\"     #> [4] \"chicken.txt\"     \"imdb_latin1.csv\" \"r_about.html\"    #> [7] \"r_logo.jpg\" drive_examples_local(\"csv\") %>% basename() #> [1] \"chicken.csv\"     \"imdb_latin1.csv\" drive_examples_local(\"chicken.jpg\") %>% basename() #> [1] \"chicken.jpg\"  drive_examples_local(\"imdb\") %>% basename() #> [1] \"imdb_latin1.csv\" new_google_sheet <- drive_examples_local(\"chicken.csv\") %>%    drive_upload(type = \"spreadsheet\") # ... example or reprex continues ..."},{"path":"https://googledrive.tidyverse.org/dev/articles/example-files.html","id":"remote-example-files","dir":"Articles","previous_headings":"","what":"Remote example files","title":"Example Files","text":"Call drive_examples_remote() get dribble remote example files. also reveal MIME type. ’ll notice two files aren’t among local example files, derived : chicken_doc: Google Document made chicken.txt chicken_sheet: Google Sheet made chicken.csv ’s clickable table remote example files: Accessing remote example files works just like local files. Provide regular expression specify name target file(s). Use singular form target exactly one file. ’s might use one examples start demonstrating something googledrive:","code":"drive_examples_remote() %>%    drive_reveal(\"mime_type\") #> # A dribble: 9 × 4 #>   name            mime_type                        id       drive_resource #>   <chr>           <chr>                            <drv_id> <list>         #> 1 chicken_doc     application/vnd.google-apps.doc… 1X9pd4n… <named list>   #> 2 chicken_sheet   application/vnd.google-apps.spr… 1SeFXkr… <named list>   #> 3 chicken.csv     text/csv                         1VOh6wW… <named list>   #> 4 chicken.jpg     image/jpeg                       1b2_Zjz… <named list>   #> 5 chicken.pdf     application/pdf                  13OQcAo… <named list>   #> 6 chicken.txt     text/plain                       1wOLeWV… <named list>   #> 7 imdb_latin1.csv text/csv                         1YJSVa0… <named list>   #> 8 r_about.html    text/html                        1sfCT0z… <named list>   #> 9 r_logo.jpg      image/jpeg                       1J4v-iy… <named list> drive_examples_remote(\"chicken\") #> # A dribble: 6 × 3 #>   name          id       drive_resource    #>   <chr>         <drv_id> <list>            #> 1 chicken_doc   1X9pd4n… <named list [29]> #> 2 chicken_sheet 1SeFXkr… <named list [29]> #> 3 chicken.csv   1VOh6wW… <named list [36]> #> 4 chicken.jpg   1b2_Zjz… <named list [38]> #> 5 chicken.pdf   13OQcAo… <named list [37]> #> 6 chicken.txt   1wOLeWV… <named list [37]>  drive_example_remote(\"logo\") #> # A dribble: 1 × 3 #>   name       id                                drive_resource    #>   <chr>      <drv_id>                          <list>            #> 1 r_logo.jpg 1J4v-iyydf1Cad3GjDkGRrynauV9JFOyW <named list [38]> new_google_doc <- drive_examples_remote(\"chicken_doc\") %>%    drive_cp(name = \"I have a chicken problem\") # ... example or reprex continues ..."},{"path":"https://googledrive.tidyverse.org/dev/articles/file-identification.html","id":"how-to-get-one-or-more-files-in-a-dribble","dir":"Articles","previous_headings":"","what":"How to get one or more files in a dribble","title":"File Identification","text":"get files dribble first place? Two main functions : drive_find(): Similar https://drive.google.com. Lists files lets narrow things based name file properties. drive_get(): Get files name – file path, actually – id, including URL.","code":""},{"path":"https://googledrive.tidyverse.org/dev/articles/file-identification.html","id":"drive_find","dir":"Articles","previous_headings":"","what":"drive_find()","title":"File Identification","text":"Read help complete documentation many ways call drive_find(): drive_find() exhaustive file listing filtering file properties.","code":"drive_find() drive_find(n_max = 40) drive_find(pattern = \"chicken\") drive_find(type = \"pdf\") drive_find(type = \"folder\") drive_find(type = \"spreadsheet\") drive_find(trashed = TRUE) drive_find(q = \"fullText contains 'project'\") drive_find(q = \"modifiedTime > '2019-04-21T12:00:00'\", order_by = \"recency\") drive_find(q = c(\"starred = true\", \"visibility = 'anyoneWithLink'\"))"},{"path":"https://googledrive.tidyverse.org/dev/articles/file-identification.html","id":"drive_get","dir":"Articles","previous_headings":"","what":"drive_get()","title":"File Identification","text":"Read help complete documentation calls drive_get() can look: drive_get() targetted file fetching based name, path, id, URL.","code":"drive_get(\"i_am_a_file_name\") drive_get(\"i/am/a/deeply/buried/file.txt\") drive_get(\"i/am/a/folder/\") drive_get(c(\"i_am_a_file_name\", \"path/to/file\")) drive_get(as_id(\"abcdefghijklm\")) drive_get(as_id(c(\"abcdefghijklm\", \"nopqrstuvwxyz\"))) drive_get(id = \"abcdefghijklm\") drive_get(id = c(\"abcdefghijklm\", \"nopqrstuvwxyz\")) drive_get(as_id(\"https://docs.google.com/document/d/abcdefghijklm/edit\"))"},{"path":"https://googledrive.tidyverse.org/dev/articles/file-identification.html","id":"other-handy-functions","dir":"Articles","previous_headings":"","what":"Other handy functions","title":"File Identification","text":"drive_reveal() adds bonus information dribble, either excavating drive_resource variable calling Drive API. Use dribble containing files interest. drive_ls() lists files specified folder. ’s thin wrapper around drive_find(), capabilities available. drive_browse() open file browser.","code":"drive_reveal(files, \"path\") drive_reveal(files, \"trashed\") drive_reveal(files, \"mime_type\") drive_reveal(files, \"permissions\") drive_reveal(files, \"published\") drive_ls(\"i/am/a/folder/\", type = \"spreadsheet\") drive_browse(i_am_a_dribble) drive_browse(\"i_am_a_file_name\") drive_browse(as_id(\"abcdefghijklm\"))"},{"path":"https://googledrive.tidyverse.org/dev/articles/messages-and-errors.html","id":"user-facing-messages","dir":"Articles","previous_headings":"","what":"User-facing messages","title":"Messages and errors in googledrive","text":"Everything emitted helpers utils-ui.R: specifically, drive_bullets() (, errors, drive_abort()). helpers wrappers around cli functions, cli::cli_bullets(). may demo well via pkgdown, interactive experience nice. helpers encourage consistent styling make possible selectively silence messages coming googledrive. googledrive message helpers: Use cli package get interpolation, inline markup, pluralization. Eventually route rlang::inform(), important inform() prints standard output interactive sessions. means informational messages won’t “look” errors can generally stylish, least IDEs like RStudio. Use googledrive-wide style choices, : custom .drivepath style like cli’s inline .file style, except cyan instead blue. built-.field style tweaked flanked single quotes -color situation. typical “*” bullet isn’t colored, since ’ve got much color going . control googledrive_quiet option. ’s unset, default show messages (unless ’re testing, .e. environment variable TESTTHAT \"true\"). options(googledrive_quiet = TRUE) suppress messages. withr-style convenience helpers: local_drive_quiet() with_drive_quiet().","code":"drive_bullets(c(         \"noindent\",   \" \" = \"indent\",   \"*\" = \"bullet\",   \">\" = \"arrow\",   \"v\" = \"success\",   \"x\" = \"danger\",   \"!\" = \"warning\",   \"i\" = \"info\" )) #> noindent #>   indent #> • bullet #> → arrow #> ✔ success #> ✖ danger #> ! warning #> ℹ info"},{"path":"https://googledrive.tidyverse.org/dev/articles/messages-and-errors.html","id":"inline-styling","dir":"Articles","previous_headings":"User-facing messages","what":"Inline styling","title":"Messages and errors in googledrive","text":"use inline classes: .drivepath name , occasionally, (partial) path Drive file .field value argument, e.g. MIME type .code column data frame reserved words, NULL, TRUE, NA .arg, .fun, .path, .cls, .url usual purpose relevant cli docs: CLI inline markup Building Semantic CLI","code":"drive_bullets(c(   \"We need to talk about the {.arg foofy} argument to {.fun blarg}\",   \"You provided {.field a_very_weird_value} and I suspect you're confused \\\\    about something\" )) #> We need to talk about the `foofy` argument to `blarg()` #> You provided a_very_weird_value and I suspect you're confused about #> something"},{"path":"https://googledrive.tidyverse.org/dev/articles/messages-and-errors.html","id":"bullets","dir":"Articles","previous_headings":"User-facing messages","what":"Bullets","title":"Messages and errors in googledrive","text":"use different bullet points drive_bullets() convey mood. Exclamation mark \"!\": ’m throwing error warning, want get user’s attention, seems likely (certain) misunderstand something googledrive Google Drive Drive files. Examples: Information “”: ’m just keeping informed work going. cases determine nothing can , sometimes use \"!\" sometimes use \"\". depends whether feels like user known work possible needed.","code":"drive_bullets(c(   \"!\" = \"Ignoring {.arg type}. Only consulted for native Google file types.\",   \" \" = \"MIME type of {.arg file}: {.field mime_type}.\" )) #> ! Ignoring `type`. Only consulted for native Google file types. #>   MIME type of `file`: mime_type.  drive_bullets(c(   \"!\" = \"Currently only fields for the {.field files} resource can be \\\\          checked for validity.\",   \" \" = \"Nothing done.\" )) #> ! Currently only fields for the files resource can be checked for #>   validity. #>   Nothing done.  drive_bullets(c(   \"!\" = \"No updates specified.\" )) #> ! No updates specified.  drive_bullets(c(   \"!\" = \"No such file to delete.\" )) #> ! No such file to delete. drive_bullets(c(   \"i\" = \"No pre-existing file at this filepath. Calling \\\\          {.fun drive_upload}.\" )) #> ℹ No pre-existing file at this filepath. Calling `drive_upload()`.  drive_bullets(c(   \"i\" = \"Pre-existing file at this filepath. Calling \\\\          {.fun drive_update}.\" )) #> ℹ Pre-existing file at this filepath. Calling `drive_update()`.  drive_bullets(c(   \"i\" = \"Not logged in as any specific Google user.\" )) #> ℹ Not logged in as any specific Google user."},{"path":"https://googledrive.tidyverse.org/dev/articles/messages-and-errors.html","id":"programmatic-generation-of-bullets","dir":"Articles","previous_headings":"User-facing messages","what":"Programmatic generation of bullets","title":"Messages and errors in googledrive","text":"Often need create bullets R object, character vector dribble. needs happen: Map cli-using string template object get character vector Truncate vector aesthetically pleasing way Apply names vector get desired bullet points gargle_map_cli() new generic gargle turns object vector strings cli markup. Currently gargle exports methods character (NULL default) googlesheets4 defines method dribble. likely replaced something cli due course. default gargle_map_cli.character() just applies .field style, .e. template \"{.field <<x>>}\". template can customized, need something else. Note use non-standard glue delimiters (<< >>, default), interpolating string glue/cli markup, {} usual meaning. gargle_map_cli.dribble() method makes cli-marked string row dribble, .e. Drive file. gargle_map_cli.dribble() also allows custom template, ’s complicated less common situation character. won’t get . (don’t consider dribble styling finalized yet.) result gargle_map_cli() gets processed gargle::bulletize(), adds bullet-specifying names aesthetically pleasing truncation. ’s conceivable cli gain better way vectorization, works now. Known dysfunction: ’s inefficient gargle_map_cli() whole object, truncate bulletize(). ’s easy. contexts, like tibble printing, formatting stuff never see light day really punishing. ’m sure really worry .","code":"gargle_map_cli(letters[1:3]) #> [1] \"{.field a}\" \"{.field b}\" \"{.field c}\" gargle_map_cli(letters[4:6], template = \"how about a path {.path <<x>>}?\") #> [1] \"how about a path {.path d}?\" \"how about a path {.path e}?\" #> [3] \"how about a path {.path f}?\" dat <- drive_find(n_max = 5) gargle_map_cli(dat) #> [1] \"{.drivepath name-squatter-mv} {cli::col_grey('<id: 1ug4iRUdoCJtH1sdJEPi4JLqC6jMdAzIH>')}\"       #> [2] \"{.drivepath chicken-mv-renamed.txt} {cli::col_grey('<id: 1TsAlfzUcxc1FQCjWHfciLBep13nElm1I>')}\" #> [3] \"{.drivepath name-squatter-mv} {cli::col_grey('<id: 1fYW8GkaQ5pzxAaQZqg5YhVgUp7DZ9Zy6>')}\"       #> [4] \"{.drivepath chicken-mv-renamed.txt} {cli::col_grey('<id: 1kwbIWnW2fM3N0QL6GAKEzFzUNg0s7keJ>')}\" #> [5] \"{.drivepath name-squatter-mv} {cli::col_grey('<id: 1RvUjOVaTDTEf8k0q2QV5RnjvLqn44Xa5>')}\" bulletize(gargle_map_cli(letters)) #>               *               *               *               *  #>    \"{.field a}\"    \"{.field b}\"    \"{.field c}\"    \"{.field d}\"  #>               *                  #>    \"{.field e}\" \"… and 21 more\"  bulletize(gargle_map_cli(letters), bullet = \"x\", n_show = 2) #>               x               x                  #>    \"{.field a}\"    \"{.field b}\" \"… and 24 more\"  drive_bullets(c(   \"These are surprising things:\",   bulletize(gargle_map_cli(letters), bullet = \"!\") )) #> These are surprising things: #> ! a #> ! b #> ! c #> ! d #> ! e #>   … and 21 more  dat <- drive_find(n_max = 10)  drive_bullets(c(   \"Some Drive files:\",   bulletize(gargle_map_cli(dat)) )) #> Some Drive files: #> • name-squatter-mv <id: 1ug4iRUdoCJtH1sdJEPi4JLqC6jMdAzIH> #> • chicken-mv-renamed.txt <id: 1TsAlfzUcxc1FQCjWHfciLBep13nElm1I> #> • name-squatter-mv <id: 1fYW8GkaQ5pzxAaQZqg5YhVgUp7DZ9Zy6> #> • chicken-mv-renamed.txt <id: 1kwbIWnW2fM3N0QL6GAKEzFzUNg0s7keJ> #> • name-squatter-mv <id: 1RvUjOVaTDTEf8k0q2QV5RnjvLqn44Xa5> #>   … and 5 more"},{"path":"https://googledrive.tidyverse.org/dev/articles/messages-and-errors.html","id":"errors","dir":"Articles","previous_headings":"","what":"Errors","title":"Messages and errors in googledrive","text":"currently using cli::cli_abort(), present dev version cli (late May 2021, cli version 2.5.0.9000). ’s wrapped drive_abort(), reason drive_bullets(), namely apply package-wide style tweaks. mechanics drive_abort() usage basically drive_bullets().","code":""},{"path":"https://googledrive.tidyverse.org/dev/articles/multiple-files.html","id":"upload-multiple-files-then-rename-them","dir":"Articles","previous_headings":"","what":"Upload multiple files, then rename them","title":"Dealing with multiple files","text":"Scenario: multiple local files want upload folder Drive. regret original names want rename . Load packages.","code":"library(googledrive) library(glue) library(tidyverse)"},{"path":"https://googledrive.tidyverse.org/dev/articles/multiple-files.html","id":"upload","dir":"Articles","previous_headings":"Upload multiple files, then rename them","what":"Upload","title":"Dealing with multiple files","text":"Use example files ship googledrive. Create folder Drive upload files folder iterating local_files using purrr::map(). First, let’s confirm uploaded files new folder. Now let’s reflect files object returned operation. files list dribbles, one per uploaded file. favorable data structure ’ve got map()ing , ’ll see . ? can always row bind individual dribbles one big dribble , e.g., dplyr::bind_rows(). show another way finesse using variant purrr::map() us, namely map_dfr().","code":"local_files <- drive_examples_local() local_files <- set_names(local_files, basename(local_files)) local_files #>                                                                         chicken.csv  #>     \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.csv\"  #>                                                                         chicken.jpg  #>     \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.jpg\"  #>                                                                         chicken.pdf  #>     \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.pdf\"  #>                                                                         chicken.txt  #>     \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.txt\"  #>                                                                     imdb_latin1.csv  #> \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/imdb_latin1.csv\"  #>                                                                        r_about.html  #>    \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/r_about.html\"  #>                                                                          r_logo.jpg  #>      \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/r_logo.jpg\" folder <- drive_mkdir(\"upload-into-me-article-demo\") #> Created Drive file: #> • upload-into-me-article-demo <id: 1YJAotkria5zV3GerSuK_eA7wH6AjvYMl> #> With MIME type: #> • application/vnd.google-apps.folder with_drive_quiet(   files <- map(local_files, ~ drive_upload(.x, path = folder)) ) drive_ls(folder) #> # A dribble: 7 × 3 #>   name            id                                drive_resource    #>   <chr>           <drv_id>                          <list>            #> 1 r_logo.jpg      1M_3Xt5LUTs1a278Dzx7Ewqkr3S9eS46I <named list [43]> #> 2 r_about.html    153h-CG8RQYdXUuX9OxvIfMNoesy1-Mo1 <named list [42]> #> 3 imdb_latin1.csv 1RmIh0c5ZipYO-fUjpUUbzdCsexrK5fA- <named list [42]> #> 4 chicken.txt     1kj634FoSjSmyYMToS5LnXus1XsQJdn5C <named list [42]> #> 5 chicken.pdf     1BsXs684H-l69oSl1oluxupEoOLjE-1aQ <named list [42]> #> 6 chicken.jpg     1kEXQDyvjdCPzUxaaTp6hz9QOKYpyLNtm <named list [43]> #> 7 chicken.csv     1lijQPcx5pwaMoODhd2cXWDw-WzQV4nYe <named list [41]> str(files, max.level = 1) #> List of 7 #>  $ chicken.csv    : dribble [1 × 3] (S3: dribble/tbl_df/tbl/data.frame) #>  $ chicken.jpg    : dribble [1 × 3] (S3: dribble/tbl_df/tbl/data.frame) #>  $ chicken.pdf    : dribble [1 × 3] (S3: dribble/tbl_df/tbl/data.frame) #>  $ chicken.txt    : dribble [1 × 3] (S3: dribble/tbl_df/tbl/data.frame) #>  $ imdb_latin1.csv: dribble [1 × 3] (S3: dribble/tbl_df/tbl/data.frame) #>  $ r_about.html   : dribble [1 × 3] (S3: dribble/tbl_df/tbl/data.frame) #>  $ r_logo.jpg     : dribble [1 × 3] (S3: dribble/tbl_df/tbl/data.frame) bind_rows(files) #> # A dribble: 7 × 3 #>   name            id                                drive_resource    #>   <chr>           <drv_id>                          <list>            #> 1 chicken.csv     1lijQPcx5pwaMoODhd2cXWDw-WzQV4nYe <named list [41]> #> 2 chicken.jpg     1kEXQDyvjdCPzUxaaTp6hz9QOKYpyLNtm <named list [43]> #> 3 chicken.pdf     1BsXs684H-l69oSl1oluxupEoOLjE-1aQ <named list [41]> #> 4 chicken.txt     1kj634FoSjSmyYMToS5LnXus1XsQJdn5C <named list [41]> #> 5 imdb_latin1.csv 1RmIh0c5ZipYO-fUjpUUbzdCsexrK5fA- <named list [41]> #> 6 r_about.html    153h-CG8RQYdXUuX9OxvIfMNoesy1-Mo1 <named list [41]> #> 7 r_logo.jpg      1M_3Xt5LUTs1a278Dzx7Ewqkr3S9eS46I <named list [43]>"},{"path":"https://googledrive.tidyverse.org/dev/articles/multiple-files.html","id":"rename","dir":"Articles","previous_headings":"Upload multiple files, then rename them","what":"Rename","title":"Dealing with multiple files","text":"Imagine now wish file names date prefix. First, form new names. use glue::glue() string interpolation also use paste(). Second, map two inputs: list dribbles vector new names. use purrr::map2_dfr() work files, list dribbles (= Drive files), new_names, vector new names, row bind returned dribbles single dribble holding files. Let’s check contents folder confirm new names: Let’s confirm , using map2_df2() instead map2(), got single dribble back, instead list one-row dribbles: wanted get list back, downstream operations include yet map()ing? use map2().","code":"(new_names <- glue(\"{Sys.Date()}_{basename(local_files)}\")) #> 2024-12-15_chicken.csv #> 2024-12-15_chicken.jpg #> 2024-12-15_chicken.pdf #> 2024-12-15_chicken.txt #> 2024-12-15_imdb_latin1.csv #> 2024-12-15_r_about.html #> 2024-12-15_r_logo.jpg files_dribble <- map2_dfr(files, new_names, drive_rename) #> Original file: #> • chicken.csv <id: 1lijQPcx5pwaMoODhd2cXWDw-WzQV4nYe> #> Has been renamed: #> • 2024-12-15_chicken.csv <id: 1lijQPcx5pwaMoODhd2cXWDw-WzQV4nYe> #> Original file: #> • chicken.jpg <id: 1kEXQDyvjdCPzUxaaTp6hz9QOKYpyLNtm> #> Has been renamed: #> • 2024-12-15_chicken.jpg <id: 1kEXQDyvjdCPzUxaaTp6hz9QOKYpyLNtm> #> Original file: #> • chicken.pdf <id: 1BsXs684H-l69oSl1oluxupEoOLjE-1aQ> #> Has been renamed: #> • 2024-12-15_chicken.pdf <id: 1BsXs684H-l69oSl1oluxupEoOLjE-1aQ> #> Original file: #> • chicken.txt <id: 1kj634FoSjSmyYMToS5LnXus1XsQJdn5C> #> Has been renamed: #> • 2024-12-15_chicken.txt <id: 1kj634FoSjSmyYMToS5LnXus1XsQJdn5C> #> Original file: #> • imdb_latin1.csv <id: 1RmIh0c5ZipYO-fUjpUUbzdCsexrK5fA-> #> Has been renamed: #> • 2024-12-15_imdb_latin1.csv <id: 1RmIh0c5ZipYO-fUjpUUbzdCsexrK5fA-> #> Original file: #> • r_about.html <id: 153h-CG8RQYdXUuX9OxvIfMNoesy1-Mo1> #> Has been renamed: #> • 2024-12-15_r_about.html <id: 153h-CG8RQYdXUuX9OxvIfMNoesy1-Mo1> #> Original file: #> • r_logo.jpg <id: 1M_3Xt5LUTs1a278Dzx7Ewqkr3S9eS46I> #> Has been renamed: #> • 2024-12-15_r_logo.jpg <id: 1M_3Xt5LUTs1a278Dzx7Ewqkr3S9eS46I> drive_ls(folder) #> # A dribble: 7 × 3 #>   name                       id       drive_resource    #>   <chr>                      <drv_id> <list>            #> 1 2024-12-15_r_logo.jpg      1M_3Xt5… <named list [43]> #> 2 2024-12-15_r_about.html    153h-CG… <named list [42]> #> 3 2024-12-15_imdb_latin1.csv 1RmIh0c… <named list [42]> #> 4 2024-12-15_chicken.txt     1kj634F… <named list [42]> #> 5 2024-12-15_chicken.pdf     1BsXs68… <named list [42]> #> 6 2024-12-15_chicken.jpg     1kEXQDy… <named list [43]> #> 7 2024-12-15_chicken.csv     1lijQPc… <named list [41]> files_dribble #> # A dribble: 7 × 3 #>   name                       id       drive_resource    #>   <chr>                      <drv_id> <list>            #> 1 2024-12-15_chicken.csv     1lijQPc… <named list [41]> #> 2 2024-12-15_chicken.jpg     1kEXQDy… <named list [43]> #> 3 2024-12-15_chicken.pdf     1BsXs68… <named list [42]> #> 4 2024-12-15_chicken.txt     1kj634F… <named list [42]> #> 5 2024-12-15_imdb_latin1.csv 1RmIh0c… <named list [42]> #> 6 2024-12-15_r_about.html    153h-CG… <named list [42]> #> 7 2024-12-15_r_logo.jpg      1M_3Xt5… <named list [43]> files_list <- map2(files, new_names, drive_rename)"},{"path":"https://googledrive.tidyverse.org/dev/articles/multiple-files.html","id":"clean-up","dir":"Articles","previous_headings":"Upload multiple files, then rename them","what":"Clean up","title":"Dealing with multiple files","text":"trashing function, drive_trash() vectorized can therefore operate multi-file dribble. trash files like : ’re absolutely sure happy something irreversible, truly delete files drive_rm(), also vectorized: Finally – code actually execute – easiest way delete files delete enclosing folder.","code":"drive_trash(files_dribble) drive_rm(files_dribble) drive_rm(folder) #> File deleted: #> • upload-into-me-article-demo <id: 1YJAotkria5zV3GerSuK_eA7wH6AjvYMl>"},{"path":"https://googledrive.tidyverse.org/dev/articles/permissions.html","id":"clean-up","dir":"Articles","previous_headings":"","what":"Clean up","title":"File permissions","text":"","code":"drive_rm(file) #> File deleted: #> • chicken-perm-article.txt <id: 1A6FscvyjRpKcRAURovMr4zkPt18a5rw6>"},{"path":"https://googledrive.tidyverse.org/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lucy D'Agostino McGowan. Author. Jennifer Bryan. Author, maintainer. . Copyright holder, funder.","code":""},{"path":"https://googledrive.tidyverse.org/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"D'Agostino McGowan L, Bryan J (2024). googledrive: Interface Google Drive. R package version 2.1.1.9000, https://github.com/tidyverse/googledrive, https://googledrive.tidyverse.org.","code":"@Manual{,   title = {googledrive: An Interface to Google Drive},   author = {Lucy {D'Agostino McGowan} and Jennifer Bryan},   year = {2024},   note = {R package version 2.1.1.9000,     https://github.com/tidyverse/googledrive},   url = {https://googledrive.tidyverse.org}, }"},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"An Interface to Google Drive","text":"googledrive allows interact files Google Drive R.","code":""},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An Interface to Google Drive","text":"Install CRAN:","code":"install.packages(\"googledrive\")"},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"load-googledrive","dir":"","previous_headings":"Usage","what":"Load googledrive","title":"An Interface to Google Drive","text":"","code":"library(\"googledrive\")"},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"package-conventions","dir":"","previous_headings":"Usage","what":"Package conventions","title":"An Interface to Google Drive","text":"functions begin prefix drive_. Auto-completion friend. Goal allow Drive access feels similar Unix file system utilities, e.g., find, ls, mv, cp, mkdir, rm. Give humans want: file name Track API wants: file ID Hold metadata sent back API googledrive “pipe-friendly” , fact, re-exports %>%, require use.","code":""},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"quick-demo","dir":"","previous_headings":"Usage","what":"Quick demo","title":"An Interface to Google Drive","text":"’s list n_max files see Drive. can expect sent browser , authenticate authorize googledrive package deal behalf Google Drive. can narrow query specifying pattern ’d like match names . specifying file type: type argument understands MIME types, file extensions, human-friendly keywords. Alternatively, can refine search using q query parameter. Accepted search clauses can found Google Drive API documentation. example, see files ’ve starred readable “anyone link”, : generally want store result googledrive call, files . files dribble info several files can used input downstream calls. can also manipulated regular data frame point.","code":"drive_find(n_max = 30) #> # A dribble: 30 × 3 #>    name                       id                                drive_resource #>    <chr>                      <drv_id>                          <list>         #>  1 2021-09-16_r_logo.jpg      1dandXB0QZpjeGQq_56wTXKNwaqgsOa9D <named list>   #>  2 2021-09-16_r_about.html    1XfCI_orH4oNUZh06C4w6vXtno-BT_zmZ <named list>   #>  3 2021-09-16_imdb_latin1.csv 163YPvqYmGuqQiEwEFLg2s1URq4EnpkBw <named list>   #>  4 2021-09-16_chicken.txt     1axJz8GSmecSnaYBx0Sb3Gb-SXVaTzKw7 <named list>   #>  5 2021-09-16_chicken.pdf     14Hd6_VQAeEgcwBBJamc-FUlnXhp117T2 <named list>   #>  6 2021-09-16_chicken.jpg     1aslW1T-B8UKzAEotDWpmRFaMyMux5-it <named list>   #>  7 2021-09-16_chicken.csv     1Mj--zJYZJSMKsNVjk2tYFef5LnCsNoDT <named list>   #>  8 pqr                        143iq-CswFTwJTjVfKkcFMDW0jYqDeUj2 <named list>   #>  9 mno                        1gcUTnFbsF6uioJrLCsVQ78_F1wEzyNtI <named list>   #> 10 jkl                        17T40phn99w0hY-B_Ev0deTvVg9fmUSnt <named list>   #> # ℹ 20 more rows drive_find(pattern = \"chicken\") drive_find(type = \"spreadsheet\")     ## Google Sheets! drive_find(type = \"csv\")             ## MIME type = \"text/csv\" drive_find(type = \"application/pdf\") ## MIME type = \"application/pdf\" (files <- drive_find(q = c(\"starred = true\", \"visibility = 'anyoneWithLink'\"))) #> # A dribble: 2 × 3 #>   name       id                                drive_resource    #>   <chr>      <drv_id>                          <list>            #> 1 r_logo.jpg 1wFAZdmBiSRu4GShsqurxD7wIDSCZvPud <named list [43]> #> 2 THANKS     19URV7BT0_E1KhYdfDODszK5aiELOwTSz <named list [42]>"},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"identify-files","dir":"","previous_headings":"Usage > Quick demo","what":"Identify files","title":"An Interface to Google Drive","text":"drive_find() searches file properties, can also identify files name (path, really) Drive file id using drive_get(). as_id() can used convert various inputs marked vector file ids. works file ids (obvious reasons!), various forms Drive URLs, dribbles. general, googledrive functions operate files allow specify file(s) name/path, file id, dribble. ’s ambiguous, use as_id() mark character vector holding Drive file ids opposed file paths. function can also extract file ids various URLs.","code":"(x <- drive_get(\"~/abc/def/googledrive-NEWS.md\")) #> ✔ The input `path` resolved to exactly 1 file. #> # A dribble: 1 × 4 #>   name                path                          id       drive_resource    #>   <chr>               <chr>                         <drv_id> <list>            #> 1 googledrive-NEWS.md ~/abc/def/googledrive-NEWS.md 1h1lhFf… <named list [41]> x$id #> <drive_id[1]> #> [1] 1h1lhFfQrDZevE2OEX10-rbi2BfvGogFm  # let's retrieve same file by id (also a great way to force-refresh metadata) drive_get(x$id) #> # A dribble: 1 × 3 #>   name                id                                drive_resource    #>   <chr>               <drv_id>                          <list>            #> 1 googledrive-NEWS.md 1h1lhFfQrDZevE2OEX10-rbi2BfvGogFm <named list [41]> drive_get(as_id(x)) #> # A dribble: 1 × 3 #>   name                id                                drive_resource    #>   <chr>               <drv_id>                          <list>            #> 1 googledrive-NEWS.md 1h1lhFfQrDZevE2OEX10-rbi2BfvGogFm <named list [41]>"},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"upload-files","dir":"","previous_headings":"Usage > Quick demo","what":"Upload files","title":"An Interface to Google Drive","text":"can upload file type. Notice file uploaded text/csv. Since .csv document, didn’t specify type, googledrive guessed MIME type. can overrule using type parameter upload Google Spreadsheet. Let’s delete file first. Much better!","code":"(chicken <- drive_upload(   drive_example_local(\"chicken.csv\"),   \"index-chicken.csv\" )) #> Local file: #> • '/private/tmp/Rtmpk4twsE/temp_libpath10e8b70beb6a9/googledrive/extdata/example_files/chicken.csv' #> Uploaded into Drive file: #> • 'index-chicken.csv' <id: 1dE2U3TUvYulwE88ucBPQHP0-CB4zEK7P> #> With MIME type: #> • 'text/csv' #> # A dribble: 1 × 3 #>   name              id                                drive_resource    #>   <chr>             <drv_id>                          <list>            #> 1 index-chicken.csv 1dE2U3TUvYulwE88ucBPQHP0-CB4zEK7P <named list [41]> drive_rm(chicken) #> File deleted: #> • 'index-chicken.csv' <id: 1dE2U3TUvYulwE88ucBPQHP0-CB4zEK7P>  # example of using a dribble as input chicken_sheet <- drive_example_local(\"chicken.csv\") %>%    drive_upload(     name = \"index-chicken-sheet\",     type = \"spreadsheet\"   ) #> Local file: #> • '/private/tmp/Rtmpk4twsE/temp_libpath10e8b70beb6a9/googledrive/extdata/example_files/chicken.csv' #> Uploaded into Drive file: #> • 'index-chicken-sheet' <id: 1KXgDfk3IfJg833XokFhKDahY9aDml-183NHPz3qXlAY> #> With MIME type: #> • 'application/vnd.google-apps.spreadsheet'"},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"share-files","dir":"","previous_headings":"Usage > Quick demo","what":"Share files","title":"An Interface to Google Drive","text":"allow people access file, need change sharing permissions. can check sharing status running drive_reveal(..., \"permissions\"), adds logical column shared parks detailed metadata permissions_resource variable. ’s grant anyone link permission view data set. comes often, ’s even convenience wrapper, drive_share_anyone().","code":"chicken_sheet %>%    drive_reveal(\"permissions\") #> # A dribble: 1 × 5 #>   name                shared id       drive_resource    permissions_resource #>   <chr>               <lgl>  <drv_id> <list>            <list>               #> 1 index-chicken-sheet FALSE  1KXgDfk… <named list [36]> <named list [2]> (chicken_sheet <- chicken_sheet %>%    drive_share(role = \"reader\", type = \"anyone\")) #> Permissions updated: #> • role = reader #> • type = anyone #> For file: #> • 'index-chicken-sheet' <id: 1KXgDfk3IfJg833XokFhKDahY9aDml-183NHPz3qXlAY> #> # A dribble: 1 × 5 #>   name                shared id       drive_resource    permissions_resource #>   <chr>               <lgl>  <drv_id> <list>            <list>               #> 1 index-chicken-sheet TRUE   1KXgDfk… <named list [37]> <named list [2]>"},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"publish-files","dir":"","previous_headings":"Usage > Quick demo","what":"Publish files","title":"An Interface to Google Drive","text":"Versions Google Documents, Sheets, Presentations can published online. can check publication status running drive_reveal(..., \"published\"), adds logical column published parks detailed metadata revision_resource variable. default, drive_publish() publish recent version.","code":"chicken_sheet %>%    drive_reveal(\"published\") #> # A dribble: 1 × 7 #>   name             published shared id       drive_resource permissions_resource #>   <chr>            <lgl>     <lgl>  <drv_id> <list>         <list>               #> 1 index-chicken-s… FALSE     TRUE   1KXgDfk… <named list>   <named list [2]>     #> # ℹ 1 more variable: revision_resource <list> (chicken_sheet <- drive_publish(chicken_sheet)) #> File now published: #> • 'index-chicken-sheet' <id: 1KXgDfk3IfJg833XokFhKDahY9aDml-183NHPz3qXlAY> #> # A dribble: 1 × 7 #>   name             published shared id       drive_resource permissions_resource #>   <chr>            <lgl>     <lgl>  <drv_id> <list>         <list>               #> 1 index-chicken-s… TRUE      TRUE   1KXgDfk… <named list>   <named list [2]>     #> # ℹ 1 more variable: revision_resource <list>"},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"google-files","dir":"","previous_headings":"Usage > Quick demo > Download files","what":"Google files","title":"An Interface to Google Drive","text":"can download files Google Drive. Native Google file types (Google Documents, Google Sheets, Google Slides, etc.) need exported conventional file type. reasonable defaults can specify explicitly via type implicitly via file extension path. example, like download “chicken_sheet” Google Sheet .csv run following. Alternatively, specify type via path parameter. Notice example , specified overwrite = TRUE, order overwrite local csv file previously saved. Finally, just allow export default type. case Google Sheets, Excel workbook:","code":"drive_download(\"index-chicken-sheet\", type = \"csv\") #> File downloaded: #> • 'index-chicken-sheet' <id: 1KXgDfk3IfJg833XokFhKDahY9aDml-183NHPz3qXlAY> #> Saved locally as: #> • 'index-chicken-sheet.csv' drive_download(   \"index-chicken-sheet\",   path = \"index-chicken-sheet.csv\",   overwrite = TRUE ) #> File downloaded: #> • 'index-chicken-sheet' <id: 1KXgDfk3IfJg833XokFhKDahY9aDml-183NHPz3qXlAY> #> Saved locally as: #> • 'index-chicken-sheet.csv' drive_download(\"index-chicken-sheet\") #> File downloaded: #> • 'index-chicken-sheet' <id: 1KXgDfk3IfJg833XokFhKDahY9aDml-183NHPz3qXlAY> #> Saved locally as: #> • 'index-chicken-sheet.xlsx'"},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"all-other-files","dir":"","previous_headings":"Usage > Quick demo > Download files","what":"All other files","title":"An Interface to Google Drive","text":"Downloading files Google type files even simpler, .e. require conversion type info.","code":"# download it and prove we got it drive_download(\"chicken.txt\") #> File downloaded: #> • 'chicken.txt' <id: 1xMvlJHia_qYNZmucaStDcOF9A9PD4BOT> #> Saved locally as: #> • 'chicken.txt' readLines(\"chicken.txt\") %>% head() #> [1] \"A chicken whose name was Chantecler\"       #> [2] \"Clucked in iambic pentameter\"              #> [3] \"It sat on a shelf, reading Song of Myself\" #> [4] \"And laid eggs with a perfect diameter.\"    #> [5] \"\"                                          #> [6] \"—Richard Maxson\""},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"clean-up","dir":"","previous_headings":"Usage > Quick demo","what":"Clean up","title":"An Interface to Google Drive","text":"","code":"file.remove(c(   \"index-chicken-sheet.csv\", \"index-chicken-sheet.xlsx\", \"chicken.txt\" )) #> [1] TRUE TRUE TRUE drive_find(\"index-chicken\") %>% drive_rm() #> File deleted: #> • 'index-chicken-sheet' <id: 1KXgDfk3IfJg833XokFhKDahY9aDml-183NHPz3qXlAY>"},{"path":"https://googledrive.tidyverse.org/dev/index.html","id":"privacy","dir":"","previous_headings":"","what":"Privacy","title":"An Interface to Google Drive","text":"Privacy policy","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/as_dribble.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to a dribble — as_dribble","title":"Coerce to a dribble — as_dribble","text":"Converts various representations Google Drive files dribble, object used googledrive hold Drive file metadata. Files can specified via: File path. File name important special case. File id. Mark as_id() distinguish file path. Data frame dribble. successfully used googledrive identify files interest, dribble. Pass downstream functions. List representing Files resource objects. Mostly internal use. generic function. maximum clarity, get files dribble (capture file id) early possible. specifying via path, best include trailing slash targeting folder. want folder foo, say foo/, foo. functions, drive_cp(), drive_mkdir(), drive_mv(), drive_upload(), can accept new file folder name last part path, name given. say /b/c (trailing slash) folder /b/c/ already exists, unclear want. file named c /b/ file default name /b/c/? get error must make intent clear.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/as_dribble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to a dribble — as_dribble","text":"","code":"as_dribble(x, ...)"},{"path":"https://googledrive.tidyverse.org/dev/reference/as_dribble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to a dribble — as_dribble","text":"x vector Drive file paths, vector file ids marked as_id(), list Files Resource objects, suitable data frame. ... arguments passed methods. (used.)","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/as_dribble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to a dribble — as_dribble","text":"","code":"# create some files for us to re-discover by name or filepath alfa <- drive_create(\"alfa\", type = \"folder\") #> Created Drive file: #> • alfa <id: 1waOr6Mwlyy1_hnF9r0XfNz52vklUAojt> #> With MIME type: #> • application/vnd.google-apps.folder bravo <- drive_create(\"bravo\", path = alfa) #> Created Drive file: #> • bravo <id: 1O2KWinELGvW_43Gs6ZTvIIYrVbyevIBW> #> With MIME type: #> • application/octet-stream  # as_dribble() can work with file names or paths as_dribble(\"alfa\") #> # A dribble: 1 × 4 #>   name  path  id                                drive_resource    #>   <chr> <chr> <drv_id>                          <list>            #> 1 alfa  alfa/ 1waOr6Mwlyy1_hnF9r0XfNz52vklUAojt <named list [33]> as_dribble(\"bravo\") #> # A dribble: 2 × 4 #>   name  path  id                                drive_resource    #>   <chr> <chr> <drv_id>                          <list>            #> 1 bravo bravo 1O2KWinELGvW_43Gs6ZTvIIYrVbyevIBW <named list [39]> #> 2 bravo bravo 1Lbnr5CXFtJocrr-u3MIRBO8zbkvkUfXJ <named list [39]> as_dribble(\"alfa/bravo\") #> # A dribble: 1 × 4 #>   name  path         id                                drive_resource    #>   <chr> <chr>        <drv_id>                          <list>            #> 1 bravo ~/alfa/bravo 1O2KWinELGvW_43Gs6ZTvIIYrVbyevIBW <named list [39]> as_dribble(c(\"alfa\", \"alfa/bravo\")) #> # A dribble: 2 × 4 #>   name  path         id                                drive_resource    #>   <chr> <chr>        <drv_id>                          <list>            #> 1 alfa  ~/alfa/      1waOr6Mwlyy1_hnF9r0XfNz52vklUAojt <named list [33]> #> 2 bravo ~/alfa/bravo 1O2KWinELGvW_43Gs6ZTvIIYrVbyevIBW <named list [39]>  # specify the file id (substitute a real file id of your own!) # as_dribble(as_id(\"0B0Gh-SuuA2nTOGZVTXZTREgwZ2M\"))  # Clean up drive_find(\"alfa\") %>% drive_rm() #> File deleted: #> • alfa <id: 1waOr6Mwlyy1_hnF9r0XfNz52vklUAojt>"},{"path":"https://googledrive.tidyverse.org/dev/reference/as_shared_drive.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce to shared drive — as_shared_drive","title":"Coerce to shared drive — as_shared_drive","text":"Converts various representations shared drive dribble, object used googledrive hold Drive file metadata. Shared drives can specified via Name Shared drive id, marked as_id() distinguish name Data frame dribble consisting solely shared drives List representing Drives resource objects (mostly internal use) shared drive supports files owned organization rather individual user. Shared drives follow different sharing ownership models specific user's \"Drive\". Shared drives successors earlier concept Team Drives. Learn shared drives. generic function.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/as_shared_drive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce to shared drive — as_shared_drive","text":"","code":"as_shared_drive(x, ...)"},{"path":"https://googledrive.tidyverse.org/dev/reference/as_shared_drive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce to shared drive — as_shared_drive","text":"x vector shared drive names, vector shared drive ids marked as_id(), list Drives resource objects, suitable data frame. ... arguments passed methods. (used.)","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/as_shared_drive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coerce to shared drive — as_shared_drive","text":"","code":"if (FALSE) { # \\dontrun{ # specify the name as_shared_drive(\"abc\")  # specify the id (substitute one of your own!) as_shared_drive(as_id(\"0AOPK1X2jaNckUk9PVA\")) } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/deprecated-team-drive-functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated Team Drive functions — deprecated-team-drive-functions","title":"Deprecated Team Drive functions — deprecated-team-drive-functions","text":"Team Drives rebranded shared drives , googledrive v2.0.0, team_drive_*() functions deprecated, favor shared_drive_*() successors. changes googledrive reflect Team Drives resource collection deprecated Drive API v3, favor new (shared) Drives resource collection. Read https://cloud.google.com/blog/products/application-development/upcoming-changes---google-drive-api--google-picker-api","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/deprecated-team-drive-functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated Team Drive functions — deprecated-team-drive-functions","text":"","code":"team_drive_find(pattern = NULL, n_max = Inf, ..., verbose = deprecated())  team_drive_get(name = NULL, id = NULL, verbose = deprecated())  team_drive_create(name, verbose = deprecated())  team_drive_rm(team_drive = NULL, verbose = deprecated())  team_drive_update(team_drive, ..., verbose = deprecated())  as_team_drive(x, ...)  is_team_drive(d)"},{"path":"https://googledrive.tidyverse.org/dev/reference/deprecated-team-drive-functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated Team Drive functions — deprecated-team-drive-functions","text":"pattern Character. provided, items whose names match regular expression returned. implemented locally results returned API. n_max Integer. upper bound number items return. applies results requested API, may filtered locally, via pattern argument. ... parameters pass along request, pageSize useDomainAdminAccess. name Character vector names. character vector marked as_id() treated provided via id argument. id Character vector shared drive ids URLs (first processed as_id()). name id non-NULL, id silently ignored. team_drive Google Drive Drive API replaced Team Drives shared drives. x vector shared drive names, vector shared drive ids marked as_id(), list Drives resource objects, suitable data frame. d dribble.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/deprecated-team-drive-functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated Team Drive functions — deprecated-team-drive-functions","text":"object class dribble, tibble one row per shared drive.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/dribble-checks.html","id":null,"dir":"Reference","previous_headings":"","what":"Check facts about a dribble — dribble-checks","title":"Check facts about a dribble — dribble-checks","text":"Sometimes need check things dribble` files represents, : even dribble? Size: dribble hold exactly one file? least one file? file? File type: file folder? File ownership access: mine? Published? Shared?","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/dribble-checks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check facts about a dribble — dribble-checks","text":"","code":"is_dribble(d)  no_file(d)  single_file(d)  some_files(d)  confirm_dribble(d)  confirm_single_file(d)  confirm_some_files(d)  is_folder(d)  is_shortcut(d)  is_folder_shortcut(d)  is_native(d)  is_parental(d)  is_mine(d)  is_shared_drive(d)"},{"path":"https://googledrive.tidyverse.org/dev/reference/dribble-checks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check facts about a dribble — dribble-checks","text":"d dribble.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/dribble-checks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check facts about a dribble — dribble-checks","text":"","code":"## most of us have multiple files or folders on Google Drive d <- drive_find() is_dribble(d) #> [1] TRUE no_file(d) #> [1] FALSE single_file(d) #> [1] FALSE some_files(d) #> [1] TRUE  # this will error # confirm_single_file(d)  confirm_some_files(d) #> # A dribble: 251 × 3 #>    name                   id                                drive_resource #>    <chr>                  <drv_id>                          <list>         #>  1 name-squatter-mv       1fYW8GkaQ5pzxAaQZqg5YhVgUp7DZ9Zy6 <named list>   #>  2 chicken-mv-renamed.txt 1kwbIWnW2fM3N0QL6GAKEzFzUNg0s7keJ <named list>   #>  3 name-squatter-mv       1RvUjOVaTDTEf8k0q2QV5RnjvLqn44Xa5 <named list>   #>  4 chicken-mv-renamed.txt 1KUfTnRW31CjFqOjM0a6IKwsyk0gSRP8w <named list>   #>  5 name-squatter-mv       1-LIIvKLO0weYnJjTus39i7YrZUZEZw4i <named list>   #>  6 chicken-mv-renamed.txt 1t3M0PDtSnJ5zF2lHsWDhaeU5vGLg34w9 <named list>   #>  7 name-squatter-mv       1KZgQSi5X6kyKIgQS9AO_b5JBoi1NAPWI <named list>   #>  8 chicken-mv-renamed.txt 10aUu5LjiA6ApqLUC1gmdvz4D4w80uBhV <named list>   #>  9 name-squatter-mv       1HhLC4L_Mk5iyLSKDS5y3j_XtUWHzkiIt <named list>   #> 10 chicken-mv-renamed.txt 18TRabFbpuCp20C6N48TAX2c5DN-auhOP <named list>   #> # ℹ 241 more rows is_folder(dis_mine(d},{"path":"https://googledrive.tidyverse.org/dev/reference/dribble.html","id":null,"dir":"Reference","previous_headings":"","what":"dribble object — dribble","title":"dribble object — dribble","text":"googledrive stores metadata one Drive files shared drives dribble. \"Drive tibble\" one row per file shared drive , minimum, columns: name: character column containing file shared drive names id: character column file shared drive ids drive_resource: list-column, element either Files resource Drives resource object. Note guarantee documented fields always present. check kind field present equal one drive#file drive#drive. dribble format handy exposes file name, good humans, keeps bundled file's unique id metadata, needed API calls. general, dribble class retained even manipulation, long required variables present correct type. works best manipulations via dplyr vctrs packages.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_about.html","id":null,"dir":"Reference","previous_headings":"","what":"Get info on Drive capabilities — drive_about","title":"Get info on Drive capabilities — drive_about","text":"Gets information user, user's Drive, system capabilities. function mostly exists power drive_user(), extracts useful information (information current user) prints nicely.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_about.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get info on Drive capabilities — drive_about","text":"","code":"drive_about()"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_about.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get info on Drive capabilities — drive_about","text":"list representation Drive resource","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_about.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get info on Drive capabilities — drive_about","text":"","code":"drive_about() #> $kind #> [1] \"drive#about\" #>  #> $user #> $user$kind #> [1] \"drive#user\" #>  #> $user$displayName #> [1] \"googledrive-docs@gargle-169921.iam.gserviceaccount.com\" #>  #> $user$photoLink #> [1] \"https://lh3.googleusercontent.com/a/ACg8ocIG4HCyGaPbQ53NSBY6jFcH8mA_4VFotnEVUPuC5yFoGqwE8Q=s64\" #>  #> $user$me #> [1] TRUE #>  #> $user$permissionId #> [1] \"09204227840243713330\" #>  #> $user$emailAddress #> [1] \"googledrive-docs@gargle-169921.iam.gserviceaccount.com\" #>  #>  #> $storageQuota #> $storageQuota$limit #> [1] \"16106127360\" #>  #> $storageQuota$usage #> [1] \"2856392\" #>  #> $storageQuota$usageInDrive #> [1] \"2856392\" #>  #> $storageQuota$usageInDriveTrash #> [1] \"0\" #>  #>  #> $importFormats #> $importFormats$`application/x-vnd.oasis.opendocument.presentation` #> $importFormats$`application/x-vnd.oasis.opendocument.presentation`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`text/tab-separated-values` #> $importFormats$`text/tab-separated-values`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`image/jpeg` #> $importFormats$`image/jpeg`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`image/bmp` #> $importFormats$`image/bmp`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`text/x-markdown` #> $importFormats$`text/x-markdown`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`image/gif` #> $importFormats$`image/gif`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.ms-excel.sheet.macroenabled.12` #> $importFormats$`application/vnd.ms-excel.sheet.macroenabled.12`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`application/vnd.openxmlformats-officedocument.wordprocessingml.template` #> $importFormats$`application/vnd.openxmlformats-officedocument.wordprocessingml.template`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.ms-powerpoint.presentation.macroenabled.12` #> $importFormats$`application/vnd.ms-powerpoint.presentation.macroenabled.12`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`application/vnd.ms-word.template.macroenabled.12` #> $importFormats$`application/vnd.ms-word.template.macroenabled.12`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.openxmlformats-officedocument.wordprocessingml.document` #> $importFormats$`application/vnd.openxmlformats-officedocument.wordprocessingml.document`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`image/pjpeg` #> $importFormats$`image/pjpeg`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.google-apps.script+text/plain` #> $importFormats$`application/vnd.google-apps.script+text/plain`[[1]] #> [1] \"application/vnd.google-apps.script\" #>  #>  #> $importFormats$`application/vnd.ms-excel` #> $importFormats$`application/vnd.ms-excel`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`application/vnd.ms-word.document.macroenabled.12` #> $importFormats$`application/vnd.ms-word.document.macroenabled.12`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.sun.xml.writer` #> $importFormats$`application/vnd.sun.xml.writer`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.ms-powerpoint.slideshow.macroenabled.12` #> $importFormats$`application/vnd.ms-powerpoint.slideshow.macroenabled.12`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`text/rtf` #> $importFormats$`text/rtf`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.oasis.opendocument.spreadsheet` #> $importFormats$`application/vnd.oasis.opendocument.spreadsheet`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`text/plain` #> $importFormats$`text/plain`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/x-vnd.oasis.opendocument.spreadsheet` #> $importFormats$`application/x-vnd.oasis.opendocument.spreadsheet`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`application/x-vnd.oasis.opendocument.text` #> $importFormats$`application/x-vnd.oasis.opendocument.text`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`image/png` #> $importFormats$`image/png`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/msword` #> $importFormats$`application/msword`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/pdf` #> $importFormats$`application/pdf`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/x-msmetafile` #> $importFormats$`application/x-msmetafile`[[1]] #> [1] \"application/vnd.google-apps.drawing\" #>  #>  #> $importFormats$`text/markdown` #> $importFormats$`text/markdown`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.openxmlformats-officedocument.spreadsheetml.template` #> $importFormats$`application/vnd.openxmlformats-officedocument.spreadsheetml.template`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`application/vnd.ms-powerpoint` #> $importFormats$`application/vnd.ms-powerpoint`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`application/vnd.ms-excel.template.macroenabled.12` #> $importFormats$`application/vnd.ms-excel.template.macroenabled.12`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`image/x-bmp` #> $importFormats$`image/x-bmp`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/rtf` #> $importFormats$`application/rtf`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.openxmlformats-officedocument.presentationml.template` #> $importFormats$`application/vnd.openxmlformats-officedocument.presentationml.template`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`image/x-png` #> $importFormats$`image/x-png`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`text/html` #> $importFormats$`text/html`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.oasis.opendocument.text` #> $importFormats$`application/vnd.oasis.opendocument.text`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`application/vnd.openxmlformats-officedocument.presentationml.presentation` #> $importFormats$`application/vnd.openxmlformats-officedocument.presentationml.presentation`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`application/vnd.openxmlformats-officedocument.spreadsheetml.sheet` #> $importFormats$`application/vnd.openxmlformats-officedocument.spreadsheetml.sheet`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`application/vnd.google-apps.script+json` #> $importFormats$`application/vnd.google-apps.script+json`[[1]] #> [1] \"application/vnd.google-apps.script\" #>  #>  #> $importFormats$`application/vnd.openxmlformats-officedocument.presentationml.slideshow` #> $importFormats$`application/vnd.openxmlformats-officedocument.presentationml.slideshow`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`application/vnd.ms-powerpoint.template.macroenabled.12` #> $importFormats$`application/vnd.ms-powerpoint.template.macroenabled.12`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`text/csv` #> $importFormats$`text/csv`[[1]] #> [1] \"application/vnd.google-apps.spreadsheet\" #>  #>  #> $importFormats$`application/vnd.oasis.opendocument.presentation` #> $importFormats$`application/vnd.oasis.opendocument.presentation`[[1]] #> [1] \"application/vnd.google-apps.presentation\" #>  #>  #> $importFormats$`image/jpg` #> $importFormats$`image/jpg`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #> $importFormats$`text/richtext` #> $importFormats$`text/richtext`[[1]] #> [1] \"application/vnd.google-apps.document\" #>  #>  #>  #> $exportFormats #> $exportFormats$`application/vnd.google-apps.document` #> $exportFormats$`application/vnd.google-apps.document`[[1]] #> [1] \"application/rtf\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[2]] #> [1] \"application/vnd.oasis.opendocument.text\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[3]] #> [1] \"text/html\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[4]] #> [1] \"application/pdf\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[5]] #> [1] \"text/x-markdown\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[6]] #> [1] \"text/markdown\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[7]] #> [1] \"application/epub+zip\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[8]] #> [1] \"application/zip\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[9]] #> [1] \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" #>  #> $exportFormats$`application/vnd.google-apps.document`[[10]] #> [1] \"text/plain\" #>  #>  #> $exportFormats$`application/vnd.google-apps.vid` #> $exportFormats$`application/vnd.google-apps.vid`[[1]] #> [1] \"video/mp4\" #>  #>  #> $exportFormats$`application/vnd.google-apps.spreadsheet` #> $exportFormats$`application/vnd.google-apps.spreadsheet`[[1]] #> [1] \"application/x-vnd.oasis.opendocument.spreadsheet\" #>  #> $exportFormats$`application/vnd.google-apps.spreadsheet`[[2]] #> [1] \"text/tab-separated-values\" #>  #> $exportFormats$`application/vnd.google-apps.spreadsheet`[[3]] #> [1] \"application/pdf\" #>  #> $exportFormats$`application/vnd.google-apps.spreadsheet`[[4]] #> [1] \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" #>  #> $exportFormats$`application/vnd.google-apps.spreadsheet`[[5]] #> [1] \"text/csv\" #>  #> $exportFormats$`application/vnd.google-apps.spreadsheet`[[6]] #> [1] \"application/zip\" #>  #> $exportFormats$`application/vnd.google-apps.spreadsheet`[[7]] #> [1] \"application/vnd.oasis.opendocument.spreadsheet\" #>  #>  #> $exportFormats$`application/vnd.google-apps.jam` #> $exportFormats$`application/vnd.google-apps.jam`[[1]] #> [1] \"application/pdf\" #>  #>  #> $exportFormats$`application/vnd.google-apps.script` #> $exportFormats$`application/vnd.google-apps.script`[[1]] #> [1] \"application/vnd.google-apps.script+json\" #>  #>  #> $exportFormats$`application/vnd.google-apps.presentation` #> $exportFormats$`application/vnd.google-apps.presentation`[[1]] #> [1] \"application/vnd.oasis.opendocument.presentation\" #>  #> $exportFormats$`application/vnd.google-apps.presentation`[[2]] #> [1] \"application/pdf\" #>  #> $exportFormats$`application/vnd.google-apps.presentation`[[3]] #> [1] \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" #>  #> $exportFormats$`application/vnd.google-apps.presentation`[[4]] #> [1] \"text/plain\" #>  #>  #> $exportFormats$`application/vnd.google-apps.form` #> $exportFormats$`application/vnd.google-apps.form`[[1]] #> [1] \"application/zip\" #>  #>  #> $exportFormats$`application/vnd.google-apps.drawing` #> $exportFormats$`application/vnd.google-apps.drawing`[[1]] #> [1] \"image/svg+xml\" #>  #> $exportFormats$`application/vnd.google-apps.drawing`[[2]] #> [1] \"image/png\" #>  #> $exportFormats$`application/vnd.google-apps.drawing`[[3]] #> [1] \"application/pdf\" #>  #> $exportFormats$`application/vnd.google-apps.drawing`[[4]] #> [1] \"image/jpeg\" #>  #>  #> $exportFormats$`application/vnd.google-apps.site` #> $exportFormats$`application/vnd.google-apps.site`[[1]] #> [1] \"text/plain\" #>  #>  #> $exportFormats$`application/vnd.google-apps.mail-layout` #> $exportFormats$`application/vnd.google-apps.mail-layout`[[1]] #> [1] \"text/plain\" #>  #>  #>  #> $maxImportSizes #> $maxImportSizes$`application/vnd.google-apps.document` #> [1] \"10485760\" #>  #> $maxImportSizes$`application/vnd.google-apps.spreadsheet` #> [1] \"104857600\" #>  #> $maxImportSizes$`application/vnd.google-apps.presentation` #> [1] \"104857600\" #>  #> $maxImportSizes$`application/vnd.google-apps.drawing` #> [1] \"2097152\" #>  #>  #> $maxUploadSize #> [1] \"5242880000000\" #>  #> $appInstalled #> [1] FALSE #>  #> $folderColorPalette #> $folderColorPalette[[1]] #> [1] \"#ac725e\" #>  #> $folderColorPalette[[2]] #> [1] \"#d06b64\" #>  #> $folderColorPalette[[3]] #> [1] \"#f83a22\" #>  #> $folderColorPalette[[4]] #> [1] \"#fa573c\" #>  #> $folderColorPalette[[5]] #> [1] \"#ff7537\" #>  #> $folderColorPalette[[6]] #> [1] \"#ffad46\" #>  #> $folderColorPalette[[7]] #> [1] \"#fad165\" #>  #> $folderColorPalette[[8]] #> [1] \"#fbe983\" #>  #> $folderColorPalette[[9]] #> [1] \"#b3dc6c\" #>  #> $folderColorPalette[[10]] #> [1] \"#7bd148\" #>  #> $folderColorPalette[[11]] #> [1] \"#16a765\" #>  #> $folderColorPalette[[12]] #> [1] \"#42d692\" #>  #> $folderColorPalette[[13]] #> [1] \"#92e1c0\" #>  #> $folderColorPalette[[14]] #> [1] \"#9fe1e7\" #>  #> $folderColorPalette[[15]] #> [1] \"#9fc6e7\" #>  #> $folderColorPalette[[16]] #> [1] \"#4986e7\" #>  #> $folderColorPalette[[17]] #> [1] \"#9a9cff\" #>  #> $folderColorPalette[[18]] #> [1] \"#b99aff\" #>  #> $folderColorPalette[[19]] #> [1] \"#a47ae2\" #>  #> $folderColorPalette[[20]] #> [1] \"#cd74e6\" #>  #> $folderColorPalette[[21]] #> [1] \"#f691b2\" #>  #> $folderColorPalette[[22]] #> [1] \"#cca6ac\" #>  #> $folderColorPalette[[23]] #> [1] \"#cabdbf\" #>  #> $folderColorPalette[[24]] #> [1] \"#8f8f8f\" #>  #>  #> $teamDriveThemes #> $teamDriveThemes[[1]] #> $teamDriveThemes[[1]]$id #> [1] \"abacus\" #>  #> $teamDriveThemes[[1]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/abacus_background.jpg\" #>  #> $teamDriveThemes[[1]]$colorRgb #> [1] \"#ea6100\" #>  #>  #> $teamDriveThemes[[2]] #> $teamDriveThemes[[2]]$id #> [1] \"blueprints\" #>  #> $teamDriveThemes[[2]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/blueprints_background.jpg\" #>  #> $teamDriveThemes[[2]]$colorRgb #> [1] \"#4285f4\" #>  #>  #> $teamDriveThemes[[3]] #> $teamDriveThemes[[3]]$id #> [1] \"bok_choy\" #>  #> $teamDriveThemes[[3]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/bok_choy_background.jpg\" #>  #> $teamDriveThemes[[3]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $teamDriveThemes[[4]] #> $teamDriveThemes[[4]]$id #> [1] \"books\" #>  #> $teamDriveThemes[[4]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/books_background.jpg\" #>  #> $teamDriveThemes[[4]]$colorRgb #> [1] \"#4285f4\" #>  #>  #> $teamDriveThemes[[5]] #> $teamDriveThemes[[5]]$id #> [1] \"bread\" #>  #> $teamDriveThemes[[5]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/bread_background.jpg\" #>  #> $teamDriveThemes[[5]]$colorRgb #> [1] \"#ef6c00\" #>  #>  #> $teamDriveThemes[[6]] #> $teamDriveThemes[[6]]$id #> [1] \"bubbles_color\" #>  #> $teamDriveThemes[[6]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/bubbles_color_background.jpg\" #>  #> $teamDriveThemes[[6]]$colorRgb #> [1] \"#f06292\" #>  #>  #> $teamDriveThemes[[7]] #> $teamDriveThemes[[7]]$id #> [1] \"circuit\" #>  #> $teamDriveThemes[[7]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/circuit_background.jpg\" #>  #> $teamDriveThemes[[7]]$colorRgb #> [1] \"#039be5\" #>  #>  #> $teamDriveThemes[[8]] #> $teamDriveThemes[[8]]$id #> [1] \"clams\" #>  #> $teamDriveThemes[[8]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/clams_background.jpg\" #>  #> $teamDriveThemes[[8]]$colorRgb #> [1] \"#e91e63\" #>  #>  #> $teamDriveThemes[[9]] #> $teamDriveThemes[[9]]$id #> [1] \"clovers\" #>  #> $teamDriveThemes[[9]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/clovers_background.jpg\" #>  #> $teamDriveThemes[[9]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $teamDriveThemes[[10]] #> $teamDriveThemes[[10]]$id #> [1] \"cocktails\" #>  #> $teamDriveThemes[[10]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/cocktails_background.jpg\" #>  #> $teamDriveThemes[[10]]$colorRgb #> [1] \"#db4437\" #>  #>  #> $teamDriveThemes[[11]] #> $teamDriveThemes[[11]]$id #> [1] \"concert\" #>  #> $teamDriveThemes[[11]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/concert_background.jpg\" #>  #> $teamDriveThemes[[11]]$colorRgb #> [1] \"#ef6c00\" #>  #>  #> $teamDriveThemes[[12]] #> $teamDriveThemes[[12]]$id #> [1] \"desk\" #>  #> $teamDriveThemes[[12]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/desk_background.jpg\" #>  #> $teamDriveThemes[[12]]$colorRgb #> [1] \"#607d8b\" #>  #>  #> $teamDriveThemes[[13]] #> $teamDriveThemes[[13]]$id #> [1] \"donut_coffee\" #>  #> $teamDriveThemes[[13]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/donut_coffee_background.jpg\" #>  #> $teamDriveThemes[[13]]$colorRgb #> [1] \"#f06292\" #>  #>  #> $teamDriveThemes[[14]] #> $teamDriveThemes[[14]]$id #> [1] \"fabric_rolls\" #>  #> $teamDriveThemes[[14]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/fabric_rolls_background.jpg\" #>  #> $teamDriveThemes[[14]]$colorRgb #> [1] \"#78909c\" #>  #>  #> $teamDriveThemes[[15]] #> $teamDriveThemes[[15]]$id #> [1] \"flags\" #>  #> $teamDriveThemes[[15]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/flags_background.jpg\" #>  #> $teamDriveThemes[[15]]$colorRgb #> [1] \"#009688\" #>  #>  #> $teamDriveThemes[[16]] #> $teamDriveThemes[[16]]$id #> [1] \"flower_field\" #>  #> $teamDriveThemes[[16]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/flower_field_background.jpg\" #>  #> $teamDriveThemes[[16]]$colorRgb #> [1] \"#e06055\" #>  #>  #> $teamDriveThemes[[17]] #> $teamDriveThemes[[17]]$id #> [1] \"flowers\" #>  #> $teamDriveThemes[[17]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/flowers_background.jpg\" #>  #> $teamDriveThemes[[17]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $teamDriveThemes[[18]] #> $teamDriveThemes[[18]]$id #> [1] \"glass\" #>  #> $teamDriveThemes[[18]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/glass_background.jpg\" #>  #> $teamDriveThemes[[18]]$colorRgb #> [1] \"#0f9d58\" #>  #>  #> $teamDriveThemes[[19]] #> $teamDriveThemes[[19]]$id #> [1] \"lighthouse\" #>  #> $teamDriveThemes[[19]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/lighthouse_background.jpg\" #>  #> $teamDriveThemes[[19]]$colorRgb #> [1] \"#4285f4\" #>  #>  #> $teamDriveThemes[[20]] #> $teamDriveThemes[[20]]$id #> [1] \"maps\" #>  #> $teamDriveThemes[[20]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/maps_background.jpg\" #>  #> $teamDriveThemes[[20]]$colorRgb #> [1] \"#8d6e63\" #>  #>  #> $teamDriveThemes[[21]] #> $teamDriveThemes[[21]]$id #> [1] \"mountains\" #>  #> $teamDriveThemes[[21]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/mountains_background.jpg\" #>  #> $teamDriveThemes[[21]]$colorRgb #> [1] \"#5c6bc0\" #>  #>  #> $teamDriveThemes[[22]] #> $teamDriveThemes[[22]]$id #> [1] \"notebook\" #>  #> $teamDriveThemes[[22]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/notebook_background.jpg\" #>  #> $teamDriveThemes[[22]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $teamDriveThemes[[23]] #> $teamDriveThemes[[23]]$id #> [1] \"paper_colored\" #>  #> $teamDriveThemes[[23]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/paper_colored_background.jpg\" #>  #> $teamDriveThemes[[23]]$colorRgb #> [1] \"#9c27b0\" #>  #>  #> $teamDriveThemes[[24]] #> $teamDriveThemes[[24]]$id #> [1] \"pencils\" #>  #> $teamDriveThemes[[24]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/pencils_background.jpg\" #>  #> $teamDriveThemes[[24]]$colorRgb #> [1] \"#0097a7\" #>  #>  #> $teamDriveThemes[[25]] #> $teamDriveThemes[[25]]$id #> [1] \"roofing_metal\" #>  #> $teamDriveThemes[[25]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/roofing_metal_background.jpg\" #>  #> $teamDriveThemes[[25]]$colorRgb #> [1] \"#039be5\" #>  #>  #> $teamDriveThemes[[26]] #> $teamDriveThemes[[26]]$id #> [1] \"sticky_notes\" #>  #> $teamDriveThemes[[26]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/sticky_notes_background.jpg\" #>  #> $teamDriveThemes[[26]]$colorRgb #> [1] \"#0097a7\" #>  #>  #> $teamDriveThemes[[27]] #> $teamDriveThemes[[27]]$id #> [1] \"table\" #>  #> $teamDriveThemes[[27]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/table_background.jpg\" #>  #> $teamDriveThemes[[27]]$colorRgb #> [1] \"#8d6e63\" #>  #>  #> $teamDriveThemes[[28]] #> $teamDriveThemes[[28]]$id #> [1] \"travel\" #>  #> $teamDriveThemes[[28]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/travel_background.jpg\" #>  #> $teamDriveThemes[[28]]$colorRgb #> [1] \"#039be5\" #>  #>  #> $teamDriveThemes[[29]] #> $teamDriveThemes[[29]]$id #> [1] \"waves\" #>  #> $teamDriveThemes[[29]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/waves_background.jpg\" #>  #> $teamDriveThemes[[29]]$colorRgb #> [1] \"#ff5722\" #>  #>  #> $teamDriveThemes[[30]] #> $teamDriveThemes[[30]]$id #> [1] \"waves_blue\" #>  #> $teamDriveThemes[[30]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/waves_blue_background.jpg\" #>  #> $teamDriveThemes[[30]]$colorRgb #> [1] \"#5c6bc0\" #>  #>  #> $teamDriveThemes[[31]] #> $teamDriveThemes[[31]]$id #> [1] \"wood\" #>  #> $teamDriveThemes[[31]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/wood_background.jpg\" #>  #> $teamDriveThemes[[31]]$colorRgb #> [1] \"#8d6e63\" #>  #>  #>  #> $driveThemes #> $driveThemes[[1]] #> $driveThemes[[1]]$id #> [1] \"abacus\" #>  #> $driveThemes[[1]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/abacus_background.jpg\" #>  #> $driveThemes[[1]]$colorRgb #> [1] \"#ea6100\" #>  #>  #> $driveThemes[[2]] #> $driveThemes[[2]]$id #> [1] \"blueprints\" #>  #> $driveThemes[[2]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/blueprints_background.jpg\" #>  #> $driveThemes[[2]]$colorRgb #> [1] \"#4285f4\" #>  #>  #> $driveThemes[[3]] #> $driveThemes[[3]]$id #> [1] \"bok_choy\" #>  #> $driveThemes[[3]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/bok_choy_background.jpg\" #>  #> $driveThemes[[3]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $driveThemes[[4]] #> $driveThemes[[4]]$id #> [1] \"books\" #>  #> $driveThemes[[4]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/books_background.jpg\" #>  #> $driveThemes[[4]]$colorRgb #> [1] \"#4285f4\" #>  #>  #> $driveThemes[[5]] #> $driveThemes[[5]]$id #> [1] \"bread\" #>  #> $driveThemes[[5]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/bread_background.jpg\" #>  #> $driveThemes[[5]]$colorRgb #> [1] \"#ef6c00\" #>  #>  #> $driveThemes[[6]] #> $driveThemes[[6]]$id #> [1] \"bubbles_color\" #>  #> $driveThemes[[6]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/bubbles_color_background.jpg\" #>  #> $driveThemes[[6]]$colorRgb #> [1] \"#f06292\" #>  #>  #> $driveThemes[[7]] #> $driveThemes[[7]]$id #> [1] \"circuit\" #>  #> $driveThemes[[7]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/circuit_background.jpg\" #>  #> $driveThemes[[7]]$colorRgb #> [1] \"#039be5\" #>  #>  #> $driveThemes[[8]] #> $driveThemes[[8]]$id #> [1] \"clams\" #>  #> $driveThemes[[8]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/clams_background.jpg\" #>  #> $driveThemes[[8]]$colorRgb #> [1] \"#e91e63\" #>  #>  #> $driveThemes[[9]] #> $driveThemes[[9]]$id #> [1] \"clovers\" #>  #> $driveThemes[[9]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/clovers_background.jpg\" #>  #> $driveThemes[[9]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $driveThemes[[10]] #> $driveThemes[[10]]$id #> [1] \"cocktails\" #>  #> $driveThemes[[10]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/cocktails_background.jpg\" #>  #> $driveThemes[[10]]$colorRgb #> [1] \"#db4437\" #>  #>  #> $driveThemes[[11]] #> $driveThemes[[11]]$id #> [1] \"concert\" #>  #> $driveThemes[[11]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/concert_background.jpg\" #>  #> $driveThemes[[11]]$colorRgb #> [1] \"#ef6c00\" #>  #>  #> $driveThemes[[12]] #> $driveThemes[[12]]$id #> [1] \"desk\" #>  #> $driveThemes[[12]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/desk_background.jpg\" #>  #> $driveThemes[[12]]$colorRgb #> [1] \"#607d8b\" #>  #>  #> $driveThemes[[13]] #> $driveThemes[[13]]$id #> [1] \"donut_coffee\" #>  #> $driveThemes[[13]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/donut_coffee_background.jpg\" #>  #> $driveThemes[[13]]$colorRgb #> [1] \"#f06292\" #>  #>  #> $driveThemes[[14]] #> $driveThemes[[14]]$id #> [1] \"fabric_rolls\" #>  #> $driveThemes[[14]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/fabric_rolls_background.jpg\" #>  #> $driveThemes[[14]]$colorRgb #> [1] \"#78909c\" #>  #>  #> $driveThemes[[15]] #> $driveThemes[[15]]$id #> [1] \"flags\" #>  #> $driveThemes[[15]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/flags_background.jpg\" #>  #> $driveThemes[[15]]$colorRgb #> [1] \"#009688\" #>  #>  #> $driveThemes[[16]] #> $driveThemes[[16]]$id #> [1] \"flower_field\" #>  #> $driveThemes[[16]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/flower_field_background.jpg\" #>  #> $driveThemes[[16]]$colorRgb #> [1] \"#e06055\" #>  #>  #> $driveThemes[[17]] #> $driveThemes[[17]]$id #> [1] \"flowers\" #>  #> $driveThemes[[17]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/flowers_background.jpg\" #>  #> $driveThemes[[17]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $driveThemes[[18]] #> $driveThemes[[18]]$id #> [1] \"glass\" #>  #> $driveThemes[[18]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/glass_background.jpg\" #>  #> $driveThemes[[18]]$colorRgb #> [1] \"#0f9d58\" #>  #>  #> $driveThemes[[19]] #> $driveThemes[[19]]$id #> [1] \"lighthouse\" #>  #> $driveThemes[[19]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/lighthouse_background.jpg\" #>  #> $driveThemes[[19]]$colorRgb #> [1] \"#4285f4\" #>  #>  #> $driveThemes[[20]] #> $driveThemes[[20]]$id #> [1] \"maps\" #>  #> $driveThemes[[20]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/maps_background.jpg\" #>  #> $driveThemes[[20]]$colorRgb #> [1] \"#8d6e63\" #>  #>  #> $driveThemes[[21]] #> $driveThemes[[21]]$id #> [1] \"mountains\" #>  #> $driveThemes[[21]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/mountains_background.jpg\" #>  #> $driveThemes[[21]]$colorRgb #> [1] \"#5c6bc0\" #>  #>  #> $driveThemes[[22]] #> $driveThemes[[22]]$id #> [1] \"notebook\" #>  #> $driveThemes[[22]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/notebook_background.jpg\" #>  #> $driveThemes[[22]]$colorRgb #> [1] \"#689f38\" #>  #>  #> $driveThemes[[23]] #> $driveThemes[[23]]$id #> [1] \"paper_colored\" #>  #> $driveThemes[[23]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/paper_colored_background.jpg\" #>  #> $driveThemes[[23]]$colorRgb #> [1] \"#9c27b0\" #>  #>  #> $driveThemes[[24]] #> $driveThemes[[24]]$id #> [1] \"pencils\" #>  #> $driveThemes[[24]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/pencils_background.jpg\" #>  #> $driveThemes[[24]]$colorRgb #> [1] \"#0097a7\" #>  #>  #> $driveThemes[[25]] #> $driveThemes[[25]]$id #> [1] \"roofing_metal\" #>  #> $driveThemes[[25]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/roofing_metal_background.jpg\" #>  #> $driveThemes[[25]]$colorRgb #> [1] \"#039be5\" #>  #>  #> $driveThemes[[26]] #> $driveThemes[[26]]$id #> [1] \"sticky_notes\" #>  #> $driveThemes[[26]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/sticky_notes_background.jpg\" #>  #> $driveThemes[[26]]$colorRgb #> [1] \"#0097a7\" #>  #>  #> $driveThemes[[27]] #> $driveThemes[[27]]$id #> [1] \"table\" #>  #> $driveThemes[[27]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/table_background.jpg\" #>  #> $driveThemes[[27]]$colorRgb #> [1] \"#8d6e63\" #>  #>  #> $driveThemes[[28]] #> $driveThemes[[28]]$id #> [1] \"travel\" #>  #> $driveThemes[[28]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/travel_background.jpg\" #>  #> $driveThemes[[28]]$colorRgb #> [1] \"#039be5\" #>  #>  #> $driveThemes[[29]] #> $driveThemes[[29]]$id #> [1] \"waves\" #>  #> $driveThemes[[29]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/waves_background.jpg\" #>  #> $driveThemes[[29]]$colorRgb #> [1] \"#ff5722\" #>  #>  #> $driveThemes[[30]] #> $driveThemes[[30]]$id #> [1] \"waves_blue\" #>  #> $driveThemes[[30]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/waves_blue_background.jpg\" #>  #> $driveThemes[[30]]$colorRgb #> [1] \"#5c6bc0\" #>  #>  #> $driveThemes[[31]] #> $driveThemes[[31]]$id #> [1] \"wood\" #>  #> $driveThemes[[31]]$backgroundImageLink #> [1] \"https://ssl.gstatic.com/team_drive_themes/wood_background.jpg\" #>  #> $driveThemes[[31]]$colorRgb #> [1] \"#8d6e63\" #>  #>  #>  #> $canCreateTeamDrives #> [1] FALSE #>  #> $canCreateDrives #> [1] FALSE #>   # explore the export formats available for Drive files, by MIME type about <- drive_about() about[[\"exportFormats\"]] %>%   purrr::map(unlist) #> $`application/vnd.google-apps.document` #>  [1] \"application/rtf\"                                                         #>  [2] \"application/vnd.oasis.opendocument.text\"                                 #>  [3] \"text/html\"                                                               #>  [4] \"application/pdf\"                                                         #>  [5] \"text/x-markdown\"                                                         #>  [6] \"text/markdown\"                                                           #>  [7] \"application/epub+zip\"                                                    #>  [8] \"application/zip\"                                                         #>  [9] \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" #> [10] \"text/plain\"                                                              #>  #> $`application/vnd.google-apps.vid` #> [1] \"video/mp4\" #>  #> $`application/vnd.google-apps.spreadsheet` #> [1] \"application/x-vnd.oasis.opendocument.spreadsheet\"                  #> [2] \"text/tab-separated-values\"                                         #> [3] \"application/pdf\"                                                   #> [4] \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" #> [5] \"text/csv\"                                                          #> [6] \"application/zip\"                                                   #> [7] \"application/vnd.oasis.opendocument.spreadsheet\"                    #>  #> $`application/vnd.google-apps.jam` #> [1] \"application/pdf\" #>  #> $`application/vnd.google-apps.script` #> [1] \"application/vnd.google-apps.script+json\" #>  #> $`application/vnd.google-apps.presentation` #> [1] \"application/vnd.oasis.opendocument.presentation\"                           #> [2] \"application/pdf\"                                                           #> [3] \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" #> [4] \"text/plain\"                                                                #>  #> $`application/vnd.google-apps.form` #> [1] \"application/zip\" #>  #> $`application/vnd.google-apps.drawing` #> [1] \"image/svg+xml\"   \"image/png\"       \"application/pdf\" #> [4] \"image/jpeg\"      #>  #> $`application/vnd.google-apps.site` #> [1] \"text/plain\" #>  #> $`application/vnd.google-apps.mail-layout` #> [1] \"text/plain\" #>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authorize googledrive — drive_auth","title":"Authorize googledrive — drive_auth","text":"Authorize googledrive view manage Drive files. function wrapper around gargle::token_fetch(). default, directed web browser, asked sign Google account, grant googledrive permission operate behalf Google Drive. default, permission, user credentials cached folder home directory, can automatically refreshed, necessary. Storage user level means token can used across multiple projects tokens less likely synced cloud accident.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authorize googledrive — drive_auth","text":"","code":"drive_auth(   email = gargle::gargle_oauth_email(),   path = NULL,   subject = NULL,   scopes = \"drive\",   cache = gargle::gargle_oauth_cache(),   use_oob = gargle::gargle_oob_default(),   token = NULL )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authorize googledrive — drive_auth","text":"email Optional. specified, email can take several different forms: \"jane@gmail.com\", .e. actual email address. allows user target specific Google identity. specified, used token lookup, .e. determine suitable token already available cache. token found, email used pre-select targeted Google identity OAuth chooser. (Note, however, email associated token cached always determined token , never argument). \"*@example.com\", .e. domain-glob pattern. can helpful need code \"just works\" alice@example.com bob@example.com. TRUE means approving email auto-discovery. exactly one matching token found cache, used. FALSE NA mean want ignore token cache force new OAuth dance browser. Defaults option named \"gargle_oauth_email\", retrieved gargle_oauth_email() (unless wrapper package implements different default behavior). path JSON identifying service account, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). subject optional subject claim. Specify wish use service account represented path impersonate subject, normal user. can work, administrator must grant service account domain-wide authority. Identify user impersonate via email, e.g. subject = \"user@example.com\". Note gargle automatically adds non-sensitive \"https://www.googleapis.com/auth/userinfo.email\" scope, scope must enabled service account, along scopes requested. scopes One API scopes. scope can specified full , Drive API-specific scopes, abbreviated form recognized drive_scopes(): \"drive\" = \"https://www.googleapis.com/auth/drive\" (default) \"full\" = \"https://www.googleapis.com/auth/drive\" (\"drive\") \"drive.readonly\" = \"https://www.googleapis.com/auth/drive.readonly\" \"drive.file\" = \"https://www.googleapis.com/auth/drive.file\" \"drive.appdata\" = \"https://www.googleapis.com/auth/drive.appdata\" \"drive.metadata\" = \"https://www.googleapis.com/auth/drive.metadata\" \"drive.metadata.readonly\" = \"https://www.googleapis.com/auth/drive.metadata.readonly\" \"drive.photos.readonly\" = \"https://www.googleapis.com/auth/drive.photos.readonly\" \"drive.scripts\" = \"https://www.googleapis.com/auth/drive.scripts See https://developers.google.com/drive/api/guides/api-specific-auth details permissions scope. cache Specifies OAuth token cache. Defaults option named \"gargle_oauth_cache\", retrieved via gargle_oauth_cache(). use_oob Whether use --band authentication (, perhaps, variant implemented gargle known \"pseudo-OOB\") first acquiring token. Defaults value returned gargle_oob_default(). Note (pseudo-)OOB auth affects initial OAuth dance. retrieve (possibly refresh) cached token, use_oob effect. OAuth client provided implicitly wrapper package, type probably defaults value returned gargle_oauth_client_type(). can take control client type setting options(gargle_oauth_client_type = \"web\") options(gargle_oauth_client_type = \"installed\"). token token class Token2.0 object httr's class request, .e. token prepared httr::config() Token2.0 auth_token component.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Authorize googledrive — drive_auth","text":"users, time, need call drive_auth() explicitly – triggered first action requires authorization. Even called, default arguments often suffice. However, necessary, drive_auth() allows user explicitly: Declare Google identity use, via email specification. Use service account token workload identity federation via path. Bring token. Customize scopes. Use non-default cache folder turn caching . Explicitly request --bound (OOB) auth via use_oob. interacting R within browser (applies RStudio Server, Posit Workbench, Posit Cloud, Google Colaboratory), need OOB auth pseudo-OOB variant. happen automatically, can request explicitly use_oob = TRUE , persistently, setting option via options(gargle_oob_default = TRUE). choice conventional OOB pseudo-OOB auth determined type OAuth client. client \"installed\" type, use_oob = TRUE results conventional OOB auth. client \"web\" type, use_oob = TRUE results pseudo-OOB auth. Packages provide built-OAuth client can usually detect type client use. need set explicitly, use \"gargle_oauth_client_type\" option:   details many ways find token, see gargle::token_fetch(). deeper control auth, use drive_auth_configure() bring OAuth client API key. learn gargle options, see gargle::gargle_options.","code":"options(gargle_oauth_client_type = \"web\")       # pseudo-OOB # or, alternatively options(gargle_oauth_client_type = \"installed\") # conventional OOB"},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authorize googledrive — drive_auth","text":"","code":"if (FALSE) { # rlang::is_interactive() # load/refresh existing credentials, if available # otherwise, go to browser for authentication and authorization drive_auth()  # see user associated with current token drive_user()  # force use of a token associated with a specific email drive_auth(email = \"jenny@example.com\") drive_user()  # force the OAuth web dance drive_auth(email = NA)  # use a 'read only' scope, so it's impossible to edit or delete files drive_auth(scopes = \"drive.readonly\")  # use a service account token drive_auth(path = \"foofy-83ee9e7c9c48.json\") }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Edit and view auth configuration — drive_auth_configure","title":"Edit and view auth configuration — drive_auth_configure","text":"functions give control visibility auth configuration drive_auth() . drive_auth_configure() lets user specify : OAuth client, used obtaining user token. API key. googledrive de-authorized via drive_deauth(), requests sent API key lieu token. See vignette(\"get-api-credentials\", package = \"gargle\") . user configure settings, internal defaults used. drive_oauth_client() drive_api_key() retrieve currently configured OAuth client API key, respectively.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Edit and view auth configuration — drive_auth_configure","text":"","code":"drive_auth_configure(client, path, api_key, app = deprecated())  drive_api_key()  drive_oauth_client()"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Edit and view auth configuration — drive_auth_configure","text":"client Google OAuth client, presumably constructed via gargle::gargle_oauth_client_from_json(). Note, however, preferred specify client JSON, using path argument. path JSON downloaded Google Cloud Console, containing client id secret, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). api_key API key. app Replaced client argument.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth_configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Edit and view auth configuration — drive_auth_configure","text":"drive_auth_configure(): object R6 class gargle::AuthState, invisibly. drive_oauth_client(): current user-configured OAuth client. drive_api_key(): current user-configured API key.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_auth_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Edit and view auth configuration — drive_auth_configure","text":"","code":"# see and store the current user-configured OAuth client (probaby `NULL`) (original_client <- drive_oauth_client()) #> NULL  # see and store the current user-configured API key (probaby `NULL`) (original_api_key <- drive_api_key()) #> NULL  # the preferred way to configure your own client is via a JSON file # downloaded from Google Developers Console # this example JSON is indicative, but fake path_to_json <- system.file(   \"extdata\", \"client_secret_installed.googleusercontent.com.json\",   package = \"gargle\" ) drive_auth_configure(path = path_to_json)  # this is also obviously a fake API key drive_auth_configure(api_key = \"the_key_I_got_for_a_google_API\")  # confirm the changes drive_oauth_client() #> <gargle_oauth_client> #> name: a_project_d1c5a8066d2cbe48e8d94514dd286163 #> id: abc.apps.googleusercontent.com #> secret: <REDACTED> #> type: installed #> redirect_uris: http://localhost drive_api_key() #> [1] \"the_key_I_got_for_a_google_API\"  # restore original auth config drive_auth_configure(client = original_client, api_key = original_api_key)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_browse.html","id":null,"dir":"Reference","previous_headings":"","what":"Visit Drive file in browser — drive_browse","title":"Visit Drive file in browser — drive_browse","text":"Visits file Google Drive default browser.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_browse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visit Drive file in browser — drive_browse","text":"","code":"drive_browse(file = .Last.value)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_browse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visit Drive file in browser — drive_browse","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_browse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visit Drive file in browser — drive_browse","text":"Character vector file hyperlinks, drive_link(), invisibly.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_browse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visit Drive file in browser — drive_browse","text":"","code":"if (FALSE) { # drive_has_token() && rlang::is_interactive() drive_find(n_max = 1) %>% drive_browse() }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_cp.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy a Drive file — drive_cp","title":"Copy a Drive file — drive_cp","text":"Copies existing Drive file new file id.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_cp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy a Drive file — drive_cp","text":"","code":"drive_cp(   file,   path = NULL,   name = NULL,   ...,   overwrite = NA,   verbose = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_cp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy a Drive file — drive_cp","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble. path Specifies target destination new file Google Drive. Can actual path (character), file id marked as_id(), dribble. path shortcut folder, automatically resolved target folder. path given path (opposed dribble id), best explicitly indicate folder including trailing slash, since always worked context call. default, new file parent folder source file. name Character, new file name specified part path. force path interpreted folder, even character lacks trailing slash. Defaults \"Copy FILE-NAME\". ... Named parameters pass along Drive API. dynamic dots semantics. can affect metadata target file specifying properties Files resource via .... Read \"Request body\" section Drive API docs associated endpoint learn relevant parameters. overwrite Logical, indicating whether check pre-existing file targetted \"filepath\". quotes around \"filepath\" refer fact Drive impose 1--1 relationship filepaths files, like typical file system; read drive_get(). NA (default): Just operation, even results multiple files filepath. TRUE: Check pre-existing file filepath. zero one, move pre-existing file trash, carry . Note new file inherit properties old one, sharing publishing settings. new file ID. error thrown two pre-existing files found. FALSE: Error pre-existing file filepath. Note existence checks, based filepath, expensive operations, .e. require additional API calls. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_cp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy a Drive file — drive_cp","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_cp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy a Drive file — drive_cp","text":"","code":"# Target one of the official example files (src_file <- drive_example_remote(\"chicken.txt\")) #> # A dribble: 1 × 3 #>   name        id                                drive_resource    #>   <chr>       <drv_id>                          <list>            #> 1 chicken.txt 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y <named list [38]>  # Make a \"Copy of\" copy in your My Drive cp1 <- drive_cp(src_file) #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • Copy of chicken.txt <id: 135zXKqGUD7ACQtsPc4KF3n7FxpLLFmGE>  # Make an explicitly named copy, in a different folder, and star it. # The starring is an example of providing metadata via `...`. # `starred` is not an actual argument to `drive_cp()`, # it just gets passed through to the API. folder <- drive_mkdir(\"drive-cp-folder\") #> Created Drive file: #> • drive-cp-folder <id: 1s_q_AWVFuER35X32W6FfQyortijyY7Bp> #> With MIME type: #> • application/vnd.google-apps.folder cp2 <- drive_cp(   src_file,   path = folder,   name = \"chicken-cp.txt\",   starred = TRUE ) #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • drive-cp-folder/chicken-cp.txt <id: 1ogVSemXI__to7e8UftOrb3pZYvbODwtI> drive_reveal(cp2, \"starred\") #> # A dribble: 1 × 4 #>   name           starred id                                drive_resource #>   <chr>          <lgl>   <drv_id>                          <list>         #> 1 chicken-cp.txt TRUE    1ogVSemXI__to7e8UftOrb3pZYvbODwtI <named list>    # `overwrite = FALSE` errors if file already exists at target filepath # THIS WILL ERROR! # drive_cp(src_file, name = \"Copy of chicken.txt\", overwrite = FALSE)  # `overwrite = TRUE` moves an existing file to trash, then proceeds cp3 <- drive_cp(src_file, name = \"Copy of chicken.txt\", overwrite = TRUE) #> File trashed: #> • Copy of chicken.txt <id: 135zXKqGUD7ACQtsPc4KF3n7FxpLLFmGE> #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • Copy of chicken.txt <id: 1PmZs_5oEeB6XSr7zkwuL9KFhoeSzYQRx>  # Delete all of our copies and the new folder! drive_rm(cp1, cp2, cp3, folder) #> Files deleted: #> • Copy of chicken.txt <id: 135zXKqGUD7ACQtsPc4KF3n7FxpLLFmGE> #> • chicken-cp.txt <id: 1ogVSemXI__to7e8UftOrb3pZYvbODwtI> #> • Copy of chicken.txt <id: 1PmZs_5oEeB6XSr7zkwuL9KFhoeSzYQRx> #> • drive-cp-folder <id: 1s_q_AWVFuER35X32W6FfQyortijyY7Bp>  # Target an official example file that's a csv file (csv_file <- drive_example_remote(\"chicken.csv\")) #> # A dribble: 1 × 3 #>   name        id                                drive_resource    #>   <chr>       <drv_id>                          <list>            #> 1 chicken.csv 1VOh6wWbRfuQLxbLg87o58vxJt95SIiZ7 <named list [37]>  # copy AND AT THE SAME TIME convert it to a Google Sheet chicken_sheet <- drive_cp(   csv_file,   name = \"chicken-sheet-copy\",   mime_type = drive_mime_type(\"spreadsheet\") ) #> Original file: #> • chicken.csv <id: 1VOh6wWbRfuQLxbLg87o58vxJt95SIiZ7> #> Copied to file: #> • chicken-sheet-copy <id: 1aaQb6lYZ4ogY4YlIQxIPDi2L5babM8pSQqTIwtWbIu8> # is it really a Google Sheet? drive_reveal(chicken_sheet, \"mime_type\")$mime_type #> [1] \"application/vnd.google-apps.spreadsheet\"  # go see the new Sheet in the browser # drive_browse(chicken_sheet)  # Clean up drive_rm(chicken_sheet) #> File deleted: #> • chicken-sheet-copy <id: 1aaQb6lYZ4ogY4YlIQxIPDi2L5babM8pSQqTIwtWbIu8>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new blank Drive file — drive_create","title":"Create a new blank Drive file — drive_create","text":"Creates new blank Drive file. Note better options special cases: Creating folder? Use drive_mkdir(). Want upload existing local content new Drive file? Use drive_upload().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new blank Drive file — drive_create","text":"","code":"drive_create(   name,   path = NULL,   type = NULL,   ...,   overwrite = NA,   verbose = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new blank Drive file — drive_create","text":"name Name new file , optionally, path specifies existing parent folder, well new file name. path Target destination new item, .e. folder shared drive. Can given actual path (character), file id URL marked as_id(), dribble. Defaults \"Drive\" root folder. path shortcut folder, automatically resolved target folder. type Character. Create blank Google Doc, Sheet Slides setting type document, spreadsheet, presentation, respectively. non-NULL values type pre-processed drive_mime_type(). ... Named parameters pass along Drive API. dynamic dots semantics. can affect metadata target file specifying properties Files resource via .... Read \"Request body\" section Drive API docs associated endpoint learn relevant parameters. overwrite Logical, indicating whether check pre-existing file targetted \"filepath\". quotes around \"filepath\" refer fact Drive impose 1--1 relationship filepaths files, like typical file system; read drive_get(). NA (default): Just operation, even results multiple files filepath. TRUE: Check pre-existing file filepath. zero one, move pre-existing file trash, carry . Note new file inherit properties old one, sharing publishing settings. new file ID. error thrown two pre-existing files found. FALSE: Error pre-existing file filepath. Note existence checks, based filepath, expensive operations, .e. require additional API calls. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new blank Drive file — drive_create","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new blank Drive file — drive_create","text":"","code":"# Create a blank Google Doc named 'WordStar' in # your 'My Drive' root folder and star it wordstar <- drive_create(\"WordStar\", type = \"document\", starred = TRUE) #> Created Drive file: #> • WordStar <id: 1vhCm0vh6JhZQSK25Q9ZPTgw__nLEFOXaYok-AzDx37E> #> With MIME type: #> • application/vnd.google-apps.document  # is 'WordStar' really starred? YES purrr::pluck(wordstar, \"drive_resource\", 1, \"starred\") #> [1] TRUE  # Create a blank Google Slides presentation in # the root folder, and set its description execuvision <- drive_create(   \"ExecuVision\",   type = \"presentation\",   description = \"deeply nested bullet lists FTW\" ) #> Created Drive file: #> • ExecuVision <id: 1cQPoWfnbht0lysudA5KCr0bKHGBse-dDxIOoYLaNXY4> #> With MIME type: #> • application/vnd.google-apps.presentation  # Did we really set the description? YES purrr::pluck(execuvision, \"drive_resource\", 1, \"description\") #> [1] \"deeply nested bullet lists FTW\"  # check out the new presentation drive_browse(execuvision)  # Create folder 'b4xl' in the root folder, # then create an empty new Google Sheet in it b4xl <- drive_mkdir(\"b4xl\") #> Created Drive file: #> • b4xl <id: 1t3Jp8xk4m9EjlKTIn6PjiV-kKi4uNwdY> #> With MIME type: #> • application/vnd.google-apps.folder drive_create(\"VisiCalc\", path = b4xl, type = \"spreadsheet\") #> Created Drive file: #> • VisiCalc <id: 1Gvh33sNnDa7Sqp042HvPCVyJjLVQgPdgxJDylflDQ2s> #> With MIME type: #> • application/vnd.google-apps.spreadsheet  # Another way to create a Google Sheet in the folder 'b4xl' drive_create(\"b4xl/SuperCalc\", type = \"spreadsheet\") #> Created Drive file: #> • SuperCalc <id: 1F6NfGeqRoDg0SD6ggy7Pzyuq2_2aKWcH1wXJGGiMf9I> #> With MIME type: #> • application/vnd.google-apps.spreadsheet  # Yet another way to create a new file in a folder, # this time specifying parent `path` as a character drive_create(\"Lotus 1-2-3\", path = \"b4xl\", type = \"spreadsheet\") #> Created Drive file: #> • Lotus 1-2-3 <id: 1L3nhqM-wdHL6wc6pB9R_RyREyUzWlkJUMp_G5GLEYrU> #> With MIME type: #> • application/vnd.google-apps.spreadsheet  # Did we really create those Sheets in the intended folder? YES drive_ls(\"b4xl\") #> # A dribble: 3 × 3 #>   name        id                                           drive_resource #>   <chr>       <drv_id>                                     <list>         #> 1 Lotus 1-2-3 1L3nhqM-wdHL6wc6pB9R_RyREyUzWlkJUMp_G5GLEYrU <named list>   #> 2 SuperCalc   1F6NfGeqRoDg0SD6ggy7Pzyuq2_2aKWcH1wXJGGiMf9I <named list>   #> 3 VisiCalc    1Gvh33sNnDa7Sqp042HvPCVyJjLVQgPdgxJDylflDQ2s <named list>    # `overwrite = FALSE` errors if file already exists at target filepath # THIS WILL ERROR! drive_create(\"VisiCalc\", path = b4xl, overwrite = FALSE) #> Error in check_for_overwrite(params[[\"parents\"]], params[[\"name\"]], overwrite): 1 item already exists at the target filepath and `overwrite = #> FALSE`: #> • VisiCalc <id: 1Gvh33sNnDa7Sqp042HvPCVyJjLVQgPdgxJDylflDQ2s>  # `overwrite = TRUE` moves an existing file to trash, then proceeds drive_create(\"VisiCalc\", path = b4xl, overwrite = TRUE) #> File trashed: #> • VisiCalc <id: 1Gvh33sNnDa7Sqp042HvPCVyJjLVQgPdgxJDylflDQ2s> #> Created Drive file: #> • VisiCalc <id: 1N9NNUeTHQGpNdAvskApF5T2R1TBnwgEx> #> With MIME type: #> • application/octet-stream  # Clean up drive_rm(wordstar, b4xl, execuvision) #> Files deleted: #> • WordStar <id: 1vhCm0vh6JhZQSK25Q9ZPTgw__nLEFOXaYok-AzDx37E> #> • b4xl <id: 1t3Jp8xk4m9EjlKTIn6PjiV-kKi4uNwdY> #> • ExecuVision <id: 1cQPoWfnbht0lysudA5KCr0bKHGBse-dDxIOoYLaNXY4>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_deauth.html","id":null,"dir":"Reference","previous_headings":"","what":"Suspend authorization — drive_deauth","title":"Suspend authorization — drive_deauth","text":"Put googledrive de-authorized state. Instead sending token, googledrive send API key. can used access public resources Google sign-required. handy using googledrive non-interactive setting make requests require token. prevent attempt obtain token interactively browser. user can configure API key via drive_auth_configure() retrieve key via drive_api_key(). absence user-configured key, built-default key used.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_deauth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suspend authorization — drive_deauth","text":"","code":"drive_deauth()"},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_deauth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suspend authorization — drive_deauth","text":"","code":"if (FALSE) { # rlang::is_interactive() drive_deauth() drive_user()  # in a deauth'ed state, we can still get metadata on a world-readable file public_file <- drive_example_remote(\"chicken.csv\") public_file # we can still download it too drive_download(public_file) }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a Drive file — drive_download","title":"Download a Drive file — drive_download","text":"function downloads file Google Drive. Native Google file types, Google Docs, Google Sheets, Google Slides, must exported conventional local file type. can specified: explicitly via type implicitly via file extension path , .e. rely built-default see export file types even possible, see Drive API documentation result drive_about()$exportFormats. returned dribble includes local_path column.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a Drive file — drive_download","text":"","code":"drive_download(   file,   path = NULL,   type = NULL,   overwrite = FALSE,   verbose = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a Drive file — drive_download","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble. path Character. Path output file. absent, default file name file's name Google Drive default location working directory, possibly added file extension. type Character. consulted file native Google file. Specifies desired type exported file. processed via drive_mime_type(), either file extension like \"pdf\" full MIME type like \"application/pdf\" acceptable. overwrite logical scalar. local path already exists, want overwrite ? verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a Drive file — drive_download","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_download.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a Drive file — drive_download","text":"","code":"# Target one of the official example files (src_file <- drive_example_remote(\"chicken_sheet\")) #> # A dribble: 1 × 3 #>   name          id       drive_resource    #>   <chr>         <drv_id> <list>            #> 1 chicken_sheet 1SeFXkr… <named list [30]>  # Download Sheet as csv, explicit type downloaded_file <- drive_download(src_file, type = \"csv\") #> File downloaded: #> • chicken_sheet <id: 1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU> #> Saved locally as: #> • chicken_sheet.csv  # See local path to new file downloaded_file$local_path #> [1] \"chicken_sheet.csv\"  # Download as csv, type implicit in file extension drive_download(src_file, path = \"my_csv_file.csv\") #> File downloaded: #> • chicken_sheet <id: 1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU> #> Saved locally as: #> • my_csv_file.csv  # Download with default name and type (xlsx) drive_download(src_file) #> File downloaded: #> • chicken_sheet <id: 1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU> #> Saved locally as: #> • chicken_sheet.xlsx  # Clean up unlink(c(\"chicken_sheet.csv\", \"chicken_sheet.xlsx\", \"my_csv_file.csv\"))"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_empty_trash.html","id":null,"dir":"Reference","previous_headings":"","what":"Empty Drive Trash — drive_empty_trash","title":"Empty Drive Trash — drive_empty_trash","text":"Caution, permanently delete files Drive trash.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_empty_trash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empty Drive Trash — drive_empty_trash","text":"","code":"drive_empty_trash(verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_empty_trash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empty Drive Trash — drive_empty_trash","text":"verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"List Drive endpoints — drive_endpoints","title":"List Drive endpoints — drive_endpoints","text":"googledrive package stores named list Drive API v3 endpoints (\"methods\", using Google's vocabulary) internally functions expose data. drive_endpoint() returns one endpoint, .e. uses [[. drive_endpoints() returns list endpoints, .e. uses [. names list (id sub-elements) nicknames can used specify endpoint request_generate(). endpoint, store nickname id, associated HTTP verb, path, details parameters. list derived programmatically Drive API v3 Discovery Document (https://www.googleapis.com/discovery/v1/apis/drive/v3/rest) using approach described Discovery Documents section gargle vignette Request helper functions.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Drive endpoints — drive_endpoints","text":"","code":"drive_endpoints(i = NULL)  drive_endpoint(i)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Drive endpoints — drive_endpoints","text":"name(s) integer index(ices) endpoints return. optional drive_endpoints() , given, entire list returned.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Drive endpoints — drive_endpoints","text":"One Drive API v3 endpoints used internally googledrive.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Drive endpoints — drive_endpoints","text":"","code":"str(head(drive_endpoints(), 3), max.level = 2) #> List of 3 #>  $ drive.about.get                :List of 7 #>   ..$ id         : chr \"drive.about.get\" #>   ..$ httpMethod : chr \"GET\" #>   ..$ path       : 'fs_path' chr \"drive/v3/about\" #>   ..$ scopes     : chr \"drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly\" #>   ..$ description: chr \"Gets information about the user, the user's Drive, and system capabilities.\" #>   ..$ response   : chr \"About\" #>   ..$ parameters :List of 7 #>  $ drive.changes.getStartPageToken:List of 7 #>   ..$ id         : chr \"drive.changes.getStartPageToken\" #>   ..$ httpMethod : chr \"GET\" #>   ..$ path       : 'fs_path' chr \"drive/v3/changes/startPageToken\" #>   ..$ parameters :List of 11 #>   ..$ scopes     : chr \"drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly\" #>   ..$ description: chr \"Gets the starting pageToken for listing future changes.\" #>   ..$ response   : chr \"StartPageToken\" #>  $ drive.changes.list             :List of 9 #>   ..$ id                  : chr \"drive.changes.list\" #>   ..$ httpMethod          : chr \"GET\" #>   ..$ path                : 'fs_path' chr \"drive/v3/changes\" #>   ..$ parameters          :List of 20 #>   ..$ scopes              : chr \"drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly\" #>   ..$ description         : chr \"Lists the changes for a user or shared drive.\" #>   ..$ response            : chr \"ChangeList\" #>   ..$ parameterOrder      : chr \"pageToken\" #>   ..$ supportsSubscription: logi TRUE drive_endpoint(\"drive.files.delete\") #> $id #> [1] \"drive.files.delete\" #>  #> $httpMethod #> [1] \"DELETE\" #>  #> $path #> drive/v3/files/{fileId} #>  #> $parameters #> $parameters$enforceSingleParent #> $parameters$enforceSingleParent$type #> [1] \"boolean\" #>  #> $parameters$enforceSingleParent$description #> [1] \"Deprecated. If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root.\" #>  #> $parameters$enforceSingleParent$default #> [1] \"false\" #>  #> $parameters$enforceSingleParent$location #> [1] \"query\" #>  #>  #> $parameters$fileId #> $parameters$fileId$type #> [1] \"string\" #>  #> $parameters$fileId$description #> [1] \"The ID of the file.\" #>  #> $parameters$fileId$required #> [1] TRUE #>  #> $parameters$fileId$location #> [1] \"path\" #>  #>  #> $parameters$supportsAllDrives #> $parameters$supportsAllDrives$type #> [1] \"boolean\" #>  #> $parameters$supportsAllDrives$description #> [1] \"Whether the requesting application supports both My Drives and shared drives.\" #>  #> $parameters$supportsAllDrives$default #> [1] \"false\" #>  #> $parameters$supportsAllDrives$location #> [1] \"query\" #>  #>  #> $parameters$supportsTeamDrives #> $parameters$supportsTeamDrives$type #> [1] \"boolean\" #>  #> $parameters$supportsTeamDrives$description #> [1] \"Deprecated use supportsAllDrives instead.\" #>  #> $parameters$supportsTeamDrives$default #> [1] \"false\" #>  #> $parameters$supportsTeamDrives$location #> [1] \"query\" #>  #>  #> $parameters$alt #> $parameters$alt$type #> [1] \"string\" #>  #> $parameters$alt$description #> [1] \"Data format for the response.\" #>  #> $parameters$alt$default #> [1] \"json\" #>  #> $parameters$alt$enum #> [1] \"json\" #>  #> $parameters$alt$enumDescriptions #> [1] \"Responses with Content-Type of application/json\" #>  #> $parameters$alt$location #> [1] \"query\" #>  #>  #> $parameters$fields #> $parameters$fields$type #> [1] \"string\" #>  #> $parameters$fields$description #> [1] \"Selector specifying which fields to include in a partial response.\" #>  #> $parameters$fields$location #> [1] \"query\" #>  #>  #> $parameters$key #> $parameters$key$type #> [1] \"string\" #>  #> $parameters$key$description #> [1] \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\" #>  #> $parameters$key$location #> [1] \"query\" #>  #>  #> $parameters$oauth_token #> $parameters$oauth_token$type #> [1] \"string\" #>  #> $parameters$oauth_token$description #> [1] \"OAuth 2.0 token for the current user.\" #>  #> $parameters$oauth_token$location #> [1] \"query\" #>  #>  #> $parameters$prettyPrint #> $parameters$prettyPrint$type #> [1] \"boolean\" #>  #> $parameters$prettyPrint$description #> [1] \"Returns response with indentations and line breaks.\" #>  #> $parameters$prettyPrint$default #> [1] \"true\" #>  #> $parameters$prettyPrint$location #> [1] \"query\" #>  #>  #> $parameters$quotaUser #> $parameters$quotaUser$type #> [1] \"string\" #>  #> $parameters$quotaUser$description #> [1] \"An opaque string that represents a user for quota purposes. Must not exceed 40 characters.\" #>  #> $parameters$quotaUser$location #> [1] \"query\" #>  #>  #> $parameters$userIp #> $parameters$userIp$type #> [1] \"string\" #>  #> $parameters$userIp$description #> [1] \"Deprecated. Please use quotaUser instead.\" #>  #> $parameters$userIp$location #> [1] \"query\" #>  #>  #>  #> $scopes #> [1] \"drive, drive.appdata, drive.file\" #>  #> $description #> [1] \"Permanently deletes a file owned by the user without moving it to the trash. If the file belongs to a shared drive the user must be an organizer on the parent. If the target is a folder, all descendants owned by the user are also deleted.\" #>  #> $parameterOrder #> [1] \"fileId\" #>  drive_endpoint(4) #> $id #> [1] \"drive.changes.watch\" #>  #> $httpMethod #> [1] \"POST\" #>  #> $path #> drive/v3/changes/watch #>  #> $parameters #> $parameters$driveId #> $parameters$driveId$type #> [1] \"string\" #>  #> $parameters$driveId$description #> [1] \"The shared drive from which changes are returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.\" #>  #> $parameters$driveId$location #> [1] \"query\" #>  #>  #> $parameters$includeCorpusRemovals #> $parameters$includeCorpusRemovals$type #> [1] \"boolean\" #>  #> $parameters$includeCorpusRemovals$description #> [1] \"Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.\" #>  #> $parameters$includeCorpusRemovals$default #> [1] \"false\" #>  #> $parameters$includeCorpusRemovals$location #> [1] \"query\" #>  #>  #> $parameters$includeItemsFromAllDrives #> $parameters$includeItemsFromAllDrives$type #> [1] \"boolean\" #>  #> $parameters$includeItemsFromAllDrives$description #> [1] \"Whether both My Drive and shared drive items should be included in results.\" #>  #> $parameters$includeItemsFromAllDrives$default #> [1] \"false\" #>  #> $parameters$includeItemsFromAllDrives$location #> [1] \"query\" #>  #>  #> $parameters$includePermissionsForView #> $parameters$includePermissionsForView$type #> [1] \"string\" #>  #> $parameters$includePermissionsForView$description #> [1] \"Specifies which additional view's permissions to include in the response. Only 'published' is supported.\" #>  #> $parameters$includePermissionsForView$location #> [1] \"query\" #>  #>  #> $parameters$includeRemoved #> $parameters$includeRemoved$type #> [1] \"boolean\" #>  #> $parameters$includeRemoved$description #> [1] \"Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.\" #>  #> $parameters$includeRemoved$default #> [1] \"true\" #>  #> $parameters$includeRemoved$location #> [1] \"query\" #>  #>  #> $parameters$includeTeamDriveItems #> $parameters$includeTeamDriveItems$type #> [1] \"boolean\" #>  #> $parameters$includeTeamDriveItems$description #> [1] \"Deprecated use includeItemsFromAllDrives instead.\" #>  #> $parameters$includeTeamDriveItems$default #> [1] \"false\" #>  #> $parameters$includeTeamDriveItems$location #> [1] \"query\" #>  #>  #> $parameters$pageSize #> $parameters$pageSize$type #> [1] \"integer\" #>  #> $parameters$pageSize$description #> [1] \"The maximum number of changes to return per page.\" #>  #> $parameters$pageSize$default #> [1] \"100\" #>  #> $parameters$pageSize$format #> [1] \"int32\" #>  #> $parameters$pageSize$minimum #> [1] \"1\" #>  #> $parameters$pageSize$maximum #> [1] \"1000\" #>  #> $parameters$pageSize$location #> [1] \"query\" #>  #>  #> $parameters$pageToken #> $parameters$pageToken$type #> [1] \"string\" #>  #> $parameters$pageToken$description #> [1] \"The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.\" #>  #> $parameters$pageToken$required #> [1] TRUE #>  #> $parameters$pageToken$location #> [1] \"query\" #>  #>  #> $parameters$restrictToMyDrive #> $parameters$restrictToMyDrive$type #> [1] \"boolean\" #>  #> $parameters$restrictToMyDrive$description #> [1] \"Whether to restrict the results to changes inside the My Drive hierarchy. This omits changes to files such as those in the Application Data folder or shared files which have not been added to My Drive.\" #>  #> $parameters$restrictToMyDrive$default #> [1] \"false\" #>  #> $parameters$restrictToMyDrive$location #> [1] \"query\" #>  #>  #> $parameters$spaces #> $parameters$spaces$type #> [1] \"string\" #>  #> $parameters$spaces$description #> [1] \"A comma-separated list of spaces to query within the user corpus. Supported values are 'drive', 'appDataFolder' and 'photos'.\" #>  #> $parameters$spaces$default #> [1] \"drive\" #>  #> $parameters$spaces$location #> [1] \"query\" #>  #>  #> $parameters$supportsAllDrives #> $parameters$supportsAllDrives$type #> [1] \"boolean\" #>  #> $parameters$supportsAllDrives$description #> [1] \"Whether the requesting application supports both My Drives and shared drives.\" #>  #> $parameters$supportsAllDrives$default #> [1] \"false\" #>  #> $parameters$supportsAllDrives$location #> [1] \"query\" #>  #>  #> $parameters$supportsTeamDrives #> $parameters$supportsTeamDrives$type #> [1] \"boolean\" #>  #> $parameters$supportsTeamDrives$description #> [1] \"Deprecated use supportsAllDrives instead.\" #>  #> $parameters$supportsTeamDrives$default #> [1] \"false\" #>  #> $parameters$supportsTeamDrives$location #> [1] \"query\" #>  #>  #> $parameters$teamDriveId #> $parameters$teamDriveId$type #> [1] \"string\" #>  #> $parameters$teamDriveId$description #> [1] \"Deprecated use driveId instead.\" #>  #> $parameters$teamDriveId$location #> [1] \"query\" #>  #>  #> $parameters$address #> $parameters$address$type #> [1] \"string\" #>  #> $parameters$address$description #> [1] \"The address where notifications are delivered for this channel.\" #>  #> $parameters$address$location #> [1] \"body\" #>  #>  #> $parameters$expiration #> $parameters$expiration$type #> [1] \"string\" #>  #> $parameters$expiration$description #> [1] \"Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.\" #>  #> $parameters$expiration$format #> [1] \"int64\" #>  #> $parameters$expiration$location #> [1] \"body\" #>  #>  #> $parameters$id #> $parameters$id$type #> [1] \"string\" #>  #> $parameters$id$description #> [1] \"A UUID or similar unique string that identifies this channel.\" #>  #> $parameters$id$location #> [1] \"body\" #>  #>  #> $parameters$kind #> $parameters$kind$type #> [1] \"string\" #>  #> $parameters$kind$description #> [1] \"Identifies this as a notification channel used to watch for changes to a resource, which is \\\"api#channel\\\".\" #>  #> $parameters$kind$default #> [1] \"api#channel\" #>  #> $parameters$kind$location #> [1] \"body\" #>  #>  #> $parameters$params #> $parameters$params$type #> [1] \"object\" #>  #> $parameters$params$description #> [1] \"Additional parameters controlling delivery channel behavior. Optional.\" #>  #> $parameters$params$additionalProperties #> $parameters$params$additionalProperties$type #> [1] \"string\" #>  #> $parameters$params$additionalProperties$description #> [1] \"Declares a new parameter by name.\" #>  #>  #> $parameters$params$location #> [1] \"body\" #>  #>  #> $parameters$payload #> $parameters$payload$type #> [1] \"boolean\" #>  #> $parameters$payload$description #> [1] \"A Boolean value to indicate whether payload is wanted. Optional.\" #>  #> $parameters$payload$location #> [1] \"body\" #>  #>  #> $parameters$resourceId #> $parameters$resourceId$type #> [1] \"string\" #>  #> $parameters$resourceId$description #> [1] \"An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.\" #>  #> $parameters$resourceId$location #> [1] \"body\" #>  #>  #> $parameters$resourceUri #> $parameters$resourceUri$type #> [1] \"string\" #>  #> $parameters$resourceUri$description #> [1] \"A version-specific identifier for the watched resource.\" #>  #> $parameters$resourceUri$location #> [1] \"body\" #>  #>  #> $parameters$token #> $parameters$token$type #> [1] \"string\" #>  #> $parameters$token$description #> [1] \"An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.\" #>  #> $parameters$token$location #> [1] \"body\" #>  #>  #> $parameters$type #> $parameters$type$type #> [1] \"string\" #>  #> $parameters$type$description #> [1] \"The type of delivery mechanism used for this channel. Valid values are \\\"web_hook\\\" (or \\\"webhook\\\"). Both values refer to a channel where Http requests are used to deliver messages.\" #>  #> $parameters$type$location #> [1] \"body\" #>  #>  #> $parameters$alt #> $parameters$alt$type #> [1] \"string\" #>  #> $parameters$alt$description #> [1] \"Data format for the response.\" #>  #> $parameters$alt$default #> [1] \"json\" #>  #> $parameters$alt$enum #> [1] \"json\" #>  #> $parameters$alt$enumDescriptions #> [1] \"Responses with Content-Type of application/json\" #>  #> $parameters$alt$location #> [1] \"query\" #>  #>  #> $parameters$fields #> $parameters$fields$type #> [1] \"string\" #>  #> $parameters$fields$description #> [1] \"Selector specifying which fields to include in a partial response.\" #>  #> $parameters$fields$location #> [1] \"query\" #>  #>  #> $parameters$key #> $parameters$key$type #> [1] \"string\" #>  #> $parameters$key$description #> [1] \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\" #>  #> $parameters$key$location #> [1] \"query\" #>  #>  #> $parameters$oauth_token #> $parameters$oauth_token$type #> [1] \"string\" #>  #> $parameters$oauth_token$description #> [1] \"OAuth 2.0 token for the current user.\" #>  #> $parameters$oauth_token$location #> [1] \"query\" #>  #>  #> $parameters$prettyPrint #> $parameters$prettyPrint$type #> [1] \"boolean\" #>  #> $parameters$prettyPrint$description #> [1] \"Returns response with indentations and line breaks.\" #>  #> $parameters$prettyPrint$default #> [1] \"true\" #>  #> $parameters$prettyPrint$location #> [1] \"query\" #>  #>  #> $parameters$quotaUser #> $parameters$quotaUser$type #> [1] \"string\" #>  #> $parameters$quotaUser$description #> [1] \"An opaque string that represents a user for quota purposes. Must not exceed 40 characters.\" #>  #> $parameters$quotaUser$location #> [1] \"query\" #>  #>  #> $parameters$userIp #> $parameters$userIp$type #> [1] \"string\" #>  #> $parameters$userIp$description #> [1] \"Deprecated. Please use quotaUser instead.\" #>  #> $parameters$userIp$location #> [1] \"query\" #>  #>  #>  #> $scopes #> [1] \"drive, drive.appdata, drive.file, drive.metadata, drive.metadata.readonly, drive.photos.readonly, drive.readonly\" #>  #> $description #> [1] \"Subscribes to changes for a user.\" #>  #> $request #> [1] \"Channel\" #>  #> $response #> [1] \"Channel\" #>  #> $parameterOrder #> [1] \"pageToken\" #>  #> $supportsSubscription #> [1] TRUE #>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Example files — drive_examples","title":"Example files — drive_examples","text":"googledrive makes variety example files – local remote – available use examples reprexes. functions help access example files. See vignette(\"example-files\", package = \"googledrive\") .","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example files — drive_examples","text":"","code":"drive_examples_local(matches)  drive_examples_remote(matches)  drive_example_local(matches)  drive_example_remote(matches)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Example files — drive_examples","text":"matches regular expression matches name desired example file(s). argument optional plural forms (drive_examples_local() drive_examples_remote()) , provided, multiple matches allowed. single forms (drive_example_local() drive_example_remote()) require argument require exactly one match.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_examples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Example files — drive_examples","text":"drive_example_local() drive_examples_local(), one local filepaths. drive_example_remote() drive_examples_remote(), dribble.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_examples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example files — drive_examples","text":"","code":"drive_examples_local() %>% basename() #> [1] \"chicken.csv\"     \"chicken.jpg\"     \"chicken.pdf\"     #> [4] \"chicken.txt\"     \"imdb_latin1.csv\" \"r_about.html\"    #> [7] \"r_logo.jpg\"      drive_examples_local(\"chicken\") %>% basename() #> [1] \"chicken.csv\" \"chicken.jpg\" \"chicken.pdf\" \"chicken.txt\" drive_example_local(\"imdb\") #> [1] \"/home/runner/work/_temp/Library/googledrive/extdata/example_files/imdb_latin1.csv\"  drive_examples_remote() #> # A dribble: 9 × 3 #>   name            id       drive_resource    #>   <chr>           <drv_id> <list>            #> 1 chicken_doc     1X9pd4n… <named list [30]> #> 2 chicken_sheet   1SeFXkr… <named list [30]> #> 3 chicken.csv     1VOh6wW… <named list [37]> #> 4 chicken.jpg     1b2_Zjz… <named list [39]> #> 5 chicken.pdf     13OQcAo… <named list [38]> #> 6 chicken.txt     1wOLeWV… <named list [38]> #> 7 imdb_latin1.csv 1YJSVa0… <named list [37]> #> 8 r_about.html    1sfCT0z… <named list [38]> #> 9 r_logo.jpg      1J4v-iy… <named list [39]> drive_examples_remote(\"chicken\") #> # A dribble: 6 × 3 #>   name          id       drive_resource    #>   <chr>         <drv_id> <list>            #> 1 chicken_doc   1X9pd4n… <named list [30]> #> 2 chicken_sheet 1SeFXkr… <named list [30]> #> 3 chicken.csv   1VOh6wW… <named list [37]> #> 4 chicken.jpg   1b2_Zjz… <named list [39]> #> 5 chicken.pdf   13OQcAo… <named list [38]> #> 6 chicken.txt   1wOLeWV… <named list [38]> drive_example_remote(\"chicken_doc\") #> # A dribble: 1 × 3 #>   name        id                                           drive_resource #>   <chr>       <drv_id>                                     <list>         #> 1 chicken_doc 1X9pd4nOjl33zDFfTjw-_eFL7Qb9_g6VfVFDp1PPae94 <named list>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_extension.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup extension from MIME type — drive_extension","title":"Lookup extension from MIME type — drive_extension","text":"helper determinine extension used file. Two types input acceptable: MIME types accepted Google Drive. File extensions, \"pdf\", \"csv\", etc. (simply passed ).","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_extension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup extension from MIME type — drive_extension","text":"","code":"drive_extension(type = NULL)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_extension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup extension from MIME type — drive_extension","text":"type Character. MIME type file extension.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_extension.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup extension from MIME type — drive_extension","text":"Character. File extension.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_extension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup extension from MIME type — drive_extension","text":"","code":"## get the extension for mime type image/jpeg drive_extension(\"image/jpeg\") #> [1] \"jpeg\"  ## it's vectorized drive_extension(c(\"text/plain\", \"pdf\", \"image/gif\")) #> [1] \"txt\" \"pdf\" \"gif\""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_fields.html","id":null,"dir":"Reference","previous_headings":"","what":"Request partial resources — drive_fields","title":"Request partial resources — drive_fields","text":"may able improve performance API calls requesting metadata actually need. function primarily internal use currently focused Files resource. Note high-level googledrive functions assume name, id, kind fields included, bare minimum. Assuming resource = \"files\" (default), input provided via fields checked validity known field names validated fields returned. see tibble containing possible fields short description , call drive_fields(expose()). prep_fields() prepares fields inclusion query parameters.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_fields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request partial resources — drive_fields","text":"","code":"drive_fields(fields = NULL, resource = \"files\")  prep_fields(fields, resource = \"files\")"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_fields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request partial resources — drive_fields","text":"fields Character vector field names. resource = \"files\", checked validity. Otherwise, passed . resource Character, naming API resource interest. Currently, Files resource anticipated.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_fields.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request partial resources — drive_fields","text":"drive_fields(): Character vector field names. prep_fields(): string.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_fields.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Request partial resources — drive_fields","text":"","code":"# get a tibble of all fields for the Files resource + indicator of defaults drive_fields(expose()) #> # A tibble: 55 × 2 #>    name                         desc                                       #>    <chr>                        <chr>                                      #>  1 appProperties                \"A collection of arbitrary key-value pair… #>  2 capabilities                 \"Capabilities the current user has on thi… #>  3 contentHints                 \"Additional information about the content… #>  4 copyRequiresWriterPermission \"Whether the options to copy, print, or d… #>  5 createdTime                  \"The time at which the file was created (… #>  6 description                  \"A short description of the file.\"         #>  7 driveId                      \"ID of the shared drive the file resides … #>  8 explicitlyTrashed            \"Whether the file has been explicitly tra… #>  9 exportLinks                  \"Links for exporting Google Docs to speci… #> 10 fileExtension                \"The final component of fullFileExtension… #> # ℹ 45 more rows  # invalid fields are removed and throw warning drive_fields(c(\"name\", \"parents\", \"ownedByMe\", \"pancakes!\")) #> Warning: Omitting fields that are not recognized as part of the Files resource: #> • pancakes! #> [1] \"name\"      \"parents\"   \"ownedByMe\"  # prepare fields for query prep_fields(c(\"name\", \"parents\", \"kind\")) #> [1] \"files/name,files/parents,files/kind\""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find files on Google Drive — drive_find","title":"Find files on Google Drive — drive_find","text":"closest googledrive function can https://drive.google.com: default, just get listing files. can also search various ways, e.g., filter file type ownership work shared drives. powerful function. Together specific drive_get(), main way identify files target downstream work. know want search within specific folder shared drive, use drive_ls().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find files on Google Drive — drive_find","text":"","code":"drive_find(   pattern = NULL,   trashed = FALSE,   type = NULL,   n_max = Inf,   shared_drive = NULL,   corpus = NULL,   ...,   verbose = deprecated(),   team_drive = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find files on Google Drive — drive_find","text":"pattern Character. provided, items whose names match regular expression returned. implemented locally results returned API. trashed Logical. Whether search files trash (trashed = FALSE, default), files trash (trashed = TRUE), search regardless trashed status (trashed = NA). type Character. provided, files type returned. Can anything drive_mime_type() knows handle. processed googledrive sent query parameter. n_max Integer. upper bound number items return. applies results requested API, may filtered locally, via pattern argument. shared_drive Anything identifies one specific shared drive: name, id URL marked as_id(), dribble. value provided shared_drive pre-processed as_shared_drive(). Read shared drives. corpus Character, specifying collections items search. Relevant work shared drives /Google Workspace domains. specified, must one \"user\", \"drive\" (requires shared_drive also specified), \"allDrives\", \"domain\". Read shared drives. ... parameters pass along request. likely candidate q. See API's Search files folders guide. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet(). team_drive Google Drive Drive API replaced Team Drives shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find files on Google Drive — drive_find","text":"object class dribble, tibble one row per file.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"file-type","dir":"Reference","previous_headings":"","what":"File type","title":"Find files on Google Drive — drive_find","text":"type argument pre-processed drive_mime_type(), can use shortcuts file extensions, addition full-blown MIME types. googledrive forms search clause pass q.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"search-parameters","dir":"Reference","previous_headings":"","what":"Search parameters","title":"Find files on Google Drive — drive_find","text":"advanced search file properties providing search clauses q parameter passed API via .... Multiple q clauses vector-valued q combined via ''.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"trash","dir":"Reference","previous_headings":"","what":"Trash","title":"Find files on Google Drive — drive_find","text":"default, drive_find() sets trashed = FALSE include files trash. Literally, adds q = \"trashed = false\" query. search trash, set trashed = TRUE. see files regardless trash status, set trashed = NA, adds q = \"(trashed = true trashed = false)\" query.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"sort-order","dir":"Reference","previous_headings":"","what":"Sort order","title":"Find files on Google Drive — drive_find","text":"default, drive_find() sends orderBy = \"recency desc\", top files result high \"recency\" (whatever means). suppress sending orderBy , drive_find(orderBy = NULL). orderBy parameter accepts sort keys addition recency, documented files.list endpoint. googledrive translates snake_case specification order_by lowerCamel form, orderBy.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"shared-drives-and-domains","dir":"Reference","previous_headings":"","what":"Shared drives and domains","title":"Find files on Google Drive — drive_find","text":"work shared drives /Google Workspace, can apply search query collections items beyond associated \"Drive\". Use shared_drive corpus arguments control . Read shared drives.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_find.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find files on Google Drive — drive_find","text":"","code":"if (FALSE) { # \\dontrun{ # list \"My Drive\" w/o regard for folder hierarchy drive_find()  # filter for folders, the easy way and the hard way drive_find(type = \"folder\") drive_find(q = \"mimeType = 'application/vnd.google-apps.folder'\")  # filter for Google Sheets, the easy way and the hard way drive_find(type = \"spreadsheet\") drive_find(q = \"mimeType='application/vnd.google-apps.spreadsheet'\")  # files whose names match a regex # the local, general, sometimes-slow-to-execute version drive_find(pattern = \"ick\") # the server-side, executes-faster version # NOTE: works only for a pattern at the beginning of file name drive_find(q = \"name contains 'chick'\")  # search for files located directly in your root folder drive_find(q = \"'root' in parents\") # FYI: this is equivalent to drive_ls(\"~/\")  # control page size or cap the number of files returned drive_find(pageSize = 50) # all params passed through `...` can be camelCase or snake_case drive_find(page_size = 50) drive_find(n_max = 58) drive_find(page_size = 5, n_max = 15)  # various ways to specify q search clauses # multiple q's drive_find(   q = \"name contains 'TEST'\",   q = \"modifiedTime > '2020-07-21T12:00:00'\" ) # vector q drive_find(q = c(\"starred = true\", \"visibility = 'anyoneWithLink'\"))  # default `trashed = FALSE` excludes files in the trash # `trashed = TRUE` consults ONLY file in the trash drive_find(trashed = TRUE) # `trashed = NA` disregards trash status completely drive_find(trashed = NA)  # suppress the default sorting on recency drive_find(order_by = NULL, n_max = 5)  # sort on various keys drive_find(order_by = \"modifiedByMeTime\", n_max = 5) # request descending order drive_find(order_by = \"quotaBytesUsed desc\", n_max = 5) } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Drive files by path or id — drive_get","title":"Get Drive files by path or id — drive_get","text":"Retrieves metadata files specified via path via file id. function quite straightforward specify files id. important considerations specify target files path. See . target files specified via path, returned dribble include path column.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Drive files by path or id — drive_get","text":"","code":"drive_get(   path = NULL,   id = NULL,   shared_drive = NULL,   corpus = NULL,   verbose = deprecated(),   team_drive = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Drive files by path or id — drive_get","text":"path Character vector path(s) get. Use trailing slash indicate explicitly path folder, can disambiguate file name (yes possible Drive!). path appears contain Drive URLs explicitly marked as_id(), treated provided via id argument. id Character vector Drive file ids URLs (first processed as_id()). path id non-NULL, id silently ignored. shared_drive Anything identifies one specific shared drive: name, id URL marked as_id(), dribble. value provided shared_drive pre-processed as_shared_drive(). Read shared drives. corpus Character, specifying collections items search. Relevant work shared drives /Google Workspace domains. specified, must one \"user\", \"drive\" (requires shared_drive also specified), \"allDrives\", \"domain\". Read shared drives. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet(). team_drive Google Drive Drive API replaced Team Drives shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Drive files by path or id — drive_get","text":"object class dribble, tibble one row per file. target files specified via path, path column.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_get.html","id":"getting-by-path","dir":"Reference","previous_headings":"","what":"Getting by path","title":"Get Drive files by path or id — drive_get","text":"Google Drive behave like local file system! File folder names need unique, even given level hierarchy. means single path can describe multiple files (0 exactly 1). single file can also compatible multiple paths, .e. one path specific . file located ~/alfa/bravo can found bravo, alfa/bravo, ~/alfa/bravo. 3 included input path, represented single row output. best think drive_get() setwise operation using file paths. assume -th input path corresponds row output (although often !). 1--1 relationship input output, announced message. drive_get() performs just enough path resolution uniquely identify file compatible input path, paths . absolutely want full canonical path, run output drive_get() drive_reveal(d, \"path\")`.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_get.html","id":"files-that-you-don-t-own","dir":"Reference","previous_headings":"","what":"Files that you don't own","title":"Get Drive files by path or id — drive_get","text":"want get file via path necessarily Drive, may need specify shared_drive corpus arguments search collections items. Read shared drives.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Drive files by path or id — drive_get","text":"","code":"# get info about your \"My Drive\" root folder drive_get(\"~/\") #> ✔ The input `path` resolved to exactly 1 file. #> # A dribble: 1 × 4 #>   name     path  id                  drive_resource    #>   <chr>    <chr> <drv_id>            <list>            #> 1 My Drive ~/    0AO_RMaBzcP63Uk9PVA <named list [31]> # the API reserves the file id \"root\" for your root folder drive_get(id = \"root\") #> # A dribble: 1 × 3 #>   name     id                  drive_resource    #>   <chr>    <drv_id>            <list>            #> 1 My Drive 0AO_RMaBzcP63Uk9PVA <named list [31]> drive_get(id = \"root\") %>% drive_reveal(\"path\") #> # A dribble: 1 × 4 #>   name     path  id                  drive_resource    #>   <chr>    <chr> <drv_id>            <list>            #> 1 My Drive ~/    0AO_RMaBzcP63Uk9PVA <named list [31]>  # set up some files to get by path alfalfa <- drive_mkdir(\"alfalfa\") #> Created Drive file: #> • alfalfa <id: 1FaaurG4gD_68wQSDcaV-sd09sG1bUAuU> #> With MIME type: #> • application/vnd.google-apps.folder broccoli <- drive_upload(   drive_example_local(\"chicken.txt\"),   name = \"broccoli\", path = alfalfa ) #> Local file: #> • /home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.txt #> Uploaded into Drive file: #> • broccoli <id: 1DbuUgbrO6DAuXVCvd1XLH2am7fFgW27P> #> With MIME type: #> • text/plain drive_get(\"broccoli\") #> ! Problem with 1 path: path is compatible with more than 1 file #>   broccoli #> ! No path resolved to exactly 1 file. #> # A dribble: 2 × 4 #>   name     path     id                                drive_resource    #>   <chr>    <chr>    <drv_id>                          <list>            #> 1 broccoli broccoli 1DbuUgbrO6DAuXVCvd1XLH2am7fFgW27P <named list [41]> #> 2 broccoli broccoli 1aNh9_YiunRSwgmopO5hZJgusiZQh1Ii7 <named list [42]> drive_get(\"alfalfa/broccoli\") #> ✔ The input `path` resolved to exactly 1 file. #> # A dribble: 1 × 4 #>   name     path               id       drive_resource    #>   <chr>    <chr>              <drv_id> <list>            #> 1 broccoli ~/alfalfa/broccoli 1DbuUgb… <named list [41]> drive_get(\"~/alfalfa/broccoli\") #> ✔ The input `path` resolved to exactly 1 file. #> # A dribble: 1 × 4 #>   name     path               id       drive_resource    #>   <chr>    <chr>              <drv_id> <list>            #> 1 broccoli ~/alfalfa/broccoli 1DbuUgb… <named list [41]> drive_get(c(\"broccoli\", \"alfalfa/\", \"~/alfalfa/broccoli\")) #> ! Problem with 1 path: path is compatible with more than 1 file #>   broccoli #> ! 1 file in the output is associated with more than 1 input `path` #>   broccoli <id: 1DbuUgbrO6DAuXVCvd1XLH2am7fFgW27P> #> ! 2 out of 3 input paths resolved to exactly 1 file. #> # A dribble: 3 × 4 #>   name     path               id       drive_resource    #>   <chr>    <chr>              <drv_id> <list>            #> 1 broccoli ~/alfalfa/broccoli 1DbuUgb… <named list [42]> #> 2 broccoli ~/broccoli         1aNh9_Y… <named list [42]> #> 3 alfalfa  ~/alfalfa/         1FaaurG… <named list [33]>  # Clean up drive_rm(alfalfa) #> File deleted: #> • alfalfa <id: 1FaaurG4gD_68wQSDcaV-sd09sG1bUAuU>  if (FALSE) { # \\dontrun{ # The examples below are indicative of correct syntax. # But note these will generally result in an error or a # 0-row dribble, unless you replace the inputs with paths # or file ids that exist in your Drive.  # multiple names drive_get(c(\"abc\", \"def\"))  # multiple names, one of which must be a folder drive_get(c(\"abc\", \"def/\"))  # query by file id(s) drive_get(id = \"abcdefgeh123456789\") drive_get(as_id(\"abcdefgeh123456789\")) drive_get(id = c(\"abcdefgh123456789\", \"jklmnopq123456789\"))  # apply to a browser URL for, e.g., a Google Sheet my_url <- \"https://docs.google.com/spreadsheets/d/FILE_ID/edit#gid=SHEET_ID\" drive_get(my_url) drive_get(as_id(my_url)) drive_get(id = my_url)  # access the shared drive named \"foo\" # shared_drive params must be specified if getting by path foo <- shared_drive_get(\"foo\") drive_get(c(\"this.jpg\", \"that-file\"), shared_drive = foo) # shared_drive params are not necessary if getting by id drive_get(as_id(\"123456789\"))  # search all shared drives and other files user has accessed drive_get(c(\"this.jpg\", \"that-file\"), corpus = \"allDrives\") } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_has_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Is there a token on hand? — drive_has_token","title":"Is there a token on hand? — drive_has_token","text":"Reports whether googledrive stored token, ready use downstream requests.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_has_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is there a token on hand? — drive_has_token","text":"","code":"drive_has_token()"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_has_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is there a token on hand? — drive_has_token","text":"Logical.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_has_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is there a token on hand? — drive_has_token","text":"","code":"drive_has_token() #> [1] TRUE"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_id.html","id":null,"dir":"Reference","previous_headings":"","what":"drive_id class — drive_id","title":"drive_id class — drive_id","text":"drive_id S3 class mark strings Drive file ids, order distinguish Drive file names paths. as_id() converts various inputs instance drive_id. as_id() generic function.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"drive_id class — drive_id","text":"","code":"as_id(x, ...)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"drive_id class — drive_id","text":"x character vector file shared drive ids URLs, dribble, suitable data frame. ... arguments passed methods. (used.)","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"drive_id class — drive_id","text":"character vector bearing S3 class drive_id.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"drive_id class — drive_id","text":"","code":"as_id(\"123abc\") #> <drive_id[1]> #> [1] 123abc as_id(\"https://docs.google.com/spreadsheets/d/qawsedrf16273849/edit#gid=12345\") #> <drive_id[1]> #> [1] qawsedrf16273849  x <- drive_find(n_max = 3) as_id(x) #> <drive_id[3]> #> [1] 1fYW8GkaQ5pzxAaQZqg5YhVgUp7DZ9Zy6 1kwbIWnW2fM3N0QL6GAKEzFzUNg0s7keJ #> [3] 1RvUjOVaTDTEf8k0q2QV5RnjvLqn44Xa5"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Drive file links — drive_link","title":"Retrieve Drive file links — drive_link","text":"Returns \"webViewLink\" one files, \"link opening file relevant Google editor viewer browser\".","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Drive file links — drive_link","text":"","code":"drive_link(file)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve Drive file links — drive_link","text":"file Something identifies file(s) interest Google Drive. Can character vector names/paths, character vector file ids URLs marked as_id(), dribble.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Drive file links — drive_link","text":"Character vector file hyperlinks.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve Drive file links — drive_link","text":"","code":"# get a few files into a dribble three_files <- drive_find(n_max = 3)  # get their browser links drive_link(three_files) #> [1] \"https://drive.google.com/file/d/1fYW8GkaQ5pzxAaQZqg5YhVgUp7DZ9Zy6/view?usp=drivesdk\" #> [2] \"https://drive.google.com/file/d/1kwbIWnW2fM3N0QL6GAKEzFzUNg0s7keJ/view?usp=drivesdk\" #> [3] \"https://drive.google.com/file/d/1RvUjOVaTDTEf8k0q2QV5RnjvLqn44Xa5/view?usp=drivesdk\""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List contents of a folder or shared drive — drive_ls","title":"List contents of a folder or shared drive — drive_ls","text":"List contents folder shared drive, recursively . thin wrapper around drive_find(), simply adds one constraint: search limited direct indirect children path.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List contents of a folder or shared drive — drive_ls","text":"","code":"drive_ls(path = NULL, ..., recursive = FALSE)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List contents of a folder or shared drive — drive_ls","text":"path Specifies single folder Google Drive whose contents want list. Can actual path (character), file id URL marked as_id(), dribble. shared drive folder shared drive, must passed dribble. path shortcut folder, automatically resolved target folder. ... parameters valid drive_find(). recursive Logical, indicating want direct children path (recursive = FALSE, default) children, including indirect (recursive = TRUE).","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List contents of a folder or shared drive — drive_ls","text":"object class dribble, tibble one row per file.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_ls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List contents of a folder or shared drive — drive_ls","text":"","code":"if (FALSE) { # \\dontrun{ # get contents of the folder 'abc' (non-recursive) drive_ls(\"abc\")  # get contents of folder 'abc' whose names contain the letters 'def' drive_ls(path = \"abc\", pattern = \"def\")  # get all Google spreadsheets in folder 'abc' # whose names contain the letters 'def' drive_ls(path = \"abc\", pattern = \"def\", type = \"spreadsheet\")  # get all the files below 'abc', recursively, that are starred drive_ls(path = \"abc\", q = \"starred = true\", recursive = TRUE) } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mime_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup MIME type — drive_mime_type","title":"Lookup MIME type — drive_mime_type","text":"helper determine MIME type used file. Three types input acceptable: Native Google Drive file types. Important examples: \"document\" Google Docs \"folder\" folders \"presentation\" Google Slides \"spreadsheet\" Google Sheets File extensions, \"pdf\", \"csv\", etc. MIME types accepted Google Drive (simply passed ).","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mime_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup MIME type — drive_mime_type","text":"","code":"drive_mime_type(type = NULL)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mime_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup MIME type — drive_mime_type","text":"type Character. Google Drive file type, file extension, MIME type. Pass sentinel expose() want get full table used validation lookup, .e. MIME types known relevant Drive API.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mime_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup MIME type — drive_mime_type","text":"Character. MIME type.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mime_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup MIME type — drive_mime_type","text":"","code":"## get the mime type for Google Spreadsheets drive_mime_type(\"spreadsheet\") #> [1] \"application/vnd.google-apps.spreadsheet\"  ## get the mime type for jpegs drive_mime_type(\"jpeg\") #> [1] \"image/jpeg\"  ## it's vectorized drive_mime_type(c(\"presentation\", \"pdf\", \"image/gif\")) #> [1] \"application/vnd.google-apps.presentation\" #> [2] \"application/pdf\"                          #> [3] \"image/gif\"                                 ## see the internal tibble of MIME types known to the Drive API drive_mime_type(expose()) #> # A tibble: 78 × 5 #>    mime_type                          ext   description human_type default #>    <chr>                              <chr> <chr>       <chr>      <lgl>   #>  1 application/epub+zip               NA    NA          NA         NA      #>  2 application/msword                 doc   NA          doc        TRUE    #>  3 application/msword                 dot   NA          dot        FALSE   #>  4 application/pdf                    pdf   NA          pdf        TRUE    #>  5 application/rtf                    rtf   NA          rtf        TRUE    #>  6 application/vnd.google-apps.audio  NA    NA          audio      NA      #>  7 application/vnd.google-apps.docum… NA    Google Docs document   NA      #>  8 application/vnd.google-apps.drawi… NA    Google Dra… drawing    NA      #>  9 application/vnd.google-apps.drive… NA    3rd party … drive-sdk  NA      #> 10 application/vnd.google-apps.file   NA    Google Dri… file       NA      #> # ℹ 68 more rows"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mkdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Drive folder — drive_mkdir","title":"Create a Drive folder — drive_mkdir","text":"Creates new Drive folder. update metadata existing Drive file, including folder, use drive_update().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mkdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Drive folder — drive_mkdir","text":"","code":"drive_mkdir(name, path = NULL, ..., overwrite = NA, verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mkdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Drive folder — drive_mkdir","text":"name Name new folder , optionally, path specifies existing parent folder, well new name. path Target destination new folder, .e. folder shared drive. Can given actual path (character), file id URL marked as_id(), dribble. Defaults \"Drive\" root folder. path shortcut folder, automatically resolved target folder. ... Named parameters pass along Drive API. dynamic dots semantics. can affect metadata target file specifying properties Files resource via .... Read \"Request body\" section Drive API docs associated endpoint learn relevant parameters. overwrite Logical, indicating whether check pre-existing file targetted \"filepath\". quotes around \"filepath\" refer fact Drive impose 1--1 relationship filepaths files, like typical file system; read drive_get(). NA (default): Just operation, even results multiple files filepath. TRUE: Check pre-existing file filepath. zero one, move pre-existing file trash, carry . Note new file inherit properties old one, sharing publishing settings. new file ID. error thrown two pre-existing files found. FALSE: Error pre-existing file filepath. Note existence checks, based filepath, expensive operations, .e. require additional API calls. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mkdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Drive folder — drive_mkdir","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mkdir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Drive folder — drive_mkdir","text":"","code":"# Create folder named 'ghi', then another below named it 'jkl' and star it ghi <- drive_mkdir(\"ghi\") #> Created Drive file: #> • ghi <id: 13d6Ro6HlWH1y4zWpDUksTCWFmuvk3oC1> #> With MIME type: #> • application/vnd.google-apps.folder jkl <- drive_mkdir(\"ghi/jkl\", starred = TRUE) #> Created Drive file: #> • jkl <id: 1oNV-v9Vq4GC_yDLCVd-heNX1PC4qXUDs> #> With MIME type: #> • application/vnd.google-apps.folder  # is 'jkl' really starred? YES purrr::pluck(jkl, \"drive_resource\", 1, \"starred\") #> [1] TRUE  # Another way to create folder 'mno' in folder 'ghi' drive_mkdir(\"mno\", path = \"ghi\") #> Created Drive file: #> • mno <id: 1Qgg177mm4UkTtBCTgOlJEm29Id2ZpQin> #> With MIME type: #> • application/vnd.google-apps.folder  # Yet another way to create a folder named 'pqr' in folder 'ghi', # this time with parent folder stored in a dribble, # and setting the new folder's description pqr <- drive_mkdir(\"pqr\", path = ghi, description = \"I am a folder\") #> Created Drive file: #> • pqr <id: 12qBJluUMWAOE-9eWVgnHN_WjUjEdlx9e> #> With MIME type: #> • application/vnd.google-apps.folder  # Did we really set the description? YES purrr::pluck(pqr, \"drive_resource\", 1, \"description\") #> [1] \"I am a folder\"  # `overwrite = FALSE` errors if something already exists at target filepath # THIS WILL ERROR! drive_create(\"name-squatter-mkdir\", path = ghi) #> Created Drive file: #> • name-squatter-mkdir <id: 1EI07WHwQWBO1kJRQhjXGD9MYzJAt2d-Y> #> With MIME type: #> • application/octet-stream drive_mkdir(\"name-squatter-mkdir\", path = ghi, overwrite = FALSE) #> Error in check_for_overwrite(params[[\"parents\"]], params[[\"name\"]], overwrite): 1 item already exists at the target filepath and `overwrite = #> FALSE`: #> • name-squatter-mkdir <id: 1EI07WHwQWBO1kJRQhjXGD9MYzJAt2d-Y>  # `overwrite = TRUE` moves the existing item to trash, then proceeds drive_mkdir(\"name-squatter-mkdir\", path = ghi, overwrite = TRUE) #> File trashed: #> • name-squatter-mkdir <id: 1EI07WHwQWBO1kJRQhjXGD9MYzJAt2d-Y> #> Created Drive file: #> • name-squatter-mkdir <id: 1EJZNoVr8NzAgj_LrBobTRDxHLxePxjOo> #> With MIME type: #> • application/vnd.google-apps.folder  # list everything inside 'ghi' drive_ls(\"ghi\") #> # A dribble: 4 × 3 #>   name                id                                drive_resource    #>   <chr>               <drv_id>                          <list>            #> 1 name-squatter-mkdir 1EJZNoVr8NzAgj_LrBobTRDxHLxePxjOo <named list [33]> #> 2 pqr                 12qBJluUMWAOE-9eWVgnHN_WjUjEdlx9e <named list [34]> #> 3 mno                 1Qgg177mm4UkTtBCTgOlJEm29Id2ZpQin <named list [33]> #> 4 jkl                 1oNV-v9Vq4GC_yDLCVd-heNX1PC4qXUDs <named list [33]>  # Clean up drive_rm(ghi) #> File deleted: #> • ghi <id: 13d6Ro6HlWH1y4zWpDUksTCWFmuvk3oC1>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mv.html","id":null,"dir":"Reference","previous_headings":"","what":"Move a Drive file — drive_mv","title":"Move a Drive file — drive_mv","text":"Move Drive file different folder, give different name, .","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move a Drive file — drive_mv","text":"","code":"drive_mv(   file,   path = NULL,   name = NULL,   overwrite = NA,   verbose = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move a Drive file — drive_mv","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble. path Specifies target destination file Google Drive. Can actual path (character), file id marked as_id(), dribble. path shortcut folder, automatically resolved target folder. path given path (opposed dribble id), best explicitly indicate folder including trailing slash, since always worked context call. default, file stays current folder. name Character, new file name specified part path. force path interpreted folder, even character lacks trailing slash. default, file keeps current name. overwrite Logical, indicating whether check pre-existing file targetted \"filepath\". quotes around \"filepath\" refer fact Drive impose 1--1 relationship filepaths files, like typical file system; read drive_get(). NA (default): Just operation, even results multiple files filepath. TRUE: Check pre-existing file filepath. zero one, move pre-existing file trash, carry . Note new file inherit properties old one, sharing publishing settings. new file ID. error thrown two pre-existing files found. FALSE: Error pre-existing file filepath. Note existence checks, based filepath, expensive operations, .e. require additional API calls. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move a Drive file — drive_mv","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_mv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move a Drive file — drive_mv","text":"","code":"# create a file to move file <- drive_example_remote(\"chicken.txt\") %>%   drive_cp(\"chicken-mv.txt\") #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • chicken-mv.txt <id: 1TsAlfzUcxc1FQCjWHfciLBep13nElm1I>  # rename it, but leave in current folder (root folder, in this case) file <- drive_mv(file, \"chicken-mv-renamed.txt\") #> Original file: #> • chicken-mv.txt <id: 1TsAlfzUcxc1FQCjWHfciLBep13nElm1I> #> Has been renamed: #> • chicken-mv-renamed.txt <id: 1TsAlfzUcxc1FQCjWHfciLBep13nElm1I>  # create a folder to move the file into folder <- drive_mkdir(\"mv-folder\") #> Error in confirm_clear_path(path, name): Unclear if `path` specifies parent folder or full path to the new #> file, including its name. #> See `?as_dribble()` for advice on how to make this clear.  # move the file and rename it again, # specify destination as a dribble file <- drive_mv(file, path = folder, name = \"chicken-mv-re-renamed.txt\") #> Error: object 'folder' not found  # verify renamed file is now in the folder drive_ls(folder) #> Error: object 'folder' not found  # move the file back to root folder file <- drive_mv(file, \"~/\") #> ! Nothing to be done.  # move it again # specify destination as path with trailing slash # to ensure we get a move vs. renaming it to \"mv-folder\" file <- drive_mv(file, \"mv-folder/\") #> Original file: #> • chicken-mv-renamed.txt <id: 1TsAlfzUcxc1FQCjWHfciLBep13nElm1I> #> Has been moved: #> • mv-folder/chicken-mv-renamed.txt #>   <id: 1TsAlfzUcxc1FQCjWHfciLBep13nElm1I>  # `overwrite = FALSE` errors if something already exists at target filepath # THIS WILL ERROR! drive_create(\"name-squatter-mv\", path = \"~/\") #> Created Drive file: #> • name-squatter-mv <id: 1ug4iRUdoCJtH1sdJEPi4JLqC6jMdAzIH> #> With MIME type: #> • application/octet-stream drive_mv(file, path = \"~/\", name = \"name-squatter-mv\", overwrite = FALSE) #> Error in check_for_overwrite(parent = params[[\"addParents\"]] %||% parent_before,     name = params[[\"name\"]] %||% file$name, overwrite = overwrite): 110 items already exist at the target filepath and `overwrite = #> FALSE`: #> • name-squatter-mv <id: 1ug4iRUdoCJtH1sdJEPi4JLqC6jMdAzIH> #> • name-squatter-mv <id: 1fYW8GkaQ5pzxAaQZqg5YhVgUp7DZ9Zy6> #> • name-squatter-mv <id: 1RvUjOVaTDTEf8k0q2QV5RnjvLqn44Xa5> #> • name-squatter-mv <id: 1-LIIvKLO0weYnJjTus39i7YrZUZEZw4i> #> • name-squatter-mv <id: 1KZgQSi5X6kyKIgQS9AO_b5JBoi1NAPWI> #>   … and 105 more  # `overwrite = TRUE` moves the existing item to trash, then proceeds drive_mv(file, path = \"~/\", name = \"name-squatter-mv\", overwrite = TRUE) #> Error in check_for_overwrite(parent = params[[\"addParents\"]] %||% parent_before,     name = params[[\"name\"]] %||% file$name, overwrite = overwrite): Multiple items already exist at the target filepath. #> • name-squatter-mv <id: 1ug4iRUdoCJtH1sdJEPi4JLqC6jMdAzIH> #> • name-squatter-mv <id: 1fYW8GkaQ5pzxAaQZqg5YhVgUp7DZ9Zy6> #> • name-squatter-mv <id: 1RvUjOVaTDTEf8k0q2QV5RnjvLqn44Xa5> #> • name-squatter-mv <id: 1-LIIvKLO0weYnJjTus39i7YrZUZEZw4i> #> • name-squatter-mv <id: 1KZgQSi5X6kyKIgQS9AO_b5JBoi1NAPWI> #>   … and 105 more #> Although `overwrite = TRUE`, it's not clear which item to overwrite. #> Use `overwrite = NA` to suppress this check. Exiting.  # Clean up drive_rm(file, folder) #> Error: object 'folder' not found"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_publish.html","id":null,"dir":"Reference","previous_headings":"","what":"Publish native Google files — drive_publish","title":"Publish native Google files — drive_publish","text":"Publish (un-publish) native Google files web. Native Google files include Google Docs, Google Sheets, Google Slides. returned dribble extra columns, published revisions_resource. Read drive_reveal().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_publish.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Publish native Google files — drive_publish","text":"","code":"drive_publish(file, ..., verbose = deprecated())  drive_unpublish(file, ..., verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_publish.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Publish native Google files — drive_publish","text":"file Something identifies file(s) interest Google Drive. Can character vector names/paths, character vector file ids URLs marked as_id(), dribble. ... Name-value pairs add API request body (see API docs linked details). drive_publish(), include publishAuto = TRUE publishedOutsideDomain = TRUE, user specify values. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_publish.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Publish native Google files — drive_publish","text":"object class dribble, tibble one row per file. extra columns, published revisions_resource.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_publish.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Publish native Google files — drive_publish","text":"","code":"# Create a file to publish file <- drive_example_remote(\"chicken_sheet\") %>%   drive_cp() #> Original file: #> • chicken_sheet <id: 1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU> #> Copied to file: #> • Copy of chicken_sheet #>   <id: 1FrHK_BqjCC7Y9Vtyp0cdoY7EaWsI21OYgiGxhEZ3Pi8>  # Publish file file <- drive_publish(file) #> File now published: #> • Copy of chicken_sheet #>   <id: 1FrHK_BqjCC7Y9Vtyp0cdoY7EaWsI21OYgiGxhEZ3Pi8> file$published #> [1] TRUE  # Unpublish file file <- drive_unpublish(file) #> File now NOT published: #> • Copy of chicken_sheet #>   <id: 1FrHK_BqjCC7Y9Vtyp0cdoY7EaWsI21OYgiGxhEZ3Pi8> file$published #> [1] FALSE  # Clean up drive_rm(file) #> File deleted: #> • Copy of chicken_sheet #>   <id: 1FrHK_BqjCC7Y9Vtyp0cdoY7EaWsI21OYgiGxhEZ3Pi8>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_put.html","id":null,"dir":"Reference","previous_headings":"","what":"PUT new media into a Drive file — drive_put","title":"PUT new media into a Drive file — drive_put","text":"PUTs new media Drive file, HTTP sense: file already exists, replace content. file already exist, create new file. convenience wrapper around drive_upload() drive_update(). pseudo-code:","code":"target_filepath <- <determined from `path`, `name`, and `media`> hits <- <get all Drive files at target_filepath> if (no hits) {   drive_upload(media, path, name, type, ...) } else if (exactly 1 hit) {   drive_update(hit, media, ...) } else {   ERROR }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_put.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PUT new media into a Drive file — drive_put","text":"","code":"drive_put(   media,   path = NULL,   name = NULL,   ...,   type = NULL,   verbose = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_put.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PUT new media into a Drive file — drive_put","text":"media Character, path local file upload. path Specifies target destination new file Google Drive. Can actual path (character), file id marked as_id(), dribble. path shortcut folder, automatically resolved target folder. path given path (opposed dribble id), best explicitly indicate folder including trailing slash, since always worked context call. default, file created current user's \"Drive\" root folder. name Character, new file name specified part path. force path interpreted folder, even character lacks trailing slash. Defaults file's local name. ... Named parameters pass along Drive API. dynamic dots semantics. can affect metadata target file specifying properties Files resource via .... Read \"Request body\" section Drive API docs associated endpoint learn relevant parameters. type Character. type = NULL, MIME type automatically determined file extension, possible. source file suitable type, can request conversion Google Doc, Sheet Slides setting type document, spreadsheet, presentation, respectively. non-NULL values type pre-processed drive_mime_type(). verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_put.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PUT new media into a Drive file — drive_put","text":"object class dribble, tibble one row per file.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_put.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PUT new media into a Drive file — drive_put","text":"","code":"# create a local file to work with local_file <- tempfile(\"drive_put_\", fileext = \".txt\") writeLines(c(\"beginning\", \"middle\"), local_file)  # PUT to a novel filepath --> drive_put() delegates to drive_upload() file <- drive_put(local_file) #> ℹ No pre-existing Drive file at this path. Calling `drive_upload()`. #> Local file: #> • /tmp/RtmpsWXGNz/drive_put_1691598fb2cf.txt #> Uploaded into Drive file: #> • drive_put_1691598fb2cf.txt <id: 1pxC5jUlW8_6s-xsoj3523lASLy9TaQJo> #> With MIME type: #> • text/plain  # update the local file cat(\"end\", file = local_file, sep = \"\\n\", append = TRUE)  # PUT again --> drive_put() delegates to drive_update() file <- drive_put(local_file) #> ℹ A Drive file already exists at this path. Calling `drive_update()`. #> File updated: #> • drive_put_1691598fb2cf.txt <id: 1pxC5jUlW8_6s-xsoj3523lASLy9TaQJo>  # create a second file at this filepath file2 <- drive_create(basename(local_file)) #> Created Drive file: #> • drive_put_1691598fb2cf.txt <id: 12z6sI3uKmYHSBWCM32mXucVKRtoXEaPo> #> With MIME type: #> • text/plain  # PUT again --> ERROR drive_put(local_file) #> Error in drive_put(local_file): Multiple items already exist on Drive at the target filepath. #> Unclear what `drive_put()` should do. Exiting. #> • drive_put_1691598fb2cf.txt <id: 12z6sI3uKmYHSBWCM32mXucVKRtoXEaPo> #> • drive_put_1691598fb2cf.txt <id: 1pxC5jUlW8_6s-xsoj3523lASLy9TaQJo>  # Clean up drive_find(\"drive_put_.+[.]txt\") %>% drive_rm() #> Files deleted: #> • drive_put_1691598fb2cf.txt <id: 12z6sI3uKmYHSBWCM32mXucVKRtoXEaPo> #> • drive_put_1691598fb2cf.txt <id: 1pxC5jUlW8_6s-xsoj3523lASLy9TaQJo> unlink(local_file)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_read_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the content of a Drive file — drive_read_string","title":"Read the content of a Drive file — drive_read_string","text":"functions return content Drive file either string raw bytes. likely need additional work parse content useful R object. drive_download() generally useful function, certain file types, comma-separated values (MIME type text/csv), can handy read data directly Google Drive avoid writing disk. Just drive_download(), native Google file types, Google Sheets Docs, must exported conventional MIME type. See help drive_download() .","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_read_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the content of a Drive file — drive_read_string","text":"","code":"drive_read_string(file, type = NULL, encoding = NULL)  drive_read_raw(file, type = NULL)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_read_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the content of a Drive file — drive_read_string","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble. type Character. consulted file native Google file. Specifies desired type exported file. processed via drive_mime_type(), either file extension like \"pdf\" full MIME type like \"application/pdf\" acceptable. encoding Passed along httr::content(). Describes encoding input file.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_read_string.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the content of a Drive file — drive_read_string","text":"read_drive_string(): UTF-8 encoded string read_drive_raw(): raw() vector","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_read_string.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the content of a Drive file — drive_read_string","text":"","code":"# comma-separated values --> data.frame or tibble (chicken_csv <- drive_example_remote(\"chicken.csv\")) #> # A dribble: 1 × 3 #>   name        id                                drive_resource    #>   <chr>       <drv_id>                          <list>            #> 1 chicken.csv 1VOh6wWbRfuQLxbLg87o58vxJt95SIiZ7 <named list [37]> chicken_csv %>%   drive_read_string() %>%   read.csv(text = .) #> No encoding supplied: defaulting to UTF-8. #>                   chicken            breed     sex #> 1         Foghorn Leghorn          Leghorn rooster #> 2          Chicken Little          unknown     hen #> 3                  Ginger Rhode Island Red     hen #> 4     Camilla the Chicken       Chantecler     hen #> 5 Ernie The Giant Chicken           Brahma rooster #>                                                      motto #> 1               That's a joke, ah say, that's a joke, son. #> 2                                      The sky is falling! #> 3 Listen. We'll either die free chickens or we die trying. #> 4                                     Bawk, buck, ba-gawk. #> 5                      Put Captain Solo in the cargo hold.  # Google Doc --> character vector (chicken_doc <- drive_example_remote(\"chicken_doc\")) #> # A dribble: 1 × 3 #>   name        id                                           drive_resource #>   <chr>       <drv_id>                                     <list>         #> 1 chicken_doc 1X9pd4nOjl33zDFfTjw-_eFL7Qb9_g6VfVFDp1PPae94 <named list>   chicken_doc %>%   # NOTE: we must specify an export MIME type   drive_read_string(type = \"text/plain\") %>%   strsplit(split = \"(\\r\\n|\\r|\\n)\") %>%   .[[1]] #> No encoding supplied: defaulting to UTF-8. #> [1] \"A chicken whose name was Chantecler\"       #> [2] \"Clucked in iambic pentameter\"              #> [3] \"It sat on a shelf, reading Song of Myself\" #> [4] \"And laid eggs with a perfect diameter.\"    #> [5] \"\"                                          #> [6] \"\"                                          #> [7] \"—Richard Maxson\""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rename.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename a Drive file — drive_rename","title":"Rename a Drive file — drive_rename","text":"wrapper drive_mv() renames file. like rename move file, see drive_mv().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename a Drive file — drive_rename","text":"","code":"drive_rename(file, name = NULL, overwrite = NA, verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename a Drive file — drive_rename","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble. name Character. Name like file . overwrite Logical, indicating whether check pre-existing file targetted \"filepath\". quotes around \"filepath\" refer fact Drive impose 1--1 relationship filepaths files, like typical file system; read drive_get(). NA (default): Just operation, even results multiple files filepath. TRUE: Check pre-existing file filepath. zero one, move pre-existing file trash, carry . Note new file inherit properties old one, sharing publishing settings. new file ID. error thrown two pre-existing files found. FALSE: Error pre-existing file filepath. Note existence checks, based filepath, expensive operations, .e. require additional API calls. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rename.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename a Drive file — drive_rename","text":"object class dribble, tibble one row per file.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rename.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename a Drive file — drive_rename","text":"","code":"# Create a file to rename file <- drive_create(\"file-to-rename\") #> Created Drive file: #> • file-to-rename <id: 1hsVd5o3HOG1WtzQ1gKECkAN-oazaDj6M> #> With MIME type: #> • application/octet-stream  # Rename it file <- drive_rename(file, name = \"renamed-file\") #> Original file: #> • file-to-rename <id: 1hsVd5o3HOG1WtzQ1gKECkAN-oazaDj6M> #> Has been renamed: #> • renamed-file <id: 1hsVd5o3HOG1WtzQ1gKECkAN-oazaDj6M>  # `overwrite = FALSE` errors if something already exists at target filepath # THIS WILL ERROR! drive_create(\"name-squatter-rename\") #> Created Drive file: #> • name-squatter-rename <id: 1PBkzlI4oRs8I13PUAcUjAZTvJKC8jpdP> #> With MIME type: #> • application/octet-stream drive_rename(file, name = \"name-squatter-rename\", overwrite = FALSE) #> Error in check_for_overwrite(parent = params[[\"addParents\"]] %||% parent_before,     name = params[[\"name\"]] %||% file$name, overwrite = overwrite): 1 item already exists at the target filepath and `overwrite = #> FALSE`: #> • name-squatter-rename <id: 1PBkzlI4oRs8I13PUAcUjAZTvJKC8jpdP>  # `overwrite = TRUE` moves the existing item to trash, then proceeds file <- drive_rename(file, name = \"name-squatter-rename\", overwrite = TRUE) #> File trashed: #> • name-squatter-rename <id: 1PBkzlI4oRs8I13PUAcUjAZTvJKC8jpdP> #> Original file: #> • renamed-file <id: 1hsVd5o3HOG1WtzQ1gKECkAN-oazaDj6M> #> Has been renamed: #> • name-squatter-rename <id: 1hsVd5o3HOG1WtzQ1gKECkAN-oazaDj6M>  # Clean up drive_rm(file) #> File deleted: #> • name-squatter-rename <id: 1hsVd5o3HOG1WtzQ1gKECkAN-oazaDj6M>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a new column of Drive file information — drive_reveal","title":"Add a new column of Drive file information — drive_reveal","text":"drive_reveal() adds extra information Drive files readily available default dribble produced googledrive. info always included default dribble? always care . lot esoteric information drive_resource little value users. might \"expensive\" get information put usable form. example, revealing file's \"path\", \"permissions\", \"published\" status require additional API calls. drive_reveal() can also hoist property drive_resource list-column, property's name passed argument. resulting new column simplified easy , e.g., individual elements string logical. extracts date-time, return POSIXct. Otherwise, get list-column. makes sad, consider using tidyr::hoist() instead. powerful due richer \"plucking specification\" ptype transform arguments. Another useful function tidyr::unnest_wider().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a new column of Drive file information — drive_reveal","text":"","code":"drive_reveal(file, what = c(\"path\", \"permissions\", \"published\", \"parent\"))"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a new column of Drive file information — drive_reveal","text":"file Something identifies file(s) interest Google Drive. Can character vector names/paths, character vector file ids URLs marked as_id(), dribble. Character, describing type info want add. values get special handling (details ): path permissions published parent can also request property drive_resource column name. request can camelCase snake_case, new column name always snake_case. examples : mime_type (mimeType) trashed starred description version web_view_link (webViewLink) modified_time (modifiedTime) created_time (createdTime) owned_by_me (ownedByMe) size quota_bytes_used (quotaBytesUsed)","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a new column of Drive file information — drive_reveal","text":"object class dribble, tibble one row per file. additional info requested via appears one () extra columns.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"file-path","dir":"Reference","previous_headings":"","what":"File path","title":"Add a new column of Drive file information — drive_reveal","text":"= \"path\" dribble gains character column holding file's path. can slow, use caution. example path ~//b/ illustrates two conventions used googledrive: leading ~/ means folder located current user's \"Drive\" root folder. trailing / means b, located , folder folder shortcut.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"permissions","dir":"Reference","previous_headings":"","what":"Permissions","title":"Add a new column of Drive file information — drive_reveal","text":"= \"permissions\" dribble gains logical column shared indicates whether file shared new list-column permissions_resource containing lists Permissions resources.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"publishing","dir":"Reference","previous_headings":"","what":"Publishing","title":"Add a new column of Drive file information — drive_reveal","text":"= \"published\" dribble gains logical column published indicates whether file published new list-column revision_resource containing lists Revisions resources.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"parent","dir":"Reference","previous_headings":"","what":"Parent","title":"Add a new column of Drive file information — drive_reveal","text":"= \"parent\" dribble gains character column id_parent file id item's parent folder. information available drive_resource, just hoisted : Google Drive used allow files multiple parents, longer supported googledrive now assumes impossible. However, seen (old) files still >1 parent folder. see message drop first parent. parents property drive_resource \"extra\" layer nesting needs flattened. really want raw parents property, call drive_reveal(= \"parents\").","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_reveal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a new column of Drive file information — drive_reveal","text":"","code":"# Get a few of your files files <- drive_find(n_max = 10, trashed = NA)  # the \"special\" cases that require additional API calls and can be slow drive_reveal(files, \"path\") #> # A dribble: 10 × 4 #>    name                   path                     id       drive_resource #>    <chr>                  <chr>                    <drv_id> <list>         #>  1 name-squatter-rename   ~/name-squatter-rename   1PBkzlI… <named list>   #>  2 name-squatter-mv       ~/name-squatter-mv       1ug4iRU… <named list>   #>  3 chicken-mv-renamed.txt ~/mv-folder/chicken-mv-… 1TsAlfz… <named list>   #>  4 name-squatter-upload   ~/name-squatter-upload   1iPv06h… <named list>   #>  5 name-squatter-rename   ~/name-squatter-rename   1P7pMqS… <named list>   #>  6 name-squatter-mv       ~/name-squatter-mv       1fYW8Gk… <named list>   #>  7 chicken-mv-renamed.txt ~/mv-folder/chicken-mv-… 1kwbIWn… <named list>   #>  8 name-squatter-upload   ~/name-squatter-upload   1T1AAzY… <named list>   #>  9 name-squatter-rename   ~/name-squatter-rename   1TtXYrm… <named list>   #> 10 name-squatter-mv       ~/name-squatter-mv       1RvUjOV… <named list>   drive_reveal(files, \"permissions\") #> # A dribble: 10 × 5 #>    name                shared id       drive_resource permissions_resource #>    <chr>               <lgl>  <drv_id> <list>         <list>               #>  1 name-squatter-rena… FALSE  1PBkzlI… <named list>   <named list [2]>     #>  2 name-squatter-mv    FALSE  1ug4iRU… <named list>   <named list [2]>     #>  3 chicken-mv-renamed… FALSE  1TsAlfz… <named list>   <named list [2]>     #>  4 name-squatter-uplo… FALSE  1iPv06h… <named list>   <named list [2]>     #>  5 name-squatter-rena… FALSE  1P7pMqS… <named list>   <named list [2]>     #>  6 name-squatter-mv    FALSE  1fYW8Gk… <named list>   <named list [2]>     #>  7 chicken-mv-renamed… FALSE  1kwbIWn… <named list>   <named list [2]>     #>  8 name-squatter-uplo… FALSE  1T1AAzY… <named list>   <named list [2]>     #>  9 name-squatter-rena… FALSE  1TtXYrm… <named list>   <named list [2]>     #> 10 name-squatter-mv    FALSE  1RvUjOV… <named list>   <named list [2]>     drive_reveal(files, \"published\") #> # A dribble: 10 × 5 #>    name                published id       drive_resource revision_resource #>    <chr>               <lgl>     <drv_id> <list>         <list>            #>  1 name-squatter-rena… FALSE     1PBkzlI… <named list>   <named list [9]>  #>  2 name-squatter-mv    FALSE     1ug4iRU… <named list>   <named list [9]>  #>  3 chicken-mv-renamed… FALSE     1TsAlfz… <named list>   <named list [10]> #>  4 name-squatter-uplo… FALSE     1iPv06h… <named list>   <named list [9]>  #>  5 name-squatter-rena… FALSE     1P7pMqS… <named list>   <named list [9]>  #>  6 name-squatter-mv    FALSE     1fYW8Gk… <named list>   <named list [9]>  #>  7 chicken-mv-renamed… FALSE     1kwbIWn… <named list>   <named list [10]> #>  8 name-squatter-uplo… FALSE     1T1AAzY… <named list>   <named list [9]>  #>  9 name-squatter-rena… FALSE     1TtXYrm… <named list>   <named list [9]>  #> 10 name-squatter-mv    FALSE     1RvUjOV… <named list>   <named list [9]>   # a \"special\" case of digging info out of `drive_resource`, then processing # a bit drive_reveal(files, \"parent\") #> # A dribble: 10 × 4 #>    name                   id_parent id       drive_resource    #>    <chr>                  <drv_id>  <drv_id> <list>            #>  1 name-squatter-rename   0AO_RMa…  1PBkzlI… <named list [39]> #>  2 name-squatter-mv       0AO_RMa…  1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt 1ns19LO…  1TsAlfz… <named list [42]> #>  4 name-squatter-upload   0AO_RMa…  1iPv06h… <named list [39]> #>  5 name-squatter-rename   0AO_RMa…  1P7pMqS… <named list [39]> #>  6 name-squatter-mv       0AO_RMa…  1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt 1ns19LO…  1kwbIWn… <named list [42]> #>  8 name-squatter-upload   0AO_RMa…  1T1AAzY… <named list [39]> #>  9 name-squatter-rename   0AO_RMa…  1TtXYrm… <named list [39]> #> 10 name-squatter-mv       0AO_RMa…  1RvUjOV… <named list [39]>  # the \"simple\" cases of digging info out of `drive_resource` drive_reveal(files, \"trashed\") #> # A dribble: 10 × 4 #>    name                   trashed id       drive_resource    #>    <chr>                  <lgl>   <drv_id> <list>            #>  1 name-squatter-rename   TRUE    1PBkzlI… <named list [39]> #>  2 name-squatter-mv       FALSE   1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt FALSE   1TsAlfz… <named list [42]> #>  4 name-squatter-upload   TRUE    1iPv06h… <named list [39]> #>  5 name-squatter-rename   TRUE    1P7pMqS… <named list [39]> #>  6 name-squatter-mv       FALSE   1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt FALSE   1kwbIWn… <named list [42]> #>  8 name-squatter-upload   TRUE    1T1AAzY… <named list [39]> #>  9 name-squatter-rename   TRUE    1TtXYrm… <named list [39]> #> 10 name-squatter-mv       FALSE   1RvUjOV… <named list [39]> drive_reveal(files, \"mime_type\") #> # A dribble: 10 × 4 #>    name                   mime_type                id       drive_resource #>    <chr>                  <chr>                    <drv_id> <list>         #>  1 name-squatter-rename   application/octet-stream 1PBkzlI… <named list>   #>  2 name-squatter-mv       application/octet-stream 1ug4iRU… <named list>   #>  3 chicken-mv-renamed.txt text/plain               1TsAlfz… <named list>   #>  4 name-squatter-upload   application/octet-stream 1iPv06h… <named list>   #>  5 name-squatter-rename   application/octet-stream 1P7pMqS… <named list>   #>  6 name-squatter-mv       application/octet-stream 1fYW8Gk… <named list>   #>  7 chicken-mv-renamed.txt text/plain               1kwbIWn… <named list>   #>  8 name-squatter-upload   application/octet-stream 1T1AAzY… <named list>   #>  9 name-squatter-rename   application/octet-stream 1TtXYrm… <named list>   #> 10 name-squatter-mv       application/octet-stream 1RvUjOV… <named list>   drive_reveal(files, \"starred\") #> # A dribble: 10 × 4 #>    name                   starred id       drive_resource    #>    <chr>                  <lgl>   <drv_id> <list>            #>  1 name-squatter-rename   FALSE   1PBkzlI… <named list [39]> #>  2 name-squatter-mv       FALSE   1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt FALSE   1TsAlfz… <named list [42]> #>  4 name-squatter-upload   FALSE   1iPv06h… <named list [39]> #>  5 name-squatter-rename   FALSE   1P7pMqS… <named list [39]> #>  6 name-squatter-mv       FALSE   1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt FALSE   1kwbIWn… <named list [42]> #>  8 name-squatter-upload   FALSE   1T1AAzY… <named list [39]> #>  9 name-squatter-rename   FALSE   1TtXYrm… <named list [39]> #> 10 name-squatter-mv       FALSE   1RvUjOV… <named list [39]> drive_reveal(files, \"description\") #> # A dribble: 10 × 4 #>    name                   description id       drive_resource    #>    <chr>                  <list>      <drv_id> <list>            #>  1 name-squatter-rename   <NULL>      1PBkzlI… <named list [39]> #>  2 name-squatter-mv       <NULL>      1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt <NULL>      1TsAlfz… <named list [42]> #>  4 name-squatter-upload   <NULL>      1iPv06h… <named list [39]> #>  5 name-squatter-rename   <NULL>      1P7pMqS… <named list [39]> #>  6 name-squatter-mv       <NULL>      1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt <NULL>      1kwbIWn… <named list [42]> #>  8 name-squatter-upload   <NULL>      1T1AAzY… <named list [39]> #>  9 name-squatter-rename   <NULL>      1TtXYrm… <named list [39]> #> 10 name-squatter-mv       <NULL>      1RvUjOV… <named list [39]> drive_reveal(files, \"version\") #> # A dribble: 10 × 4 #>    name                   version id       drive_resource    #>    <chr>                  <chr>   <drv_id> <list>            #>  1 name-squatter-rename   2       1PBkzlI… <named list [39]> #>  2 name-squatter-mv       1       1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt 5       1TsAlfz… <named list [42]> #>  4 name-squatter-upload   2       1iPv06h… <named list [39]> #>  5 name-squatter-rename   2       1P7pMqS… <named list [39]> #>  6 name-squatter-mv       1       1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt 5       1kwbIWn… <named list [42]> #>  8 name-squatter-upload   2       1T1AAzY… <named list [39]> #>  9 name-squatter-rename   2       1TtXYrm… <named list [39]> #> 10 name-squatter-mv       1       1RvUjOV… <named list [39]> drive_reveal(files, \"web_view_link\") #> # A dribble: 10 × 4 #>    name                   web_view_link            id       drive_resource #>    <chr>                  <chr>                    <drv_id> <list>         #>  1 name-squatter-rename   https://drive.google.co… 1PBkzlI… <named list>   #>  2 name-squatter-mv       https://drive.google.co… 1ug4iRU… <named list>   #>  3 chicken-mv-renamed.txt https://drive.google.co… 1TsAlfz… <named list>   #>  4 name-squatter-upload   https://drive.google.co… 1iPv06h… <named list>   #>  5 name-squatter-rename   https://drive.google.co… 1P7pMqS… <named list>   #>  6 name-squatter-mv       https://drive.google.co… 1fYW8Gk… <named list>   #>  7 chicken-mv-renamed.txt https://drive.google.co… 1kwbIWn… <named list>   #>  8 name-squatter-upload   https://drive.google.co… 1T1AAzY… <named list>   #>  9 name-squatter-rename   https://drive.google.co… 1TtXYrm… <named list>   #> 10 name-squatter-mv       https://drive.google.co… 1RvUjOV… <named list>   drive_reveal(files, \"modified_time\") #> # A dribble: 10 × 4 #>    name                   modified_time       id       drive_resource    #>    <chr>                  <dttm>              <drv_id> <list>            #>  1 name-squatter-rename   2024-12-15 13:42:42 1PBkzlI… <named list [39]> #>  2 name-squatter-mv       2024-12-15 13:42:25 1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt 2024-12-15 13:42:23 1TsAlfz… <named list [42]> #>  4 name-squatter-upload   2024-12-14 13:45:23 1iPv06h… <named list [39]> #>  5 name-squatter-rename   2024-12-14 13:44:21 1P7pMqS… <named list [39]> #>  6 name-squatter-mv       2024-12-14 13:43:53 1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt 2024-12-14 13:43:50 1kwbIWn… <named list [42]> #>  8 name-squatter-upload   2024-12-13 13:47:05 1T1AAzY… <named list [39]> #>  9 name-squatter-rename   2024-12-13 13:46:28 1TtXYrm… <named list [39]> #> 10 name-squatter-mv       2024-12-13 13:46:10 1RvUjOV… <named list [39]> drive_reveal(files, \"created_time\") #> # A dribble: 10 × 4 #>    name                   created_time        id       drive_resource    #>    <chr>                  <dttm>              <drv_id> <list>            #>  1 name-squatter-rename   2024-12-15 13:42:42 1PBkzlI… <named list [39]> #>  2 name-squatter-mv       2024-12-15 13:42:25 1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt 2024-12-15 13:42:22 1TsAlfz… <named list [42]> #>  4 name-squatter-upload   2024-12-14 13:45:23 1iPv06h… <named list [39]> #>  5 name-squatter-rename   2024-12-14 13:44:21 1P7pMqS… <named list [39]> #>  6 name-squatter-mv       2024-12-14 13:43:53 1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt 2024-12-14 13:43:47 1kwbIWn… <named list [42]> #>  8 name-squatter-upload   2024-12-13 13:47:05 1T1AAzY… <named list [39]> #>  9 name-squatter-rename   2024-12-13 13:46:28 1TtXYrm… <named list [39]> #> 10 name-squatter-mv       2024-12-13 13:46:10 1RvUjOV… <named list [39]> drive_reveal(files, \"owned_by_me\") #> # A dribble: 10 × 4 #>    name                   owned_by_me id       drive_resource    #>    <chr>                  <lgl>       <drv_id> <list>            #>  1 name-squatter-rename   TRUE        1PBkzlI… <named list [39]> #>  2 name-squatter-mv       TRUE        1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt TRUE        1TsAlfz… <named list [42]> #>  4 name-squatter-upload   TRUE        1iPv06h… <named list [39]> #>  5 name-squatter-rename   TRUE        1P7pMqS… <named list [39]> #>  6 name-squatter-mv       TRUE        1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt TRUE        1kwbIWn… <named list [42]> #>  8 name-squatter-upload   TRUE        1T1AAzY… <named list [39]> #>  9 name-squatter-rename   TRUE        1TtXYrm… <named list [39]> #> 10 name-squatter-mv       TRUE        1RvUjOV… <named list [39]> drive_reveal(files, \"size\") #> # A dribble: 10 × 4 #>    name                   size  id       drive_resource    #>    <chr>                  <chr> <drv_id> <list>            #>  1 name-squatter-rename   0     1PBkzlI… <named list [39]> #>  2 name-squatter-mv       0     1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt 165   1TsAlfz… <named list [42]> #>  4 name-squatter-upload   0     1iPv06h… <named list [39]> #>  5 name-squatter-rename   0     1P7pMqS… <named list [39]> #>  6 name-squatter-mv       0     1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt 165   1kwbIWn… <named list [42]> #>  8 name-squatter-upload   0     1T1AAzY… <named list [39]> #>  9 name-squatter-rename   0     1TtXYrm… <named list [39]> #> 10 name-squatter-mv       0     1RvUjOV… <named list [39]> drive_reveal(files, \"quota_bytes_used\") #> # A dribble: 10 × 4 #>    name                   quota_bytes_used id       drive_resource    #>    <chr>                  <chr>            <drv_id> <list>            #>  1 name-squatter-rename   0                1PBkzlI… <named list [39]> #>  2 name-squatter-mv       0                1ug4iRU… <named list [39]> #>  3 chicken-mv-renamed.txt 165              1TsAlfz… <named list [42]> #>  4 name-squatter-upload   0                1iPv06h… <named list [39]> #>  5 name-squatter-rename   0                1P7pMqS… <named list [39]> #>  6 name-squatter-mv       0                1fYW8Gk… <named list [39]> #>  7 chicken-mv-renamed.txt 165              1kwbIWn… <named list [42]> #>  8 name-squatter-upload   0                1T1AAzY… <named list [39]> #>  9 name-squatter-rename   0                1TtXYrm… <named list [39]> #> 10 name-squatter-mv       0                1RvUjOV… <named list [39]>  # 'root' is a special file id that represents your My Drive root folder drive_get(id = \"root\") %>%   drive_reveal(\"path\") #> # A dribble: 1 × 4 #>   name     path  id                  drive_resource    #>   <chr>    <chr> <drv_id>            <list>            #> 1 My Drive ~/    0AO_RMaBzcP63Uk9PVA <named list [31]>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete files from Drive — drive_rm","title":"Delete files from Drive — drive_rm","text":"Caution: permanently delete files! safer, reversible option, see drive_trash().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete files from Drive — drive_rm","text":"","code":"drive_rm(..., verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete files from Drive — drive_rm","text":"... One Drive files, specified valid way, .e. dribble, name path, file id URL marked as_id(). combination thereof. Elements processed as_dribble() row-bound prior deletion. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete files from Drive — drive_rm","text":"Logical vector, indicating whether delete succeeded.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_rm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete files from Drive — drive_rm","text":"","code":"# Target one of the official example files to copy (then remove) (src_file <- drive_example_remote(\"chicken.txt\")) #> # A dribble: 1 × 3 #>   name        id                                drive_resource    #>   <chr>       <drv_id>                          <list>            #> 1 chicken.txt 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y <named list [38]>  # Create a copy, then remove it by name src_file %>%   drive_cp(name = \"chicken-rm.txt\") #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • chicken-rm.txt <id: 1wvffY6HJafHdOZJ-NzBPIHg8uWa-Xtbu> drive_rm(\"chicken-rm.txt\") #> File deleted: #> • chicken-rm.txt <id: 1wvffY6HJafHdOZJ-NzBPIHg8uWa-Xtbu>  # Create several more copies x1 <- src_file %>%   drive_cp(name = \"chicken-abc.txt\") #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • chicken-abc.txt <id: 1NS_kvxR9V5uEo0NRFfcLhncFzLE3_o4F> drive_cp(src_file, name = \"chicken-def.txt\") #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • chicken-def.txt <id: 17_4ARKrD2TVAFxrAxkDEZ7kwJMyoXEYV> x2 <- src_file %>%   drive_cp(name = \"chicken-ghi.txt\") #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • chicken-ghi.txt <id: 1oJQ_axvqF8f1L4lOGdTPU4QFDB5RswYZ>  # Remove the copies all at once, specified in different ways drive_rm(x1, \"chicken-def.txt\", as_id(x2)) #> Files deleted: #> • chicken-abc.txt <id: 1NS_kvxR9V5uEo0NRFfcLhncFzLE3_o4F> #> • chicken-def.txt <id: 17_4ARKrD2TVAFxrAxkDEZ7kwJMyoXEYV> #> • chicken-ghi.txt <id: 1oJQ_axvqF8f1L4lOGdTPU4QFDB5RswYZ>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_scopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce scopes specific to the Drive API — drive_scopes","title":"Produce scopes specific to the Drive API — drive_scopes","text":"called arguments, drive_scopes() returns named character vector scopes associated Drive API. drive_scopes(scopes =) given, abbreviated entry \"drive.readonly\" expanded full scope (\"https://www.googleapis.com/auth/drive.readonly\" case). Unrecognized scopes passed unchanged.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_scopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce scopes specific to the Drive API — drive_scopes","text":"","code":"drive_scopes(scopes = NULL)"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_scopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce scopes specific to the Drive API — drive_scopes","text":"scopes One API scopes. scope can specified full , Drive API-specific scopes, abbreviated form recognized drive_scopes(): \"drive\" = \"https://www.googleapis.com/auth/drive\" (default) \"full\" = \"https://www.googleapis.com/auth/drive\" (\"drive\") \"drive.readonly\" = \"https://www.googleapis.com/auth/drive.readonly\" \"drive.file\" = \"https://www.googleapis.com/auth/drive.file\" \"drive.appdata\" = \"https://www.googleapis.com/auth/drive.appdata\" \"drive.metadata\" = \"https://www.googleapis.com/auth/drive.metadata\" \"drive.metadata.readonly\" = \"https://www.googleapis.com/auth/drive.metadata.readonly\" \"drive.photos.readonly\" = \"https://www.googleapis.com/auth/drive.photos.readonly\" \"drive.scripts\" = \"https://www.googleapis.com/auth/drive.scripts See https://developers.google.com/drive/api/guides/api-specific-auth details permissions scope.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_scopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce scopes specific to the Drive API — drive_scopes","text":"character vector scopes.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_scopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce scopes specific to the Drive API — drive_scopes","text":"","code":"drive_scopes(\"full\") #> [1] \"https://www.googleapis.com/auth/drive\" drive_scopes(\"drive.readonly\") #> [1] \"https://www.googleapis.com/auth/drive.readonly\" drive_scopes() #>                                                     drive  #>                   \"https://www.googleapis.com/auth/drive\"  #>                                                      full  #>                   \"https://www.googleapis.com/auth/drive\"  #>                                            drive.readonly  #>          \"https://www.googleapis.com/auth/drive.readonly\"  #>                                                drive.file  #>              \"https://www.googleapis.com/auth/drive.file\"  #>                                             drive.appdata  #>           \"https://www.googleapis.com/auth/drive.appdata\"  #>                                            drive.metadata  #>          \"https://www.googleapis.com/auth/drive.metadata\"  #>                                   drive.metadata.readonly  #> \"https://www.googleapis.com/auth/drive.metadata.readonly\"  #>                                     drive.photos.readonly  #>   \"https://www.googleapis.com/auth/drive.photos.readonly\"  #>                                             drive.scripts  #>           \"https://www.googleapis.com/auth/drive.scripts\""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Share Drive files — drive_share","title":"Share Drive files — drive_share","text":"Grant individuals groups access files, including permission read, comment, edit. returned dribble extra columns, shared permissions_resource. Read drive_reveal(). drive_share_anyone() convenience wrapper common special case: \"make file readable 'anyone link'\".","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Share Drive files — drive_share","text":"","code":"drive_share(   file,   role = c(\"reader\", \"commenter\", \"writer\", \"fileOrganizer\", \"owner\", \"organizer\"),   type = c(\"user\", \"group\", \"domain\", \"anyone\"),   ...,   verbose = deprecated() )  drive_share_anyone(file, verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Share Drive files — drive_share","text":"file Something identifies file(s) interest Google Drive. Can character vector names/paths, character vector file ids URLs marked as_id(), dribble. role Character. role grant. Must one : owner (allowed shared drives) organizer (applies shared drives) fileOrganizer (applies shared drives) writer commenter reader type Character. Describes grantee. Must one : user group domain anyone ... Name-value pairs add API request. provide additional information, emailAddress (grantee type \"group\" \"user\") domain (grantee type \"domain\"). Read API docs linked details. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Share Drive files — drive_share","text":"object class dribble, tibble one row per file. extra columns, shared permissions_resource.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_share.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Share Drive files — drive_share","text":"","code":"# Create a file to share file <- drive_example_remote(\"chicken_doc\") %>%   drive_cp(name = \"chicken-share.txt\") #> Original file: #> • chicken_doc <id: 1X9pd4nOjl33zDFfTjw-_eFL7Qb9_g6VfVFDp1PPae94> #> Copied to file: #> • chicken-share.txt <id: 11cQBklM4jQLrhe9H4fbs5cKc2rzujgdQhnddTFFfr18>  # Let a specific person comment file <- file %>%   drive_share(     role = \"commenter\",     type = \"user\",     emailAddress = \"susan@example.com\"   ) #> Permissions updated: #> • role = commenter #> • type = user #> For file: #> • chicken-share.txt <id: 11cQBklM4jQLrhe9H4fbs5cKc2rzujgdQhnddTFFfr18>  # Let a different specific person edit and customize the email notification file <- file %>%   drive_share(     role = \"writer\",     type = \"user\",     emailAddress = \"carol@example.com\",     emailMessage = \"Would appreciate your feedback on this!\"   ) #> Permissions updated: #> • role = writer #> • type = user #> For file: #> • chicken-share.txt <id: 11cQBklM4jQLrhe9H4fbs5cKc2rzujgdQhnddTFFfr18>  # Let anyone read the file file <- file %>%   drive_share(role = \"reader\", type = \"anyone\") #> Permissions updated: #> • role = reader #> • type = anyone #> For file: #> • chicken-share.txt <id: 11cQBklM4jQLrhe9H4fbs5cKc2rzujgdQhnddTFFfr18> # Single-purpose wrapper function for this drive_share_anyone(file) #> Permissions updated: #> • role = reader #> • type = anyone #> For file: #> • chicken-share.txt <id: 11cQBklM4jQLrhe9H4fbs5cKc2rzujgdQhnddTFFfr18>  # Clean up drive_rm(file) #> File deleted: #> • chicken-share.txt <id: 11cQBklM4jQLrhe9H4fbs5cKc2rzujgdQhnddTFFfr18>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce configured token — drive_token","title":"Produce configured token — drive_token","text":"internal use programming around Drive API. Returns token pre-processed httr::config(). users need handle tokens \"hand\" , even need control, drive_auth() need. current token, drive_auth() called either load cache initiate OAuth2.0 flow. auth deactivated via drive_deauth(), drive_token() returns NULL.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce configured token — drive_token","text":"","code":"drive_token()"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce configured token — drive_token","text":"request object (S3 class provided httr).","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce configured token — drive_token","text":"","code":"req <- request_generate(   \"drive.files.get\",   list(fileId = \"abc\"),   token = drive_token() ) req #> $method #> [1] \"GET\" #>  #> $url #> [1] \"https://www.googleapis.com/drive/v3/files/abc?supportsAllDrives=TRUE\" #>  #> $body #> named list() #>  #> $token #> <request> #> Auth token: TokenServiceAccount #>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_trash.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Drive files to or from trash — drive_trash","title":"Move Drive files to or from trash — drive_trash","text":"Move Drive files trash","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_trash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Drive files to or from trash — drive_trash","text":"","code":"drive_trash(file, verbose = deprecated())  drive_untrash(file, verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_trash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Drive files to or from trash — drive_trash","text":"file Something identifies file(s) interest Google Drive. Can character vector names/paths, character vector file ids URLs marked as_id(), dribble. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_trash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move Drive files to or from trash — drive_trash","text":"object class dribble, tibble one row per file.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_trash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move Drive files to or from trash — drive_trash","text":"","code":"# Create a file and put it in the trash. file <- drive_example_remote(\"chicken.txt\") %>%   drive_cp(\"chicken-trash.txt\") #> Original file: #> • chicken.txt <id: 1wOLeWVRkTb6lDmLRiOhg9iKM7DlN762Y> #> Copied to file: #> • chicken-trash.txt <id: 1tT7L70S_o5PNePDFFqyAYMCprTUroiUd> drive_trash(\"chicken-trash.txt\") #> File trashed: #> • chicken-trash.txt <id: 1tT7L70S_o5PNePDFFqyAYMCprTUroiUd>  # Confirm it's in the trash drive_find(trashed = TRUE) #> # A dribble: 62 × 3 #>    name                 id                                drive_resource #>    <chr>                <drv_id>                          <list>         #>  1 chicken-trash.txt    1tT7L70S_o5PNePDFFqyAYMCprTUroiUd <named list>   #>  2 name-squatter-rename 1PBkzlI4oRs8I13PUAcUjAZTvJKC8jpdP <named list>   #>  3 name-squatter-upload 1iPv06h-VoRI080d4DKN9rpX-fSlC1jsY <named list>   #>  4 name-squatter-rename 1P7pMqScKoPIaycGxREDqSxQdFuELFgzg <named list>   #>  5 name-squatter-upload 1T1AAzYNwi-mbsymTbc5_Jhp5dIZ3KXsy <named list>   #>  6 name-squatter-rename 1TtXYrmGqJstLrg1t3K3fChYOfPivNhmY <named list>   #>  7 name-squatter-upload 1tBzne1GwZYKS0hgxeHwN-F9kMoG_8bOx <named list>   #>  8 name-squatter-rename 1WtQQQIq4C7BvR_12p76TEq2S2aegHOA4 <named list>   #>  9 name-squatter-upload 1kBzbufzaTi-wDwIOgGkWC0PuEGTOdciG <named list>   #> 10 name-squatter-rename 1wtkbjcIgJcSN82fqrJ_OPZhPWRch-Qxs <named list>   #> # ℹ 52 more rows  # Remove it from the trash and confirm drive_untrash(\"chicken-trash.txt\") #> File untrashed: #> • chicken-trash.txt <id: 1tT7L70S_o5PNePDFFqyAYMCprTUroiUd> drive_find(trashed = TRUE) #> # A dribble: 61 × 3 #>    name                 id                                drive_resource #>    <chr>                <drv_id>                          <list>         #>  1 name-squatter-rename 1PBkzlI4oRs8I13PUAcUjAZTvJKC8jpdP <named list>   #>  2 name-squatter-upload 1iPv06h-VoRI080d4DKN9rpX-fSlC1jsY <named list>   #>  3 name-squatter-rename 1P7pMqScKoPIaycGxREDqSxQdFuELFgzg <named list>   #>  4 name-squatter-upload 1T1AAzYNwi-mbsymTbc5_Jhp5dIZ3KXsy <named list>   #>  5 name-squatter-rename 1TtXYrmGqJstLrg1t3K3fChYOfPivNhmY <named list>   #>  6 name-squatter-upload 1tBzne1GwZYKS0hgxeHwN-F9kMoG_8bOx <named list>   #>  7 name-squatter-rename 1WtQQQIq4C7BvR_12p76TEq2S2aegHOA4 <named list>   #>  8 name-squatter-upload 1kBzbufzaTi-wDwIOgGkWC0PuEGTOdciG <named list>   #>  9 name-squatter-rename 1wtkbjcIgJcSN82fqrJ_OPZhPWRch-Qxs <named list>   #> 10 name-squatter-upload 1quYUtNkPVpYZMMn2QxgwHhGLbbpd_xGD <named list>   #> # ℹ 51 more rows  # Clean up drive_rm(\"chicken-trash.txt\") #> File deleted: #> • chicken-trash.txt <id: 1tT7L70S_o5PNePDFFqyAYMCprTUroiUd>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update an existing Drive file — drive_update","title":"Update an existing Drive file — drive_update","text":"Update existing Drive file id new content (\"media\" Drive API-speak), new metadata, .  create new file update existing, depending whether Drive file already exists, see drive_put().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update an existing Drive file — drive_update","text":"","code":"drive_update(file, media = NULL, ..., verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update an existing Drive file — drive_update","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble. media Character, path local file upload. ... Named parameters pass along Drive API. dynamic dots semantics. can affect metadata target file specifying properties Files resource via .... Read \"Request body\" section Drive API docs associated endpoint learn relevant parameters. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update an existing Drive file — drive_update","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update an existing Drive file — drive_update","text":"","code":"# Create a new file, so we can update it x <- drive_example_remote(\"chicken.csv\") %>%   drive_cp() #> Original file: #> • chicken.csv <id: 1VOh6wWbRfuQLxbLg87o58vxJt95SIiZ7> #> Copied to file: #> • Copy of chicken.csv <id: 14mQ6f7z-FHzylAEqwpESbjjYrUJO---B>  # Update the file with new media x <- x %>%   drive_update(drive_example_local(\"chicken.txt\")) #> File updated: #> • Copy of chicken.csv <id: 14mQ6f7z-FHzylAEqwpESbjjYrUJO---B>  # Update the file with new metadata. # Notice here `name` is not an argument of `drive_update()`, we are passing # this to the API via the `...`` x <- x %>%   drive_update(name = \"CHICKENS!\") #> File updated: #> • 'CHICKENS!' <id: 14mQ6f7z-FHzylAEqwpESbjjYrUJO---B>  # Update the file with new media AND new metadata x <- x %>%   drive_update(     drive_example_local(\"chicken.txt\"),     name = \"chicken-poem-again.txt\"   ) #> File updated: #> • chicken-poem-again.txt <id: 14mQ6f7z-FHzylAEqwpESbjjYrUJO---B>  # Clean up drive_rm(x) #> File deleted: #> • chicken-poem-again.txt <id: 14mQ6f7z-FHzylAEqwpESbjjYrUJO---B>"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_upload.html","id":null,"dir":"Reference","previous_headings":"","what":"Upload into a new Drive file — drive_upload","title":"Upload into a new Drive file — drive_upload","text":"Uploads local file new Drive file. update content metadata existing Drive file, use drive_update(). upload update, depending whether Drive file already exists, see drive_put().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_upload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upload into a new Drive file — drive_upload","text":"","code":"drive_upload(   media,   path = NULL,   name = NULL,   type = NULL,   ...,   overwrite = NA,   verbose = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_upload.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upload into a new Drive file — drive_upload","text":"media Character, path local file upload. path Specifies target destination new file Google Drive. Can actual path (character), file id marked as_id(), dribble. path shortcut folder, automatically resolved target folder. path given path (opposed dribble id), best explicitly indicate folder including trailing slash, since always worked context call. default, file created current user's \"Drive\" root folder. name Character, new file name specified part path. force path interpreted folder, even character lacks trailing slash. Defaults file's local name. type Character. type = NULL, MIME type automatically determined file extension, possible. source file suitable type, can request conversion Google Doc, Sheet Slides setting type document, spreadsheet, presentation, respectively. non-NULL values type pre-processed drive_mime_type(). ... Named parameters pass along Drive API. dynamic dots semantics. can affect metadata target file specifying properties Files resource via .... Read \"Request body\" section Drive API docs associated endpoint learn relevant parameters. overwrite Logical, indicating whether check pre-existing file targetted \"filepath\". quotes around \"filepath\" refer fact Drive impose 1--1 relationship filepaths files, like typical file system; read drive_get(). NA (default): Just operation, even results multiple files filepath. TRUE: Check pre-existing file filepath. zero one, move pre-existing file trash, carry . Note new file inherit properties old one, sharing publishing settings. new file ID. error thrown two pre-existing files found. FALSE: Error pre-existing file filepath. Note existence checks, based filepath, expensive operations, .e. require additional API calls. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_upload.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upload into a new Drive file — drive_upload","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_upload.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upload into a new Drive file — drive_upload","text":"","code":"# upload a csv file chicken_csv <- drive_example_local(\"chicken.csv\") %>%   drive_upload(\"chicken-upload.csv\") #> Local file: #> • /home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.csv #> Uploaded into Drive file: #> • chicken-upload.csv <id: 15-RN_uAclXqtKHUzm9QcL58O2SG7_C2F> #> With MIME type: #> • text/csv  # or convert it to a Google Sheet chicken_sheet <- drive_example_local(\"chicken.csv\") %>%   drive_upload(     name = \"chicken-sheet-upload.csv\",     type = \"spreadsheet\"   ) #> Local file: #> • /home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.csv #> Uploaded into Drive file: #> • chicken-sheet-upload <id: 1vklsLAD1vD7bFL2Y9y4slV-Qp8AORTqtADXwQKUtB7o> #> With MIME type: #> • application/vnd.google-apps.spreadsheet  # check out the new Sheet! drive_browse(chicken_sheet)  # Clean up drive_find(\"chicken.*upload\") %>% drive_rm() #> Files deleted: #> • chicken-sheet-upload <id: 1vklsLAD1vD7bFL2Y9y4slV-Qp8AORTqtADXwQKUtB7o> #> • chicken-upload.csv <id: 15-RN_uAclXqtKHUzm9QcL58O2SG7_C2F>  # Upload a file and, at the same time, star it chicken <- drive_example_local(\"chicken.jpg\") %>%   drive_upload(starred = \"true\") #> Local file: #> • /home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.jpg #> Uploaded into Drive file: #> • chicken.jpg <id: 1-dZh_rkNL4B-w9gASq2RkeCS4gi3OfPs> #> With MIME type: #> • image/jpeg  # Is is really starred? YES purrr::pluck(chicken, \"drive_resource\", 1, \"starred\") #> [1] TRUE  # Clean up drive_rm(chicken) #> File deleted: #> • chicken.jpg <id: 1-dZh_rkNL4B-w9gASq2RkeCS4gi3OfPs>  # `overwrite = FALSE` errors if something already exists at target filepath # THIS WILL ERROR! drive_create(\"name-squatter-upload\") #> Created Drive file: #> • name-squatter-upload <id: 1LNqiJgsp11eCb6-K8pUbfzCe9C-7diUm> #> With MIME type: #> • application/octet-stream drive_example_local(\"chicken.jpg\") %>%   drive_upload(     name = \"name-squatter-upload\",     overwrite = FALSE   ) #> Error in check_for_overwrite(params[[\"parents\"]], params[[\"name\"]], overwrite): 1 item already exists at the target filepath and `overwrite = #> FALSE`: #> • name-squatter-upload <id: 1LNqiJgsp11eCb6-K8pUbfzCe9C-7diUm>  # `overwrite = TRUE` moves the existing item to trash, then proceeds chicken <- drive_example_local(\"chicken.jpg\") %>%   drive_upload(     name = \"name-squatter-upload\",     overwrite = TRUE   ) #> File trashed: #> • name-squatter-upload <id: 1LNqiJgsp11eCb6-K8pUbfzCe9C-7diUm> #> Local file: #> • /home/runner/work/_temp/Library/googledrive/extdata/example_files/chicken.jpg #> Uploaded into Drive file: #> • name-squatter-upload <id: 1NP3TRzNCTqZLiXctNg7RYQ_7XXhYroSk> #> With MIME type: #> • image/jpeg  # Clean up drive_rm(chicken) #> File deleted: #> • name-squatter-upload <id: 1NP3TRzNCTqZLiXctNg7RYQ_7XXhYroSk>  if (FALSE) { # \\dontrun{ # Upload to a shared drive: #   * Shared drives are only available if your account is associated with a #     Google Workspace #   * The shared drive (or shared-drive-hosted folder) MUST be captured as a #     dribble first and provided via `path` sd <- shared_drive_get(\"Marketing\") drive_upload(\"fascinating.csv\", path = sd) } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get info on current user — drive_user","title":"Get info on current user — drive_user","text":"Reveals information user associated current token. thin wrapper around drive_about() just extracts useful information (information current user) prints nicely.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get info on current user — drive_user","text":"","code":"drive_user(verbose = deprecated())"},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get info on current user — drive_user","text":"verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get info on current user — drive_user","text":"list class drive_user.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/drive_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get info on current user — drive_user","text":"","code":"drive_user() #> Logged in as: #> • displayName: googledrive-docs@gargle-169921.iam.gserviceaccount.com #> • emailAddress: googledrive-docs@gargle-169921.iam.gserviceaccount.com  # more info is returned than is printed user <- drive_user() str(user) #> List of 6 #>  $ kind        : chr \"drive#user\" #>  $ displayName : chr \"googledrive-docs@gargle-169921.iam.gserviceaccount.com\" #>  $ photoLink   : chr \"https://lh3.googleusercontent.com/a/ACg8ocIG4HCyGaPbQ53NSBY6jFcH8mA_4VFotnEVUPuC5yFoGqwE8Q=s64\" #>  $ me          : logi TRUE #>  $ permissionId: chr \"09204227840243713330\" #>  $ emailAddress: chr \"googledrive-docs@gargle-169921.iam.gserviceaccount.com\" #>  - attr(*, \"class\")= chr [1:2] \"drive_user\" \"list\""},{"path":"https://googledrive.tidyverse.org/dev/reference/expose.html","id":null,"dir":"Reference","previous_headings":"","what":"An expose object — expose","title":"An expose object — expose","text":"expose() returns sentinel object, similar spirit NULL, tells calling function return internal data structure. googledrive stores lot information Drive API, MIME types, etc., internally exploits helper functions, like drive_mime_type(), drive_fields(), drive_endpoints(), etc. use objects provide nice defaults, check input validity, lookup something cryptic, like MIME type, based something friendlier, like file extension. Pass expose() function want inspect internal object, full glory. inspired waiver() object ggplot2.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/expose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An expose object — expose","text":"","code":"expose()"},{"path":"https://googledrive.tidyverse.org/dev/reference/expose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An expose object — expose","text":"","code":"drive_mime_type(expose()) #> # A tibble: 78 × 5 #>    mime_type                          ext   description human_type default #>    <chr>                              <chr> <chr>       <chr>      <lgl>   #>  1 application/epub+zip               NA    NA          NA         NA      #>  2 application/msword                 doc   NA          doc        TRUE    #>  3 application/msword                 dot   NA          dot        FALSE   #>  4 application/pdf                    pdf   NA          pdf        TRUE    #>  5 application/rtf                    rtf   NA          rtf        TRUE    #>  6 application/vnd.google-apps.audio  NA    NA          audio      NA      #>  7 application/vnd.google-apps.docum… NA    Google Docs document   NA      #>  8 application/vnd.google-apps.drawi… NA    Google Dra… drawing    NA      #>  9 application/vnd.google-apps.drive… NA    3rd party … drive-sdk  NA      #> 10 application/vnd.google-apps.file   NA    Google Dri… file       NA      #> # ℹ 68 more rows drive_fields(expose()) #> # A tibble: 55 × 2 #>    name                         desc                                       #>    <chr>                        <chr>                                      #>  1 appProperties                \"A collection of arbitrary key-value pair… #>  2 capabilities                 \"Capabilities the current user has on thi… #>  3 contentHints                 \"Additional information about the content… #>  4 copyRequiresWriterPermission \"Whether the options to copy, print, or d… #>  5 createdTime                  \"The time at which the file was created (… #>  6 description                  \"A short description of the file.\"         #>  7 driveId                      \"ID of the shared drive the file resides … #>  8 explicitlyTrashed            \"Whether the file has been explicitly tra… #>  9 exportLinks                  \"Links for exporting Google Docs to speci… #> 10 fileExtension                \"The final component of fullFileExtension… #> # ℹ 45 more rows"},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"googledrive configuration — googledrive-configuration","title":"googledrive configuration — googledrive-configuration","text":"aspects googledrive behaviour can controlled via option.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"googledrive configuration — googledrive-configuration","text":"","code":"local_drive_quiet(env = parent.frame())  with_drive_quiet(code)"},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"googledrive configuration — googledrive-configuration","text":"env environment use scoping code Code execute quietly","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-configuration.html","id":"auth","dir":"Reference","previous_headings":"","what":"Auth","title":"googledrive configuration — googledrive-configuration","text":"Read googledrive's main auth function, drive_auth(). powered gargle package, consults several options: Default Google user , precisely, email: see gargle::gargle_oauth_email() Whether cache OAuth tokens: see gargle::gargle_oauth_cache() Whether prefer \"--band\" auth: see gargle::gargle_oob_default() Application Default Credentials: see gargle::credentials_app_default()","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-configuration.html","id":"messages","dir":"Reference","previous_headings":"","what":"Messages","title":"googledrive configuration — googledrive-configuration","text":"googledrive_quiet option can used suppress messages googledrive. default, googledrive always messages, .e. quiet. Set googledrive_quiet TRUE suppress messages, one means, order decreasing scope: Put options(googledrive_quiet = TRUE) start-file, .Rprofile, top R script Use local_drive_quiet() silence googledrive specific scope   Use with_drive_quiet() run small bit code silently   local_drive_quiet() with_drive_quiet() follow conventions withr package (https://withr.r-lib.org).","code":"foo <- function() {   ...   local_drive_quiet()   drive_this(...)   drive_that(...)   ... } with_drive_quiet(   drive_something(...) )"},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-configuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"googledrive configuration — googledrive-configuration","text":"","code":"# message: \"Created Drive file\" (x <- drive_create(\"drive-quiet-demo\", type = \"document\")) #> Created Drive file: #> • drive-quiet-demo <id: 1TBkiAUV1fJnF9qSPcBswhtDiNY_sjQY7AoKLCl1cCSs> #> With MIME type: #> • application/vnd.google-apps.document #> # A dribble: 1 × 3 #>   name             id       drive_resource    #>   <chr>            <drv_id> <list>            #> 1 drive-quiet-demo 1TBkiAU… <named list [35]>  # message: \"File updated\" x <- drive_update(x, starred = TRUE) #> File updated: #> • drive-quiet-demo <id: 1TBkiAUV1fJnF9qSPcBswhtDiNY_sjQY7AoKLCl1cCSs> drive_reveal(x, \"starred\") #> # A dribble: 1 × 4 #>   name             starred id       drive_resource    #>   <chr>            <lgl>   <drv_id> <list>            #> 1 drive-quiet-demo TRUE    1TBkiAU… <named list [36]>  # suppress messages for a small amount of code with_drive_quiet(   x <- drive_update(x, name = \"drive-quiet-works\") ) x$name #> [1] \"drive-quiet-works\"  # message: \"File updated\" x <- drive_update(x, media = drive_example_local(\"chicken.txt\")) #> File updated: #> • drive-quiet-works <id: 1TBkiAUV1fJnF9qSPcBswhtDiNY_sjQY7AoKLCl1cCSs>  # suppress messages within a specific scope, e.g. function unstar <- function(y) {   local_drive_quiet()   drive_update(y, starred = FALSE) } x <- unstar(x) drive_reveal(x, \"starred\") #> # A dribble: 1 × 4 #>   name              starred id       drive_resource    #>   <chr>             <lgl>   <drv_id> <list>            #> 1 drive-quiet-works FALSE   1TBkiAU… <named list [36]>  # Clean up drive_rm(x) #> File deleted: #> • drive-quiet-works <id: 1TBkiAUV1fJnF9qSPcBswhtDiNY_sjQY7AoKLCl1cCSs>"},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated googledrive functions — googledrive-deprecated","text":"","code":"drive_auth_config(active, app, path, api_key)  drive_oauth_app()  drive_example(path = NULL)"},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-deprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated googledrive functions — googledrive-deprecated","text":"app Replaced client argument. path JSON downloaded Google Cloud Console, containing client id secret, one forms supported txt argument jsonlite::fromJSON() (typically, file path JSON string). api_key API key.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-deprecated.html","id":"drive-auth-config-","dir":"Reference","previous_headings":"","what":"drive_auth_config()","title":"Deprecated googledrive functions — googledrive-deprecated","text":"function defunct. Use drive_auth_configure() configure OAuth client API key. Use drive_deauth() go de-authorized state. Use drive_oauth_client() retrieve user-configured client, exists. Use drive_api_key() retrieve user-configured API key, exists.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-deprecated.html","id":"drive-oauth-app-","dir":"Reference","previous_headings":"","what":"drive_oauth_app()","title":"Deprecated googledrive functions — googledrive-deprecated","text":"light new gargle::gargle_oauth_client() constructor class name, drive_oauth_app() replaced drive_oauth_client().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-deprecated.html","id":"drive-example-","dir":"Reference","previous_headings":"","what":"drive_example()","title":"Deprecated googledrive functions — googledrive-deprecated","text":"function defunct. Access example files drive_examples_local(), drive_example_local(), drive_examples_remote(), drive_example_remote().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-package.html","id":null,"dir":"Reference","previous_headings":"","what":"googledrive: An Interface to Google Drive — googledrive-package","title":"googledrive: An Interface to Google Drive — googledrive-package","text":"googledrive allows interact files Google Drive R. googledrive::drive_find(n_max = 50) lists 50 files see Drive. can expect sent browser , authenticate authorize googledrive package deal behalf Google Drive. functions begin prefix drive_. goal allow Drive access feels similar Unix file system utilities, e.g., find, ls, mv, cp, mkdir, rm. metadata one Drive files held dribble, \"Drive tibble\". data frame one row per file. dribble returned (accepted) almost every function googledrive. designed give people want (file name), track API wants (file id), hold metadata needed general file operations. googledrive \"pipe-friendly\" , fact, re-exports %>%, require use. Please see googledrive website full documentation: https://googledrive.tidyverse.org/index.html addition function-specific help, several articles indexed : Article index","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/googledrive-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"googledrive: An Interface to Google Drive — googledrive-package","text":"Maintainer: Jennifer Bryan jenny@posit.co (ORCID) Authors: Lucy D'Agostino McGowan contributors: Posit Software, PBC [copyright holder, funder]","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://googledrive.tidyverse.org/dev/reference/request_generate.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a request for the Google Drive API — request_generate","title":"Build a request for the Google Drive API — request_generate","text":"Build request, using knowledge Drive v3 API Discovery Document (https://www.googleapis.com/discovery/v1/apis/drive/v3/rest). users , instead, use higher-level wrappers facilitate common tasks, uploading downloading Drive files. functions intended internal use programming around Drive API. request_generate() lets provide bare minimum input. takes nickname endpoint : Uses API spec look path, method, base URL. Checks params validity completeness respect endpoint. Separates parameters destined body, query, URL endpoint substitution (also enacted). Adds API key query token = NULL. Adds supportsAllDrives = TRUE query endpoint requires.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/request_generate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a request for the Google Drive API — request_generate","text":"","code":"request_generate(   endpoint = character(),   params = list(),   key = NULL,   token = drive_token() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/request_generate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a request for the Google Drive API — request_generate","text":"endpoint Character. Nickname one selected Drive v3 API endpoints built googledrive. Learn drive_endpoints(). params Named list. Parameters destined endpoint URL substitution, query, body. key API key. Needed requests contain token. need API key absence token explained Google's document \"Credentials, access, security, identity\" (https://support.google.com/googleapi/answer/6158857?hl=en&ref_topic=7013279). order precedence, sources consulted: formal key argument, key parameter params, user-configured API key fetched via drive_api_key(), built-key shipped googledrive. See drive_auth_configure() details user-configured key. token Drive token. Set NULL suppress inclusion token. Note , auth de-activated via drive_deauth(), drive_token() actually return NULL.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/request_generate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a request for the Google Drive API — request_generate","text":"list() Components method, path, query, body, token, url, suitable input request_make().","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/request_generate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a request for the Google Drive API — request_generate","text":"","code":"req <- request_generate(   \"drive.files.get\",   list(fileId = \"abc\"),   token = drive_token() ) req #> $method #> [1] \"GET\" #>  #> $url #> [1] \"https://www.googleapis.com/drive/v3/files/abc?supportsAllDrives=TRUE\" #>  #> $body #> named list() #>  #> $token #> <request> #> Auth token: TokenServiceAccount #>"},{"path":"https://googledrive.tidyverse.org/dev/reference/request_make.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a request for the Google Drive v3 API — request_make","title":"Make a request for the Google Drive v3 API — request_make","text":"Low-level functions execute one Drive API requests , perhaps, process response(s). users , instead, use higher-level wrappers facilitate common tasks, uploading downloading Drive files. functions intended internal use programming around Drive API. Three functions documented : request_make() bare minimum: calls gargle::request_make(), adding googledrive user agent. Typically input created request_generate() output processed gargle::response_process(). do_request() simply gargle::response_process(request_make(x, ...)). exists make do_paginated_request() felt weird make equivalent single request. do_paginated_request() executes input request page traversal. impossible separate paginated requests \"make request\" step \"process request\" step, token next page must extracted content current page. Therefore function returns list processed responses, one per page.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/request_make.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a request for the Google Drive v3 API — request_make","text":"","code":"request_make(x, ...)  do_request(x, ...)  do_paginated_request(   x,   ...,   n_max = Inf,   n = function(res) 1,   verbose = deprecated() )"},{"path":"https://googledrive.tidyverse.org/dev/reference/request_make.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a request for the Google Drive v3 API — request_make","text":"x List, holding components HTTP request, presumably created request_generate() contain method, url, body, token. ... Optional arguments passed HTTP method. n_max Maximum number items return. Defaults Inf, .e. limit keep making requests get items. n Function computes number items one response page. default function always returns 1 therefore treats page item. know structure response, can pass another function count threshhold, example, number files comments. verbose logical argument individual googledrive functions deprecated. globally suppress googledrive messaging, use options(googledrive_quiet = TRUE) (default behaviour emit informational messages). suppress messaging limited way, use helpers local_drive_quiet() with_drive_quiet().","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/request_make.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a request for the Google Drive v3 API — request_make","text":"request_make(): Object class response httr. do_request(): List representing content returned single request. do_paginated_request(): List lists, representing returned content, one component per page.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/request_make.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a request for the Google Drive v3 API — request_make","text":"","code":"if (FALSE) { # \\dontrun{ # build a request for an endpoint that is: #   * paginated #   * NOT privileged in googledrive, i.e. not covered by request_generate() # \"comments\" are a great example # https://developers.google.com/drive/v3/reference/comments # # Practice with a target file with > 2 comments # Note that we request 2 items (comments) per page req <- gargle::request_build(   path = \"drive/v3/files/{fileId}/comments\",   method = \"GET\",   params = list(     fileId = \"your-file-id-goes-here\",     fields = \"*\",     pageSize = 2   ),   token = googledrive::drive_token() ) # make the paginated request, but cap it at 1 page # should get back exactly two comments do_paginated_request(req, n_max = 1) } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new shared drive — shared_drive_create","title":"Create a new shared drive — shared_drive_create","text":"shared drive supports files owned organization rather individual user. Shared drives follow different sharing ownership models specific user's \"Drive\". Shared drives successors earlier concept Team Drives. Learn shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new shared drive — shared_drive_create","text":"","code":"shared_drive_create(name)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new shared drive — shared_drive_create","text":"name Character. Name new shared drive. Must non-empty entirely whitespace.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new shared drive — shared_drive_create","text":"object class dribble, tibble one row per shared drive.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new shared drive — shared_drive_create","text":"","code":"if (FALSE) { # \\dontrun{ shared_drive_create(\"my-awesome-shared-drive\")  # Clean up shared_drive_rm(\"my-awesome-shared-drive\") } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find shared drives — shared_drive_find","title":"Find shared drives — shared_drive_find","text":"closest googledrive function get visiting https://drive.google.com clicking \"Shared drives\". shared drive supports files owned organization rather individual user. Shared drives follow different sharing ownership models specific user's \"Drive\". Shared drives successors earlier concept Team Drives. Learn shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find shared drives — shared_drive_find","text":"","code":"shared_drive_find(pattern = NULL, n_max = Inf, ...)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find shared drives — shared_drive_find","text":"pattern Character. provided, items whose names match regular expression returned. implemented locally results returned API. n_max Integer. upper bound number items return. applies results requested API, may filtered locally, via pattern argument. ... parameters pass along request, pageSize useDomainAdminAccess.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find shared drives — shared_drive_find","text":"object class dribble, tibble one row per shared drive.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_find.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find shared drives — shared_drive_find","text":"","code":"if (FALSE) { # \\dontrun{ shared_drive_find() } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get shared drives by name or id — shared_drive_get","title":"Get shared drives by name or id — shared_drive_get","text":"Retrieve metadata shared drives specified name id. Note Google Drive behave like local file system: can get zero, one, shared drives back name! Shared drive names need unique. shared drive supports files owned organization rather individual user. Shared drives follow different sharing ownership models specific user's \"Drive\". Shared drives successors earlier concept Team Drives. Learn shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get shared drives by name or id — shared_drive_get","text":"","code":"shared_drive_get(name = NULL, id = NULL)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get shared drives by name or id — shared_drive_get","text":"name Character vector names. character vector marked as_id() treated provided via id argument. id Character vector shared drive ids URLs (first processed as_id()). name id non-NULL, id silently ignored.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get shared drives by name or id — shared_drive_get","text":"object class dribble, tibble one row per shared drive.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_get.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get shared drives by name or id — shared_drive_get","text":"","code":"if (FALSE) { # \\dontrun{ shared_drive_get(\"my-awesome-shared-drive\") shared_drive_get(c(\"apple\", \"orange\", \"banana\")) shared_drive_get(as_id(\"KCmiHLXUk9PVA-0AJNG\")) shared_drive_get(as_id(\"https://drive.google.com/drive/u/0/folders/KCmiHLXUk9PVA-0AJNG\")) shared_drive_get(id = \"KCmiHLXUk9PVA-0AJNG\") shared_drive_get(id = \"https://drive.google.com/drive/u/0/folders/KCmiHLXUk9PVA-0AJNG\") } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_rm.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete shared drives — shared_drive_rm","title":"Delete shared drives — shared_drive_rm","text":"shared drive supports files owned organization rather individual user. Shared drives follow different sharing ownership models specific user's \"Drive\". Shared drives successors earlier concept Team Drives. Learn shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_rm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete shared drives — shared_drive_rm","text":"","code":"shared_drive_rm(drive = NULL)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_rm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete shared drives — shared_drive_rm","text":"drive Anything identifies shared drive(s) interest. Can character vector names, character vector file ids URLs marked as_id(), dribble consisting shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_rm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete shared drives — shared_drive_rm","text":"Logical vector, indicating whether delete succeeded.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_rm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Delete shared drives — shared_drive_rm","text":"","code":"if (FALSE) { # \\dontrun{ # Create shared drives to remove in various ways shared_drive_create(\"testdrive-01\") sd02 <- shared_drive_create(\"testdrive-02\") shared_drive_create(\"testdrive-03\") sd04 <- shared_drive_create(\"testdrive-04\")  # remove by name shared_drive_rm(\"testdrive-01\") # remove by id shared_drive_rm(as_id(sd02)) # remove by URL (or, rather, id found in URL) shared_drive_rm(as_id(\"https://drive.google.com/drive/u/0/folders/Q5DqUk9PVA\")) # remove by dribble shared_drive_rm(sd04) } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a shared drive — shared_drive_update","title":"Update a shared drive — shared_drive_update","text":"Update metadata existing shared drive, e.g. background image theme. shared drive supports files owned organization rather individual user. Shared drives follow different sharing ownership models specific user's \"Drive\". Shared drives successors earlier concept Team Drives. Learn shared drives.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a shared drive — shared_drive_update","text":"","code":"shared_drive_update(shared_drive, ...)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a shared drive — shared_drive_update","text":"shared_drive Anything identifies one specific shared drive: name, id URL marked as_id(), dribble. value provided shared_drive pre-processed as_shared_drive(). Read shared drives. ... Properties set name = value form. See \"Request body\" section Drive API docs endpoint.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a shared drive — shared_drive_update","text":"object class dribble, tibble one row per shared drive.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drive_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update a shared drive — shared_drive_update","text":"","code":"if (FALSE) { # \\dontrun{ # create a shared drive sd <- shared_drive_create(\"I love themes!\")  # see the themes available to you themes <- drive_about()$driveThemes purrr::map_chr(themes, \"id\")  # cycle through various themes for this shared drive sd <- shared_drive_update(sd, themeId = \"bok_choy\") sd <- shared_drive_update(sd, themeId = \"cocktails\")  # Clean up shared_drive_rm(sd) } # }"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drives.html","id":null,"dir":"Reference","previous_headings":"","what":"Access shared drives — shared_drives","title":"Access shared drives — shared_drives","text":"shared drive supports files owned organization rather individual user. Shared drives follow different sharing ownership models specific user's \"Drive\". Shared drives successors earlier concept Team Drives. capture shared drive files/folders live shared drive downstream use: shared_drive_find() shared_drive_get() return dribble metadata shared drives . need order use shared drive certain file operations. example, can specify shared drive parent folder via path argument upload, move, copy, etc. context, id shared drive functions like id top-level root folder. drive_find() drive_get() return dribble metadata files, including folders. can directed search files shared drives using optional arguments shared_drive corpus (documented ). Regard functions mentioned official \"port entry\" working shared drives. Use functions capture target(s) dribble pass along googledrive functions. flexibility refer files name path apply broadly shared drives. always good idea get things dribble early, shared drives often required.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drives.html","id":"specific-shared-drive","dir":"Reference","previous_headings":"","what":"Specific shared drive","title":"Access shared drives — shared_drives","text":"search one specific shared drive, pass name, marked id, dribble shared_drive somewhere call, like :   value provided shared_drive pre-processed as_shared_drive().","code":"drive_find(..., shared_drive = \"i_am_a_shared_drive_name\") drive_find(..., shared_drive = as_id(\"i_am_a_shared_drive_id\")) drive_find(..., shared_drive = i_am_a_shared_drive_dribble)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drives.html","id":"other-collections","dir":"Reference","previous_headings":"","what":"Other collections","title":"Access shared drives — shared_drives","text":"search collections, pass corpus parameter somewhere call, like :   Possible values corpus mean: \"user\": Queries files user accessed, including shared drive Drive files. \"drive\": Queries items shared drive specified via shared_drive. googledrive automatically fills whenever shared_drive NULL. \"allDrives\": Queries files user accessed shared drives member. Note response may include incompleteSearch : true, indicating corpora searched request (currently, googledrive surface ). Prefer \"user\" \"drive\" \"allDrives\" efficiency. \"domain\": Queries files shared domain, including shared drive Drive files.","code":"drive_find(..., corpus = \"user\") drive_find(..., corpus = \"allDrives\") drive_find(..., corpus = \"domain\")"},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drives.html","id":"google-blogs-and-docs","dir":"Reference","previous_headings":"","what":"Google blogs and docs","title":"Access shared drives — shared_drives","text":"best official Google reading shared drives: Team Drives renamed shared drives Google Workspace blog Upcoming changes Google Drive API Google Picker API Google Cloud blog https://developers.google.com/drive/api/v3/-shareddrives https://developers.google.com/drive/api/v3/shared-drives-diffs Get started shared drives: https://support.google.com//users/answer/9310351 Google Workspace Learning Center Best practices shared drives: https://support.google.com//users/answer/9310156 Google Workspace Learning Center","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shared_drives.html","id":"api-docs","dir":"Reference","previous_headings":"","what":"API docs","title":"Access shared drives — shared_drives","text":"googledrive implements shared drive support outlined : https://developers.google.com/drive/api/v3/enable-shareddrives Users need know , details curious. extra information needed search shared drives consists following query parameters: corpora: search? Formed googledrive's corpus argument. driveId: id specific shared drive. allowed – also absolutely required – corpora = \"drive\". user specifies shared_drive, googledrive sends id also infers corpora set \"drive\". includeItemsFromAllDrives: want see shared drive items? Obviously, TRUE googledrive sends whenever shared drive parameters detected. supportsAllDrives: sending application (googledrive, case) know shared drive? Obviously, TRUE googledrive sends applicable endpoints, time.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a shortcut to a Drive file — shortcut_create","title":"Create a shortcut to a Drive file — shortcut_create","text":"Creates shortcut target Drive file, folder. Drive shortcut functions like symbolic \"soft\" link primarily useful creating specific Drive user experience browser, .e. make Drive file folder appear 1 place. Shortcuts relatively new feature Drive; introduced Drive stopped allowing file 1 parent folder.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a shortcut to a Drive file — shortcut_create","text":"","code":"shortcut_create(file, path = NULL, name = NULL, overwrite = NA)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a shortcut to a Drive file — shortcut_create","text":"file Something identifies file interest Google Drive. Can name path, file id URL marked as_id(), dribble. path Target destination new shortcut, .e. folder shared drive. Can given actual path (character), file id URL marked as_id(), dribble. Defaults \"Drive\" root folder. path shortcut folder, automatically resolved target folder. name Character, new shortcut name specified part path. force path interpreted folder, even character lacks trailing slash. default, shortcut starts name target file. consequence, want use overwrite = TRUE overwrite = FALSE, must explicitly specify shortcut's name. overwrite Logical, indicating whether check pre-existing file targetted \"filepath\". quotes around \"filepath\" refer fact Drive impose 1--1 relationship filepaths files, like typical file system; read drive_get(). NA (default): Just operation, even results multiple files filepath. TRUE: Check pre-existing file filepath. zero one, move pre-existing file trash, carry . Note new file inherit properties old one, sharing publishing settings. new file ID. error thrown two pre-existing files found. FALSE: Error pre-existing file filepath. Note existence checks, based filepath, expensive operations, .e. require additional API calls.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a shortcut to a Drive file — shortcut_create","text":"object class dribble, tibble one row per file.","code":""},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_create.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a shortcut to a Drive file — shortcut_create","text":"","code":"# Target one of the official example files (src_file <- drive_example_remote(\"chicken_sheet\")) #> # A dribble: 1 × 3 #>   name          id       drive_resource    #>   <chr>         <drv_id> <list>            #> 1 chicken_sheet 1SeFXkr… <named list [30]>  # Create a shortcut in the default location with the default name sc1 <- shortcut_create(src_file) #> Created Drive file: #> • chicken_sheet <id: 1HtsZ9xZueq17eIvywgyZbcW2BLAcO4vK> #> With MIME type: #> • application/vnd.google-apps.shortcut # This shortcut could now be moved, renamed, etc.  # Create a shortcut in the default location with a custom name sc2 <- src_file %>%   shortcut_create(name = \"chicken_sheet_second_shortcut\") #> Created Drive file: #> • chicken_sheet_second_shortcut <id: 1Dj73i9ssr02upie7UAUX_0Dx5Z8kLl8l> #> With MIME type: #> • application/vnd.google-apps.shortcut  # Create a folder, then put a shortcut there, with default name folder <- drive_mkdir(\"chicken_sheet_shortcut_folder\") #> Created Drive file: #> • chicken_sheet_shortcut_folder <id: 18tTrH3_kikh6SgLnmcEDdsPNE563x3pW> #> With MIME type: #> • application/vnd.google-apps.folder sc3 <- src_file %>%   shortcut_create(folder) #> Created Drive file: #> • chicken_sheet <id: 1-J0GOcxETjvkVZDoPP722PKAqd8Go4yY> #> With MIME type: #> • application/vnd.google-apps.shortcut  # Look at all these shortcuts (dat <- drive_find(\"chicken_sheet\", type = \"shortcut\")) #> # A dribble: 3 × 3 #>   name                          id       drive_resource    #>   <chr>                         <drv_id> <list>            #> 1 chicken_sheet                 1-J0GOc… <named list [32]> #> 2 chicken_sheet_second_shortcut 1Dj73i9… <named list [32]> #> 3 chicken_sheet                 1HtsZ9x… <named list [32]>  # Confirm the shortcuts all target the original file dat <- dat %>%   drive_reveal(\"shortcut_details\") purrr::map_chr(dat$shortcut_details, \"targetId\") #> [1] \"1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU\" #> [2] \"1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU\" #> [3] \"1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU\" as_id(src_file) #> <drive_id[1]> #> [1] 1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU  # Clean up drive_rm(sc1, sc2, sc3, folder) #> Files deleted: #> • chicken_sheet <id: 1HtsZ9xZueq17eIvywgyZbcW2BLAcO4vK> #> • chicken_sheet_second_shortcut <id: 1Dj73i9ssr02upie7UAUX_0Dx5Z8kLl8l> #> • chicken_sheet <id: 1-J0GOcxETjvkVZDoPP722PKAqd8Go4yY> #> • chicken_sheet_shortcut_folder <id: 18tTrH3_kikh6SgLnmcEDdsPNE563x3pW>"},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_resolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve shortcuts to their targets — shortcut_resolve","title":"Resolve shortcuts to their targets — shortcut_resolve","text":"Retrieves metadata Drive file shortcut refers , .e. shortcut's target. returned dribble usual columns (name, id, drive_resource), refer target. also include columns name_shortcut id_shortcut, refer original shortcut. 3 possible scenarios: file shortcut user can drive_get() target. simple well. file shortcut, drive_get() fails target. can happen user can see shortcut, read access target. can also happen target trashed deleted. cases, target's metadata, except id, missing. Call drive_get() problematic id see specific error. file shortcut. name_shortcut id_shortcut NA.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_resolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve shortcuts to their targets — shortcut_resolve","text":"","code":"shortcut_resolve(file)"},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_resolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve shortcuts to their targets — shortcut_resolve","text":"file Something identifies file(s) interest Google Drive. Can character vector names/paths, character vector file ids URLs marked as_id(), dribble.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_resolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve shortcuts to their targets — shortcut_resolve","text":"object class dribble, tibble one row per file. Extra columns name_shortcut id_shortcut refer original shortcut.","code":""},{"path":"https://googledrive.tidyverse.org/dev/reference/shortcut_resolve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve shortcuts to their targets — shortcut_resolve","text":"","code":"# Create a file to make a shortcut to file <- drive_example_remote(\"chicken_sheet\") %>%   drive_cp(name = \"chicken-sheet-for-shortcut\") #> Original file: #> • chicken_sheet <id: 1SeFXkr3XdzPSuWauzPdN-XnaryOYmZ7sFiUF5t-wSVU> #> Copied to file: #> • chicken-sheet-for-shortcut #>   <id: 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ>  # Create a shortcut sc1 <- file %>%   shortcut_create(name = \"shortcut-1\") #> Created Drive file: #> • shortcut-1 <id: 1DsbAYNaRD7IG8VGlFcZlSWjz0vGSGB1g> #> With MIME type: #> • application/vnd.google-apps.shortcut  # Create a second shortcut by copying the first sc1 <- sc1 %>%   drive_cp(name = \"shortcut-2\") #> Original file: #> • shortcut-1 <id: 1DsbAYNaRD7IG8VGlFcZlSWjz0vGSGB1g> #> Copied to file: #> • shortcut-2 <id: 1GOvgVvGyNGDtK1_qZb92Op8-HBE0U66e>  # Get the shortcuts (sc_dat <- drive_find(\"-[12]$\", type = \"shortcut\")) #> # A dribble: 2 × 3 #>   name       id                                drive_resource    #>   <chr>      <drv_id>                          <list>            #> 1 shortcut-2 1GOvgVvGyNGDtK1_qZb92Op8-HBE0U66e <named list [32]> #> 2 shortcut-1 1DsbAYNaRD7IG8VGlFcZlSWjz0vGSGB1g <named list [32]>  # Resolve them (resolved <- shortcut_resolve(sc_dat)) #> ℹ Resolved 2 shortcuts found in 2 files: #> • shortcut-2 <id: 1GOvgVvGyNGDtK1_qZb92Op8-HBE0U66e> -> #>   chicken-sheet-for-shortcut #>   <id: 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ> #> • shortcut-1 <id: 1DsbAYNaRD7IG8VGlFcZlSWjz0vGSGB1g> -> #>   chicken-sheet-for-shortcut #>   <id: 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ> #> # A dribble: 2 × 5 #>   name                   id       name_shortcut id_shortcut drive_resource #>   <chr>                  <drv_id> <chr>         <drv_id>    <list>         #> 1 chicken-sheet-for-sho… 1OjS2dB… shortcut-2    1GOvgVv…    <named list>   #> 2 chicken-sheet-for-sho… 1OjS2dB… shortcut-1    1DsbAYN…    <named list>    resolved$id #> <drive_id[2]> #> [1] 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ #> [2] 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ file$id #> <drive_id[1]> #> [1] 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ  # Delete the target file drive_rm(file) #> File deleted: #> • chicken-sheet-for-shortcut #>   <id: 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ>  # (Try to) resolve the shortcuts again shortcut_resolve(sc_dat) #> ℹ Resolved 0 of 2 shortcuts found in 2 files: #> • shortcut-2 <id: 1GOvgVvGyNGDtK1_qZb92Op8-HBE0U66e> -> NA #>   <id: 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ> #> • shortcut-1 <id: 1DsbAYNaRD7IG8VGlFcZlSWjz0vGSGB1g> -> NA #>   <id: 1OjS2dBT5GgO_NEtOG5ttFOJW6WmwPckf7RvdbGukVgQ> #> # A dribble: 2 × 5 #>   name  id       name_shortcut id_shortcut drive_resource   #>   <chr> <drv_id> <chr>         <drv_id>    <list>           #> 1 NA    1OjS2dB… shortcut-2    1GOvgVv…    <named list [3]> #> 2 NA    1OjS2dB… shortcut-1    1DsbAYN…    <named list [3]> # No error, but resolution is unsuccessful due to non-existent target  # Clean up drive_rm(sc_dat) #> Files deleted: #> • shortcut-2 <id: 1GOvgVvGyNGDtK1_qZb92Op8-HBE0U66e> #> • shortcut-1 <id: 1DsbAYNaRD7IG8VGlFcZlSWjz0vGSGB1g>"},{"path":[]},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-211","dir":"Changelog","previous_headings":"","what":"googledrive 2.1.1","title":"googledrive 2.1.1","text":"CRAN release: 2023-06-11 drive_auth(subject =) new argument can used drive_auth(path =), .e. using service account. path subject arguments ultimately processed gargle::credentials_service_account() support use service account impersonate normal user (#413). requests now route gargle::request_retry() (#380). drive_scopes() new function access scopes relevant Drive API. called without arguments, drive_scopes() returns named vector scopes, names associated short aliases. drive_scopes() can also called character vector; element ’s recognized short alias replaced associated full scope (#430). Various internal changes sync gargle v1.5.0.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-210","dir":"Changelog","previous_headings":"","what":"googledrive 2.1.0","title":"googledrive 2.1.0","text":"CRAN release: 2023-03-22","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"syncing-up-with-gargle-2-1-0","dir":"Changelog","previous_headings":"","what":"Syncing up with gargle","title":"googledrive 2.1.0","text":"Version 1.3.0 gargle introduced changes around OAuth googledrive syncing : drive_oauth_client() new function replace now-deprecated drive_oauth_app(). new client argument drive_auth_configure() replaces now-deprecated app argument. documentation drive_auth_configure() emphasizes preferred way “bring OAuth client” providing JSON downloaded Google Developers Console.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"shared-drives-2-1-0","dir":"Changelog","previous_headings":"","what":"Shared drives","title":"googledrive 2.1.0","text":"drive_ls(recursive = TRUE) now works target folder shared drive (#265, @Falnesio). drive_mv() longer errors “shared drive item must exactly one parent.” moving file shared drive (#377).","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"other-2-1-0","dir":"Changelog","previous_headings":"","what":"Other","title":"googledrive 2.1.0","text":"drive_auth() now warns user specifies email path, almost always error (#420). drive_auth_config() deprecated googledrive 1.0.0 (released 2019-08-19) now defunct. drive_example() deprecated googledrive 2.0.0 (released 2021-07-08) now defunct.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-200","dir":"Changelog","previous_headings":"","what":"googledrive 2.0.0","title":"googledrive 2.0.0","text":"CRAN release: 2021-07-08","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"team-drives-are-dead-long-live-shared-drives-2-0-0","dir":"Changelog","previous_headings":"","what":"Team Drives are dead! Long live shared drives!","title":"googledrive 2.0.0","text":"Google Drive rebranded Team Drives shared drives. anyone can Drive, shared drives available Google Workspace (previously known G Suite). Shared drives files within owned team/organization, opposed individual. googledrive, team_drive_*() functions deprecated, favor shared_drive_*() successors. Likewise, team_drive argument deprecated, favor new shared_drive argument. terms used describe collections search also changed slightly, \"allDrives\" replacing \"\". applies corpus argument drive_find() drive_get(). learn : Team Drives renamed shared drives Google Workspace blog Upcoming changes Google Drive API Google Picker API Google Cloud blog","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"single-parenting-and-shortcuts-2-0-0","dir":"Changelog","previous_headings":"","what":"Single parenting and shortcuts","title":"googledrive 2.0.0","text":"2020-09-30, Drive longer allows file placed multiple folders; going forward, every file exactly 1 parent folder. many cases parent just top-level root folder “Drive” shared drive. change accompanied introduction file shortcuts, function much like symbolic “soft” links. Shortcuts new way make file appear one place , said another way, new way one Drive file associated one Drive filepath. shortcut special type Drive file, characterized application/vnd.google-apps.shortcut MIME type. can make shortcut Drive file, including Drive folder. Drive migrating existing files one-parent state, .e., “single parenting” . Drive selects suitable parent folder keep, “based hierarchy’s properties”, replaces parent-child relationships shortcut. New functions related shortcuts: shortcut_create(): creates shortcut specific Drive file (folder). shortcut_resolve(): resolves shortcut target, .e. file refers . Works multiple files , .e. input can mix shortcuts non-shortcuts. non-shortcuts passed shortcuts replaced targets. interacts googledrive’s support specifying file filepath: Main principle: shortcuts first-class Drive files assume users need manipulate googledrive. general, automatic resolution target file. drive_reveal(= \"path\") returns canonical path, .e. shortcuts among non-terminal “folder” parts returned path. drive_get(path = \"foo/\") can retrieve folder named “foo” shortcut named “foo”, whose target folder. drive_ls(path, ...) drive_create(name, path, ...) convenience wrappers drive_mkdir() shortcut_create() drive_cp(file, path, ...) drive_mv(file, path, ...) drive_upload(media, path, ...) close friend drive_put() reading changes Drive folder model: Simplifying Google Drive’s folder structure sharing models Single-parenting behavior changes Create shortcut Drive file Find files & folders Google Drive shortcuts: https://support.google.com/drive/answer/9700156","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"user-interface-2-0-0","dir":"Changelog","previous_headings":"","what":"User interface","title":"googledrive 2.0.0","text":"user interface gotten stylish, thanks cli package (https://cli.r-lib.org). informational messages, warnings, errors now emitted via cli, uses rlang’s condition functions --hood. googledrive_quiet new option suppress informational messages googledrive. Unless ’s explicitly set TRUE, default message. verbose argument drive_*() functions deprecated removed future release. current release, verbose = FALSE still honored, generates warning. local_drive_quiet() with_drive_quiet() withr-style convenience helpers setting googledrive_quiet = TRUE limited scope.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"other-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"googledrive 2.0.0","text":"now share variety world-readable, persistent example files Drive, use examples documentation. remote example files complement local example files already included googledrive. drive_example() deprecated favor accessors example files: Plural forms:drive_examples_remote(), drive_examples_local() Singular forms: drive_example_remote(), drive_example_local() drive_read_string() drive_read_raw() new functions read content Drive file directly R, skipping step downloading local file (#81). drive_reveal(= \"property_name\") now works property found file metadata stored drive_resource column. new column also simplified cases now, e.g. character logical. property_name suggests ’s date-time, return POSIXct. ’ve modernized mechanisms dribble class () retained various data frame operations. boils updating adding methods used base, dplyr, pillar/tibble, vctrs packages. focus compatibility dplyr >= 1.0.0, released year ago. googledrive Suggests dplyr, really means dribble manipulation via dplyr now works best dplyr >= 1.0.0. drive_id S3 class now implemented fully, using vctrs package (#93, #364): drive_id class persist mundane operations, like subsetting. can longer put strings obviously invalid drive_id object. id column dribble now instance drive_id.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"dependency-changes-2-0-0","dir":"Changelog","previous_headings":"","what":"Dependency changes","title":"googledrive 2.0.0","text":"cli, lifecycle, withr new Imports. pillar vctrs new Imports, already indirect hard dependencies via tibble. mockr new Suggests. curl moves Imports Suggests, remains indirect hard dependency.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-101","dir":"Changelog","previous_headings":"","what":"googledrive 1.0.1","title":"googledrive 1.0.1","text":"CRAN release: 2020-05-05 Patch release modify test compatibility upcoming release gargle. drive_share() gains awareness \"fileOrganizer\" role (#302). Better handling filenames include characters special meaning regular expression (#292). drive_find() explicitly checks eliminates duplicate records file ID, guarding repetition paginated results returned API. seem never happen, indication . (#272, #277, #279, #281) drive_share_anyone() new convenience wrapper makes file readable “anyone link”. as_tibble() method dribble objects now passes ... , apply, example, tibble’s .name_repair argument.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-100","dir":"Changelog","previous_headings":"","what":"googledrive 1.0.0","title":"googledrive 1.0.0","text":"CRAN release: 2019-08-19 release version 1.0.0 marks two events: overall design googledrive survived ~2 years CRAN, little need change. API feature set fairly stable. changes auth interface backwards compatible. also new functionality makes less likely ’ll create multiple files name, without actually meaning .","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"auth-from-gargle-1-0-0","dir":"Changelog","previous_headings":"","what":"Auth from gargle","title":"googledrive 1.0.0","text":"googledrive’s auth functionality now comes gargle package, provides R infrastructure work Google APIs, general. transition happening several packages, bigrquery gmailr. makes user interfaces consistent makes two new token flows available googledrive: Application Default Credentials Service account tokens metadata server available VMs running GCE learn : Help drive_auth() users need Bring OAuth app API key get API credentials Non-interactive auth Auth using R browser gargle gets tokens Managing tokens securely","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"changes-that-a-user-will-notice-1-0-0","dir":"Changelog","previous_headings":"Auth from gargle","what":"Changes that a user will notice","title":"googledrive 1.0.0","text":"OAuth2 tokens now cached user level, default, instead .httr-oauth current project. recommend delete vestigial .httr-oauth files lying around googledrive projects re-authorize googledrive, .e. get new token, stored new way. googledrive uses new OAuth “app”, owned verified Google Cloud Project entitled “Tidyverse API Packages”, project name see OAuth consent screen. See new Privacy Policy details. local OAuth2 token key-value store now incorporates associated Google user indexing, makes easier switch Google identities. arguments usage drive_auth() changed. Previous signature (v0.1.3 earlier) Current signature (>= v1.0.0) full details see resources listed learn . change probably affects code way provide service account token: - Previously: drive_auth(service_token = \"/path///service-account-token.json\") (v0.1.3 earlier) - Now: drive_auth(path = \"/path///service-account-token.json\") (>= v1.0.0) Auth configuration also changed: Use drive_oauth_app() (new) drive_api_key() retrieve user-configured app API key, exist. functions longer return built-auth assets, although built-assets still exist used absence user configuration. drive_deauth() go de-authorized state, .e. send API key lieu token. drive_has_token() new helper simply reports whether token place, without triggering auth flow. small changes low-level developer-facing API: generate_request() renamed request_generate(). make_request() renamed request_make() thin wrapper around gargle::request_make() adds googledrive’s user agent. build_request() removed. can’t need request_generate(), use gargle::request_develop() gargle::request_build() directly. process_response() removed. Instead, use gargle::response_process(response), inside googledrive.","code":"drive_auth(   oauth_token = NULL,                       # use `token` now   service_token = NULL,                     # use `path` now   reset = FALSE,                               cache = getOption(\"httr_oauth_cache\"),   use_oob = getOption(\"httr_oob_default\"),   verbose = TRUE ) drive_auth(   email = gargle::gargle_oauth_email(),             # NEW!   path = NULL,                                      # was `service_token`   scopes = \"https://www.googleapis.com/auth/drive\", # NEW!   cache = gargle::gargle_oauth_cache(),   use_oob = gargle::gargle_oob_default(),   token = NULL                                      # was `oauth_token` )"},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"overwrite--na--true--false-and-drive_put-1-0-0","dir":"Changelog","previous_headings":"","what":"overwrite = NA / TRUE / FALSE and drive_put()","title":"googledrive 1.0.0","text":"Google Drive doesn’t impose 1--1 relationship files filepaths, way local file system . Therefore, working via Drive API (instead browser), ’s fairly easy create multiple Drive files name filepath, without actually meaning . perfectly valid Drive, identifies file ID, can confusing undesirable humans. googledrive v1.0.0 offers new ways fight : functions create new item rename/move existing item gained overwrite argument. drive_put() new convenience wrapper figures whether call drive_upload() drive_update(). Changes inspired #230.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"overwrite--na--true--false-1-0-0","dir":"Changelog","previous_headings":"overwrite = NA / TRUE / FALSE and drive_put()","what":"overwrite = NA / TRUE / FALSE","title":"googledrive 1.0.0","text":"functions gain overwrite argument: drive_create() whole function new drive_cp() drive_mkdir() drive_mv() drive_rename() drive_upload() default overwrite = NA corresponds current behaviour, “Just. . .”, .e. consider pre-existing files . overwrite = TRUE requests move pre-existing file target filepath trash, prior creating new item. 2 files found, error thrown, ’s clear one(s) trash. overwrite = FALSE means new item created pre-existing file filepath. Existence checks based filepath (name) can expensive. default overwrite = NA, addition backwards compatibility.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"drive_put-1-0-0","dir":"Changelog","previous_headings":"overwrite = NA / TRUE / FALSE and drive_put()","what":"drive_put()","title":"googledrive 1.0.0","text":"Sometimes file repeatedly send Drive, .e. first time run analysis, create file , re-run , update file. Previously hard express googledrive. drive_put() useful refers HTTP verb PUT: create thing doesn’t exist , , replace contents. good explanation PUT RESTful API Design – PUT vs PATCH. pseudo-code, ’s basic idea drive_put():","code":"target_filepath <- <determined from arguments `path`, `name`, and `media`> hits <- <get all Drive files at target_filepath> if (no hits) {  drive_upload(media, path, name, type, ..., verbose) } else if (exactly 1 hit) {  drive_update(hit, media, ..., verbose) } else {  ERROR }"},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"other-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Other changes","title":"googledrive 1.0.0","text":"functions support ... way pass parameters Drive API now “tidy dots semantics”: !!! supported splicing !! can used LHS :=. Full docs dynamic dots. drive_find() now sorts “recency”, default. drive_create() new function creates new empty file, optional file type specification (#258, @ianmcook). drive_mkdir() becomes thin wrapper around drive_create(), file type hard-wired “folder”. drive_mkdir(), optional parent directory now known path instead parent. consistent everything else googledrive, became obvious adding drive_create() general overwrite functionality. drive_empty_trash() now exploits correct endpoint (opposed deleting individual files) therefore much faster (#203). Colaboratory notebooks now MIME type support, terms type argument various functions (https://colab.research.google.com/). internal table known MIME types includes \"application/vnd.google.colab\", associated file extension .ipynb human-oriented nickname \"colab\" (#207). drive_endpoints() gains singular friend, drive_endpoint() returns exactly one endpoint. helpers index internal list Drive API endpoints [ [[, respectively.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"dependency-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"Dependency changes","title":"googledrive 1.0.0","text":"R 3.1 longer explicitly supported tested. general practice support current release (3.6), devel, 4 previous versions R (3.5, 3.4, 3.3, 3.2). See versions R tidyverse packages support?. gargle magrittr newly Imported. rprojroot removed Suggests, can now use version testthat recent enough offer testthat::test_path().","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-013","dir":"Changelog","previous_headings":"","what":"googledrive 0.1.3","title":"googledrive 0.1.3","text":"CRAN release: 2019-01-24 Minor patch release compatibility imminent release purrr 0.3.0.","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-012","dir":"Changelog","previous_headings":"","what":"googledrive 0.1.2","title":"googledrive 0.1.2","text":"CRAN release: 2018-10-06 Internal usage glue::collapse() modified call glue::glue_collapse() glue v1.3.0 later installed glue::collapse() otherwise. Eliminates deprecation warning emanating glue. (#222 @jimhester)","code":""},{"path":"https://googledrive.tidyverse.org/dev/news/index.html","id":"googledrive-011","dir":"Changelog","previous_headings":"","what":"googledrive 0.1.1","title":"googledrive 0.1.1","text":"CRAN release: 2017-08-28 initial CRAN release","code":""}]
